{
  "openapi": "3.0.3",
  "info": {
    "title": "HeadHunter API",
    "description": "По-русски | [Switch to English](https://api.hh.ru/openapi/en/redoc)\n\nВ OpenAPI ведется пока что только небольшая часть документации\n[Основная документация](https://github.com/hhru/api).\n\nДля поиска по документации можно использовать Ctrl+F.\n\n# Общая информация\n\n* Всё API работает по протоколу HTTPS.\n* Авторизация осуществляется по протоколу OAuth2.\n* Все данные доступны только в формате JSON.\n* Базовый URL — `https://api.hh.ru/`\n* Возможны запросы к данным [любого сайта группы компаний HeadHunter](#section/Obshaya-informaciya/Vybor-sajta)\n* <a name=\"date-format\"></a> Даты форматируются в соответствии с\n[ISO 8601](http://en.wikipedia.org/wiki/ISO_8601): `YYYY-MM-DDThh:mm:ss±hhmm`.\n\n\n<a name=\"request-requirements\"></a>\n## Требования к запросам\n\nВ запросе необходимо передавать заголовок `User-Agent`, но если ваша реализация\nhttp клиента не позволяет, можно отправить `HH-User-Agent`. Если не отправлен ни\nодин заголовок, то ответом будет `400 Bad Request`.\nУказание в заголовке названия приложения и контактной почты разработчика\nпозволит нам оперативно с вами связаться в случае необходимости.\nЗаголовки `User-Agent` и `HH-User-Agent` взаимозаменяемы, в случае, если вы отправите оба заголовка,\nобработан будет только `HH-User-Agent`.\n\n```\nUser-Agent: MyApp/1.0 (my-app-feedback@example.com)\n```\n\nПодробнее про [ошибки в заголовке User-Agent](https://github.com/hhru/api/blob/master/docs/errors.md#user-agent).\n\n\n<a name=\"request-body\"></a>\n## Формат тела запроса при отправке JSON\n\nДанные, передающиеся в теле запроса, должны удовлетворять требованиям:\n\n* Валидный JSON (допускается передача как минифицированного варианта, так и\npretty print варианта с дополнительными пробелами и сбросами строк).\n* Рекомендуется использование кодировки UTF-8 без дополнительного экранирования\n(`{\"name\": \"Иванов Иван\"}`).\n* Также возможно использовать ascii кодировку с экранированием\n(`{\"name\": \"\\u0418\\u0432\\u0430\\u043d\\u043e\\u0432 \\u0418\\u0432\\u0430\\u043d\"}`).\n* К типам данных в определённым полях накладываются дополнительные условия,\nописанные в каждом конкретном методе. В JSON типами данных являются `string`,\n`number`, `boolean`, `null`, `object`, `array`.\n\n### Ответ\nОтвет свыше определенной длины будет сжиматься методом gzip.\n\n### Ошибки и коды ответов\n\nAPI широко использует информирование при помощи кодов ответов.\nПриложение должно корректно их обрабатывать.\n\nВ случае неполадок и сбоев, возможны ответы с кодом `503` и `500`.\n\nПри каждой ошибке, помимо кода ответа, в теле ответа может быть выдана\nдополнительная информация, позволяющая разработчику понять\nпричину соответствующего ответа.\n\n[Более подробно про возможные ошибки](https://github.com/hhru/api/blob/master/docs/errors.md).\n\n\n## Недокументированные поля и параметры запросов\n\nВ ответах и параметрах API можно найти ключи, не описанные в документации.\nОбычно это означает, что они оставлены для совместимости со старыми версиями.\nИх использование не рекомендуется. Если ваше приложение использует такие ключи,\nперейдите на использование актуальных ключей, описанных в документации.\n\n\n## Пагинация\n\nК любому запросу, подразумевающему выдачу списка объектов, можно в параметрах\nуказать `page=N&per_page=M`. Нумерация идёт с нуля, по умолчанию выдаётся\nпервая (нулевая) страница с 20 объектами на странице. Во всех ответах, где\nдоступна пагинация, единообразный корневой объект:\n\n```json\n{\n  \"found\": 1,\n  \"per_page\": 1,\n  \"pages\": 1,\n  \"page\": 0,\n  \"items\": [{}]\n}\n```\n## Выбор сайта\n\nAPI HeadHunter позволяет получать данные со всех сайтов группы компании\nHeadHunter.\n\nВ частности:\n\n* hh.ru\n* rabota.by\n* hh1.az\n* hh.uz\n* hh.kz\n* headhunter.ge\n* headhunter.kg\n\nЗапросы к данным на всех сайтах следует направлять на `https://api.hh.ru/`.\n\nПри необходимости учесть специфику сайта, можно добавить в запрос параметр\n`?host=`. По умолчанию используется `hh.ru`.\n\nНапример, для получения [локализаций](https://api.hh.ru/openapi/redoc#tag/Obshie-spravochniki/operation/get-locales), доступных на hh.kz необходимо\nсделать GET запрос на `https://api.hh.ru/locales?host=hh.kz`.\n\n## CORS (Cross-Origin Resource Sharing)\n\nAPI поддерживает технологию CORS для запроса данных из\nбраузера с произвольного домена. Этот метод более предпочтителен, чем\nиспользование JSONP. Он не ограничен методом GET. Для отладки CORS доступен\n[специальный метод](https://github.com/hhru/api/blob/master/docs/cors.md). Для использования JSONP передайте параметр\n`?callback=callback_name`.\n\n* [CORS specification on w3.org](http://www.w3.org/TR/cors/)\n* [HTML5Rocks CORS Tutorial](http://www.html5rocks.com/en/tutorials/cors/)\n* [CORS on dev.opera.com](http://dev.opera.com/articles/view/dom-access-control-using-cross-origin-resource-sharing/)\n* [CORS on caniuse.com](http://caniuse.com/#feat=cors)\n* [CORS on en.wikipedia.org](http://en.wikipedia.org/wiki/Cross-origin_resource_sharing)\n\n\n## Внешние ссылки на статьи и стандарты\n\n* [HTTP/1.1](http://tools.ietf.org/html/rfc2616)\n* [JSON](http://json.org/)\n* [URI Template](http://tools.ietf.org/html/rfc6570)\n* [OAuth 2.0](http://tools.ietf.org/html/rfc6749)\n* [REST](http://www.ics.uci.edu/~fielding/pubs/dissertation/rest_arch_style.htm)\n* [ISO 8601](http://en.wikipedia.org/wiki/ISO_8601)\n\n# Авторизация\n\nAPI поддерживает следующие уровни авторизации:\n  - [авторизация приложения](#tag/Avtorizaciya-prilozheniya)\n  - [авторизация пользователя](#section/Avtorizaciya/Avtorizaciya-polzovatelya)\n\n* [Авторизация пользователя](#section/Avtorizaciya/Avtorizaciya-polzovatelya)\n  * [Правила формирования специального redirect_uri](#section/Avtorizaciya/Pravila-formirovaniya-specialnogo-redirect_uri)\n  * [Процесс авторизации](#section/Avtorizaciya/Process-avtorizacii)\n  * [Успешное получение временного `authorization_code`](#get-authorization_code)\n  * [Получение access и refresh токенов](#section/Avtorizaciya/Poluchenie-access-i-refresh-tokenov)\n* [Обновление пары access и refresh токенов](#section/Avtorizaciya/Obnovlenie-pary-access-i-refresh-tokenov)\n* [Инвалидация токена](#tag/Avtorizaciya-rabotodatelya/operation/invalidate-token)\n* [Запрос авторизации под другим пользователем](#section/Avtorizaciya/Zapros-avtorizacii-pod-drugim-polzovatelem)\n* [Авторизация под разными рабочими аккаунтами](#section/Avtorizaciya/Avtorizaciya-pod-raznymi-rabochimi-akkauntami)\n* [Авторизация приложения](#tag/Avtorizaciya-prilozheniya)    \n\n\n## Авторизация пользователя\nДля выполнения запросов от имени пользователя необходимо пользоваться токеном пользователя.\n\nВ начале приложению необходимо направить пользователя (открыть страницу) по адресу:\n\n```\nhttps://hh.ru/oauth/authorize?\nresponse_type=code&\nclient_id={client_id}&\nstate={state}&\nredirect_uri={redirect_uri}\n```\n\nОбязательные параметры:\n\n* `response_type=code` — указание на способ получения авторизации, используя `authorization code`\n* `client_id` — идентификатор, полученный при создании приложения\n\n\nНеобязательные параметры:\n\n* `state` — в случае указания, будет включен в ответный редирект.\nЭто позволяет исключить возможность взлома путём подделки межсайтовых\nзапросов. Подробнее об этом:\n[RFC 6749. Section 10.12](http://tools.ietf.org/html/rfc6749#section-10.12)\n* `redirect_uri` — uri для перенаправления пользователя после\nавторизации. Если не указать, используется из настроек приложения. При\nналичии происходит валидация значения. Вероятнее всего, потребуется сделать\nurlencode значения параметра.\n\n## Правила формирования специального redirect_uri\n\nК примеру, если в настройках сохранен `http://example.com/oauth`, то разрешено\nуказывать:\n\n* `http://www.example.com/oauth` — поддомен;\n* `http://www.example.com/oauth/sub/path` — уточнение пути;\n* `http://example.com/oauth?lang=RU` — дополнительный параметр;\n* `http://www.example.com/oauth/sub/path?lang=RU` — всё вместе.\n\nЗапрещено:\n\n* `https://example.com/oauth` — различные протоколы;\n* `http://wwwexample.com/oauth` — различные домены;\n* `http://wwwexample.com/` — другой путь;\n* `http://example.com/oauths` — другой путь;\n* `http://example.com:80/oauths` — указание изначально отсутствующего порта;\n\n## Процесс авторизации\n\nЕсли пользователь не авторизован на сайте, ему будет показана форма\nавторизации на сайте. После прохождения авторизации на сайте, пользователю\nбудет выведена форма с запросом разрешения доступа вашего приложения к его\nперсональным данным.\n\nЕсли пользователь не разрешает доступ приложению, пользователь будет\nперенаправлен на указанный `redirect_uri` с `?error=access_denied` и\n`state={state}`, если таковой был указан при первом запросе.\n\n<a name=\"get-authorization_code\"></a>\n### Успешное получение временного `authorization_code`\n\nВ случае разрешения прав, в редиректе будет указан\nвременный `authorization_code`:\n\n```http\nHTTP/1.1 302 FOUND\nLocation: {redirect_uri}?code={authorization_code}\n```\n\nЕсли пользователь авторизован на сайте и доступ данному приложению однажды\nранее выдан, ответом будет сразу вышеописанный редирект с `authorization_code`\n(без показа формы логина и выдачи прав).\n\n## Получение access и refresh токенов\n\nПосле получения `authorization_code` приложению необходимо сделать сервер-сервер запрос `POST https://api.hh.ru/token` для обмена полученного\n`authorization_code` на `access_token` (старый запрос `POST https://hh.ru/oauth/token` считается устаревшим).\n\nВ теле запроса необходимо передать [дополнительные параметры](#required_parameters).\n\nТело запроса необходимо передавать в стандартном\n`application/x-www-form-urlencoded` с указанием соответствующего заголовка\n`Content-Type`.\n\n`authorization_code` имеет довольно короткий срок жизни, при его истечении\nнеобходимо запросить новый.\n\n## Обновление пары access и refresh токенов\n`access_token` также имеет срок жизни (ключ `expires_in`, в секундах), при его\nистечении приложение должно сделать запрос с `refresh_token` для получения\nнового.\n\nЗапрос необходимо делать в `application/x-www-form-urlencoded`.\n\n```\nPOST https://api.hh.ru/token\n```\n\n(старый запрос `POST https://hh.ru/oauth/token` считается устаревшим)\n\nВ теле запроса необходимо передать [дополнительные параметры](#required_parameters)\n\n`refresh_token` можно использовать только один раз и только по истечению\nсрока действия `access_token`.\n\nПосле получения новой пары access и refresh токенов, их необходимо использовать\nв дальнейших запросах в api и запросах на продление токена.\n\n## Запрос авторизации под другим пользователем\n\nВозможен следующий сценарий:\n\n1. Приложение перенаправляет пользователя на сайт с запросом авторизации.\n2. Пользователь на сайте уже авторизован и данному приложение доступ уже был\nразрешен.\n3. Пользователю будет предложена возможность продолжить работу под текущим аккаунтом,\nлибо зайти под другим аккаунтом.\n\nЕсли есть необходимость, чтобы на шаге 3 сразу происходило перенаправление (redirect) с временным токеном,\nнеобходимо добавить к запросу `/oauth/authorize...` параметр `skip_choose_account=true`.\nВ этом случае автоматически выдаётся доступ пользователю авторизованному на сайте.\n\nЕсли есть необходимость всегда показывать форму авторизации, приложение может\nдобавить к запросу `/oauth/authorize...` параметр `force_login=true`. В этом\nслучае, пользователю будет показана форма авторизации с логином и паролем\nдаже в случае, если пользователь уже авторизован.\n\nЭто может быть полезно приложениям, которые предоставляют сервис только для\nсоискателей. Если пришел пользователь-работодатель, приложение может предложить\nпользователю повторно разрешить доступ на сайте, уже указав\nдругую учетную запись.\n\nТакже, после авторизации приложение может показать пользователю сообщение:\n\n```\nВы вошли как %Имя_Фамилия%. Это не вы?\n```\nи предоставить ссылку с `force_login=true` для возможности захода под\nдругим логином.\n\n## Авторизация под разными рабочими аккаунтами\n\nДля получения списка рабочих аккаунтов менеджера и для работы под разными рабочими аккаунтами менеджера необходимо прочитать документацию по [рабочим аккаунтам менеджера](#tag/Menedzhery-rabotodatelya/operation/get-manager-accounts)\n\nВ случае компрометации токена необходимо [инвалидировать](#tag/Avtorizaciya-rabotodatelya/operation/invalidate-token) скомпрометированный токен и запросить токен заново!\n\n<!-- ReDoc-Inject: <security-definitions> -->\n",
    "termsOfService": "https://dev.hh.ru/admin/developer_agreement",
    "contact": {
      "name": "API Support",
      "url": "https://api.hh.ru/openapi/redoc",
      "email": "api@hh.ru"
    },
    "version": "1.0.0",
    "x-logo": {
      "altText": "HH Logo",
      "url": "https://hhcdn.ru/icms/10132131.svg"
    }
  },
  "servers": [
    {
      "url": "https://api.hh.ru",
      "description": "Api production server"
    }
  ],
  "paths": {
    "/resume_phone_confirm": {
      "x-name": "/resume_phone_confirm",
      "post": {
        "tags": [
          "Резюме. Работа с телефоном"
        ],
        "summary": "Подтвердить телефон кодом",
        "operationId": "confirm-phone-in-resume",
        "parameters": [
          {
            "$ref": "#/components/parameters/Locale/schema"
          },
          {
            "$ref": "#/components/parameters/Host/schema"
          },
          {
            "$ref": "#/components/parameters/HHUserAgent/schema"
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "required": [
                  "phone",
                  "confirmation_code"
                ],
                "properties": {
                  "phone": {
                    "type": "string",
                    "description": "Телефон который надо подтвердить",
                    "example": "8(454)555-55-55"
                  },
                  "confirmation_code": {
                    "type": "string",
                    "description": "Код для подтверждения",
                    "example": "5675"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Успешный ответ, номер верифицирован"
          },
          "400": {
            "description": "Ошибки в аргументах",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonBadArgumentErrors"
                }
              }
            }
          },
          "403": {
            "description": "Ошибка авторизации",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonBadAuthorizationErrors"
                }
              }
            }
          }
        }
      }
    },
    "/employers/{employer_id}/managers/{manager_id}/settings": {
      "x-name": "/employers/{employer_id}/managers/{manager_id}/settings",
      "get": {
        "tags": [
          "Менеджеры работодателя"
        ],
        "summary": "Предпочтения менеджера",
        "description": "Возвращает информацию о предпочтениях менеджера.\n\nПроще всего получить URL из поля `manager_settings_url` объекта `manager`\nв [информации о текущем пользователе](#tag/Informaciya-o-menedzhere/operation/get-current-user-info).\n\nПредпочтения менеджера *не влияют* на действия в API по умолчанию. Например, брендированный шаблон оформления\n(`default_vacancy_branded_template`) не будет применен автоматически при публикации вакансии, если шаблон не был передан.\nПриложение может использовать эту информацию для того, чтобы реализовать логику предзаполнения полей\n",
        "operationId": "get-manager-settings",
        "parameters": [
          {
            "name": "employer_id",
            "in": "path",
            "required": true,
            "description": "Идентификатор работодателя, который можно узнать [в информации о текущем пользователе](#tag/Informaciya-o-menedzhere/operation/get-current-user-info)",
            "schema": {
              "type": "string"
            },
            "example": "1455"
          },
          {
            "name": "manager_id",
            "in": "path",
            "required": true,
            "description": "Идентификатор менеджера. Можно узнать из списка [менеджеров](#tag/Menedzhery-rabotodatelya/operation/get-employer-managers)",
            "schema": {
              "type": "string"
            },
            "example": "87654321"
          },
          {
            "$ref": "#/components/parameters/Locale/schema"
          },
          {
            "$ref": "#/components/parameters/Host/schema"
          },
          {
            "$ref": "#/components/parameters/HHUserAgent/schema"
          }
        ],
        "responses": {
          "200": {
            "description": "Успешный ответ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ManagerSettings"
                }
              }
            }
          },
          "403": {
            "description": "Текущий пользователь не является менеджером",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonBadAuthorizationErrors"
                }
              }
            }
          },
          "404": {
            "description": "Менеджер не существует, либо просмотр его настроек не доступен",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonNotFoundErrors"
                }
              }
            }
          }
        }
      }
    },
    "/employers/{employer_id}/managers/{manager_id}/limits/resume": {
      "x-name": "/employers/{employer_id}/managers/{manager_id}/limits/resume",
      "get": {
        "tags": [
          "Менеджеры работодателя"
        ],
        "summary": "Дневной лимит просмотра резюме для текущего менеджера",
        "description": "Метод доступен менеджеру только для просмотра своего дневного лимита",
        "operationId": "get-employer-manager-limits",
        "parameters": [
          {
            "name": "employer_id",
            "in": "path",
            "required": true,
            "description": "Идентификатор работодателя, который можно узнать в [информации о текущем пользователе](#tag/Informaciya-o-menedzhere/operation/get-current-user-info)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "manager_id",
            "in": "path",
            "required": true,
            "description": "Идентификатор менеджера, который можно узнать в [информации о текущем пользователе](#tag/Informaciya-o-menedzhere/operation/get-current-user-info)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/Locale/schema"
          },
          {
            "$ref": "#/components/parameters/Host/schema"
          },
          {
            "$ref": "#/components/parameters/HHUserAgent/schema"
          }
        ],
        "responses": {
          "200": {
            "description": "Успешный ответ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmployerManagersEmployerManagerLimits"
                },
                "examples": {
                  "Пример ответа": {
                    "$ref": "#/components/examples/EmployerManagerLimits"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Неподходящая авторизация",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonBadAuthorizationErrors"
                }
              }
            }
          },
          "404": {
            "description": "Указанный работодатель или менеджер не существует или у текущего пользователя нет прав на просмотр информации",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonNotFoundErrors"
                }
              }
            }
          }
        }
      }
    },
    "/employers/{employer_id}/addresses": {
      "x-name": "/employers/{employer_id}/addresses",
      "get": {
        "tags": [
          "Адреса работодателя",
          "Адреса работодателя на уровне работодателя"
        ],
        "summary": "Список адресов работодателя",
        "description": "Возвращает список адресов работодателя. Для компаний с большим количеством адресов, возможна ситуация, когда между созданием адреса и его чтением будет задержка. То есть, только что созданный адрес не будет содержаться в теле ответа",
        "operationId": "get-employer-addresses",
        "parameters": [
          {
            "name": "employer_id",
            "in": "path",
            "required": true,
            "description": "Идентификатор работодателя",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "changed_after",
            "in": "query",
            "description": "Позволяет загрузить все адреса, изменённые после этой даты (добавление, удаление или изменение адреса). Изменения возвращаются без пагинации. Значение указывается в формате [ISO 8601](#date-format) - `YYYY-MM-DDThh:mm:ss` или c указанием отступа для часового пояса `YYYY-MM-DDThh:mm:ss±hhmm`. Максимальное значение отступа от текущей даты - 7 дней. При передаче этого параметра, для каждого адреса в теле ответа возвращается поле `deleted`, указывающее на то, удалён ли адрес. Также, в случае передачи этого параметра, игнорируются все остальные",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d(?:\\.\\d+)?((\\+|-)[0-1][0-9]{3})?$"
            }
          },
          {
            "name": "manager_id",
            "in": "query",
            "description": "Идентификатор менеджера создавшего адрес",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "with_manager",
            "in": "query",
            "description": "Если true, ответ будет содержать информацию о менеджере создавшем адрес",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Количество элементов на странице выдачи. Поддерживаются [стандартные параметры пагинации](#section/Obshaya-informaciya/Paginaciya). Значение по умолчанию и максимальное значение per_page составляет 10000\n",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Порядковый номер страницы в выдаче. Поддерживаются [стандартные параметры пагинации](#section/Obshaya-informaciya/Paginaciya). По умолчанию нумерация начинается с 0 страницы\n",
            "schema": {
              "type": "integer"
            }
          },
          {
            "$ref": "#/components/parameters/Locale/schema"
          },
          {
            "$ref": "#/components/parameters/Host/schema"
          },
          {
            "$ref": "#/components/parameters/HHUserAgent/schema"
          }
        ],
        "responses": {
          "200": {
            "description": "Успешный ответ, в поле `items` содержится список адресов компании",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmployerAddressesEmployerAddressesResponse"
                },
                "examples": {
                  "Пример ответа": {
                    "$ref": "#/components/examples/EmployerAddresses"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Ошибка в параметрах запроса",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsEmployerAddressErrors"
                }
              }
            }
          },
          "403": {
            "description": "Текущий пользователь не имеет прав на просмотр адресов данного работодателя",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonBadAuthorizationErrors"
                }
              }
            }
          },
          "404": {
            "description": "Указанный работодатель не существует или у текущего пользователя нет прав на просмотр информации",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonNotFoundErrors"
                }
              }
            }
          }
        }
      }
    },
    "/employers/{employer_id}/managers": {
      "x-name": "/employers/{employer_id}/managers",
      "get": {
        "tags": [
          "Менеджеры работодателя",
          "Менеджеры работодателя на уровне работодателя"
        ],
        "summary": "Список менеджеров работодателя",
        "operationId": "get-employer-managers",
        "parameters": [
          {
            "name": "employer_id",
            "in": "path",
            "required": true,
            "description": "Идентификатор работодателя, который можно узнать [в информации о текущем пользователе](#tag/Informaciya-o-menedzhere/operation/get-current-user-info)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Номер страницы",
            "schema": {
              "type": "number",
              "default": "0"
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Количество элементов",
            "schema": {
              "type": "number",
              "default": "200",
              "maximum": 200.0
            }
          },
          {
            "$ref": "#/components/parameters/Locale/schema"
          },
          {
            "$ref": "#/components/parameters/Host/schema"
          },
          {
            "$ref": "#/components/parameters/HHUserAgent/schema"
          }
        ],
        "responses": {
          "200": {
            "description": "Успешный ответ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmployerManagersResponse"
                },
                "examples": {
                  "Пример ответа": {
                    "$ref": "#/components/examples/EmployerManagers"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Текущий пользователь не имеет прав на просмотр менеджеров данного работодателя",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonBadAuthorizationErrors"
                }
              }
            }
          },
          "404": {
            "description": "Указанный работодатель не существует или у текущего пользователя нет прав на просмотр информации",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonNotFoundErrors"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Менеджеры работодателя"
        ],
        "summary": "Добавление менеджера",
        "operationId": "add-employer-manager",
        "parameters": [
          {
            "name": "employer_id",
            "in": "path",
            "required": true,
            "description": "Идентификатор работодателя. Чтобы получить его, используйте метод [Информация о текущем пользователе](#tag/Informaciya-o-menedzhere/operation/get-current-user-info)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/Locale/schema"
          },
          {
            "$ref": "#/components/parameters/Host/schema"
          },
          {
            "$ref": "#/components/parameters/HHUserAgent/schema"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmployerManagersAddEmployerManager"
              },
              "examples": {
                "Пример запроса": {
                  "$ref": "#/components/examples/AddEmployerManager"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Менеджер добавлен",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmployerManagersEmployerManagerId"
                },
                "examples": {
                  "Пример ответа": {
                    "$ref": "#/components/examples/EmployerManagerId"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Параметры во входном JSON переданы с ошибкой",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsEmployerManagerBadArgumentErrors"
                }
              }
            }
          },
          "403": {
            "description": "Неподходящая авторизация или другие причины",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsEmployerManagerBadAuthorizationErrors"
                }
              }
            }
          },
          "404": {
            "description": "Указанный работодатель не существует, или пользователь не имеет прав на создание менеджера",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonNotFoundErrors"
                }
              }
            }
          }
        }
      }
    },
    "/employers/{employer_id}/manager_types": {
      "x-name": "/employers/{employer_id}/manager_types",
      "get": {
        "tags": [
          "Менеджеры работодателя",
          "Менеджеры работодателя на уровне работодателя"
        ],
        "summary": "Справочник типов и прав менеджера",
        "operationId": "get-employer-manager-types",
        "parameters": [
          {
            "name": "employer_id",
            "in": "path",
            "required": true,
            "description": "Идентификатор работодателя",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/Locale/schema"
          },
          {
            "$ref": "#/components/parameters/Host/schema"
          },
          {
            "$ref": "#/components/parameters/HHUserAgent/schema"
          }
        ],
        "responses": {
          "200": {
            "description": "Успешный ответ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmployerManagerTypesResponse"
                },
                "examples": {
                  "Пример ответа": {
                    "$ref": "#/components/examples/EmployerManagerTypes"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Текущий пользователь не имеет прав на просмотр типов менеджеров данного работодателя",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonBadAuthorizationErrors"
                }
              }
            }
          },
          "404": {
            "description": "Указанный работодатель не существует или у текущего пользователя нет прав на просмотр информации",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonNotFoundErrors"
                }
              }
            }
          }
        }
      }
    },
    "/manager_accounts/mine": {
      "x-name": "/manager_accounts/mine",
      "get": {
        "tags": [
          "Менеджеры работодателя"
        ],
        "summary": "Рабочие аккаунты менеджера",
        "description": "Возвращает список рабочих аккаунтов менеджера и информацию об основном и текущем аккаунте.\n\nДля работы под определенным аккаунтом необходимо передать значение account_id, полученное из списка, в заголовке:\n\n`X-Manager-Account-Id: {account_id}`\n\nИспользовать данный заголовок можно во всех методах, доступных для работодателей.\n\nВ заголовке можно передавать account_id основного аккаунта, который также подразумевается по умолчанию, при отсутствии заголовка\n",
        "operationId": "get-manager-accounts",
        "parameters": [
          {
            "$ref": "#/components/parameters/Locale/schema"
          },
          {
            "$ref": "#/components/parameters/Host/schema"
          },
          {
            "$ref": "#/components/parameters/HHUserAgent/schema"
          }
        ],
        "responses": {
          "200": {
            "description": "Успешный ответ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ManagerAccounts"
                }
              }
            }
          },
          "403": {
            "description": "Ошибка авторизации",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonBadAuthorizationErrors"
                }
              }
            }
          }
        }
      }
    },
    "/resume_should_send_sms": {
      "x-name": "/resume_should_send_sms",
      "get": {
        "tags": [
          "Резюме. Работа с телефоном"
        ],
        "summary": "Получить информацию о телефоне соискателя",
        "operationId": "get-applicant-phone-info",
        "parameters": [
          {
            "name": "phone",
            "in": "query",
            "required": true,
            "description": "Номер телефона в любом формате",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/Locale/schema"
          },
          {
            "$ref": "#/components/parameters/Host/schema"
          },
          {
            "$ref": "#/components/parameters/HHUserAgent/schema"
          }
        ],
        "responses": {
          "200": {
            "description": "Успешный ответ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResumeShouldSendSmsContainer"
                }
              }
            }
          },
          "400": {
            "description": "Ошибки в аргументах",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonBadArgumentErrors"
                }
              }
            }
          },
          "403": {
            "description": "Ошибка авторизации",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonBadAuthorizationErrors"
                }
              }
            }
          }
        }
      }
    },
    "/employers/{employer_id}/addresses/{address_id}": {
      "x-name": "/employers/{employer_id}/addresses/{address_id}",
      "get": {
        "tags": [
          "Адреса работодателя",
          "Адреса работодателя на уровне работодателя"
        ],
        "summary": "Получение адреса",
        "operationId": "get-address",
        "parameters": [
          {
            "name": "employer_id",
            "in": "path",
            "required": true,
            "description": "Идентификатор работодателя. Чтобы получить его, используйте метод [Информация о текущем пользователе](#tag/Informaciya-o-menedzhere/operation/get-current-user-info)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "address_id",
            "in": "path",
            "required": true,
            "description": "Идентификатор адреса работодателя",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "with_manager",
            "in": "query",
            "description": "Если true, ответ будет содержать информацию о менеджере создавшем адрес",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "$ref": "#/components/parameters/Locale/schema"
          },
          {
            "$ref": "#/components/parameters/Host/schema"
          },
          {
            "$ref": "#/components/parameters/HHUserAgent/schema"
          }
        ],
        "responses": {
          "200": {
            "description": "Успешный ответ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmployerAddressesEmployerAddressItem"
                },
                "examples": {
                  "Пример ответа": {
                    "$ref": "#/components/examples/EmployerAddressItem"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Неподходящая авторизация",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonBadAuthorizationErrors"
                }
              }
            }
          },
          "404": {
            "description": "Указанный работодатель или адрес не существует",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonNotFoundErrors"
                }
              }
            }
          }
        }
      }
    },
    "/employers/{employer_id}/managers/{manager_id}": {
      "x-name": "/employers/{employer_id}/managers/{manager_id}",
      "put": {
        "tags": [
          "Менеджеры работодателя"
        ],
        "summary": "Редактирование менеджера",
        "operationId": "edit-employer-manager",
        "parameters": [
          {
            "name": "employer_id",
            "in": "path",
            "required": true,
            "description": "Идентификатор работодателя, который можно узнать [в информации о текущем пользователе](#tag/Informaciya-o-menedzhere/operation/get-current-user-info)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "manager_id",
            "in": "path",
            "required": true,
            "description": "Идентификатор менеджера. Можно узнать из списка [менеджеров](#tag/Menedzhery-rabotodatelya/operation/get-employer-managers)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/Locale/schema"
          },
          {
            "$ref": "#/components/parameters/Host/schema"
          },
          {
            "$ref": "#/components/parameters/HHUserAgent/schema"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmployerManagersManagerData"
              },
              "examples": {
                "Пример запроса": {
                  "$ref": "#/components/examples/EditEmployerManagers"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Параметры менеджера отредактированы"
          },
          "400": {
            "description": "Параметры запроса переданы с ошибкой",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsEmployerManagerBadArgumentErrors"
                }
              }
            }
          },
          "403": {
            "description": "Текущий пользователь не имеет прав на редактирование менеджера или иные причины",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsEmployerManagerBadAuthorizationErrors"
                }
              }
            }
          },
          "404": {
            "description": "Указанный работодатель или менеджер не существует, или пользователь не имеет прав на редактирование менеджера",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonNotFoundErrors"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Менеджеры работодателя",
          "Менеджеры работодателя на уровне работодателя"
        ],
        "summary": "Получение информации о менеджере",
        "operationId": "get-employer-manager",
        "parameters": [
          {
            "name": "employer_id",
            "in": "path",
            "required": true,
            "description": "Идентификатор работодателя, который можно узнать в [информации о текущем пользователе](#tag/Informaciya-o-menedzhere/operation/get-current-user-info)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "manager_id",
            "in": "path",
            "required": true,
            "description": "Идентификатор менеджера",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/Locale/schema"
          },
          {
            "$ref": "#/components/parameters/Host/schema"
          },
          {
            "$ref": "#/components/parameters/HHUserAgent/schema"
          }
        ],
        "responses": {
          "200": {
            "description": "Успешный ответ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmployerManagersEmployerManagerInfo"
                },
                "examples": {
                  "Пример ответа": {
                    "$ref": "#/components/examples/EmployerManagerInfo"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Указанный работодатель или менеджер не существует или у текущего пользователя нет прав на просмотр информации",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonNotFoundErrors"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Менеджеры работодателя"
        ],
        "summary": "Удаление менеджера",
        "description": "Удаление менеджера занимает некоторое время. По этой причине, если сразу после успешного удаления менеджера вы запросите, например, список менеджеров, в ответе может вернуться удаленный менеджер",
        "operationId": "delete-employer-manager",
        "parameters": [
          {
            "name": "employer_id",
            "in": "path",
            "required": true,
            "description": "Идентификатор работодателя, который можно узнать в [информации о текущем пользователе](#tag/Informaciya-o-menedzhere/operation/get-current-user-info)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "manager_id",
            "in": "path",
            "required": true,
            "description": "Идентификатор менеджера",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "successor_id",
            "in": "query",
            "required": true,
            "description": "Идентификатор менеджера, которому передаются данные, связанные с удаляемым менеджером, в частности: вакансии, отклики, папки отобранных резюме, комментарии к соискателю, автопоиски и прочее",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/Locale/schema"
          },
          {
            "$ref": "#/components/parameters/Host/schema"
          },
          {
            "$ref": "#/components/parameters/HHUserAgent/schema"
          }
        ],
        "responses": {
          "204": {
            "description": "Успешное выполнение запроса, менеджер удалён"
          },
          "400": {
            "description": "Параметры запроса переданы с ошибкой",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsEmployerManagerBadArgumentErrors"
                }
              }
            }
          },
          "403": {
            "description": "Неподходящая авторизация или иные причины отказа",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsEmployerManagerBadAuthorizationErrors"
                }
              }
            }
          },
          "404": {
            "description": "Указанный работодатель или менеджер не существует, или пользователь не имеет прав на удаление данного менеджера",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonNotFoundErrors"
                }
              }
            }
          }
        }
      }
    },
    "/resume_phone_generate_code": {
      "x-name": "/resume_phone_generate_code",
      "post": {
        "tags": [
          "Резюме. Работа с телефоном"
        ],
        "summary": "Отправить код подтверждения для телефона резюме",
        "operationId": "send-code-for-verify-phone-in-resume",
        "parameters": [
          {
            "$ref": "#/components/parameters/Locale/schema"
          },
          {
            "$ref": "#/components/parameters/Host/schema"
          },
          {
            "$ref": "#/components/parameters/HHUserAgent/schema"
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "required": [
                  "phone"
                ],
                "properties": {
                  "phone": {
                    "type": "string",
                    "description": "Телефон на который надо отправить подтверждающий код"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Успешно отправлено",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResumePhoneGenerateCodeGenerateCode"
                }
              }
            }
          },
          "400": {
            "description": "Ошибки в аргументах",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonBadArgumentErrors"
                }
              }
            }
          },
          "403": {
            "description": "Ошибка авторизации",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonBadAuthorizationErrors"
                }
              }
            }
          }
        }
      }
    },
    "/oauth/token": {
      "x-name": "/oauth/token",
      "post": {
        "tags": [
          "Авторизация приложения",
          "Авторизация работодателя",
          "Авторизация соискателя"
        ],
        "summary": "Получение access-токена",
        "operationId": "authorize",
        "requestBody": {
          "description": "В зависимости от способа получения токена `grant_type` необходимо передавать различные наборы параметров <a name=\"required_parameters\"></a>\n",
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/AuthCode"
                  },
                  {
                    "$ref": "#/components/schemas/AuthRefreshToken"
                  },
                  {
                    "$ref": "#/components/schemas/AuthClientCredentials"
                  }
                ]
              },
              "examples": {
                "authorization_code": {
                  "value": {
                    "grant_type": "authorization_code",
                    "client_id": "ETVQdMs2n9VKw7SMXkh9nX5H",
                    "client_secret": "95dNjB8FmtxQsmygm6dtEy53",
                    "redirect_uri": "http://www.example.com/oauth",
                    "code": "29CtxMcaA8pRFDYyC8e8Gkm4"
                  }
                },
                "refresh_token": {
                  "value": {
                    "grant_type": "refresh_token",
                    "refresh_token": "xuLNvUSv7FYM4MPfXDP9aJWe"
                  }
                },
                "client_credentials": {
                  "value": {
                    "grant_type": "client_credentials",
                    "client_id": "ETVQdMs2n9VKw7SMXkh9nX5H",
                    "client_secret": "95dNjB8FmtxQsmygm6dtEy53"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Успешный ответ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthUserTokenAndAppToken"
                },
                "examples": {
                  "user auth": {
                    "value": {
                      "access_token": "exampleAccessTokenRandomSymbols012345678900000000000000000000000",
                      "token_type": "bearer",
                      "expires_in": "1209600",
                      "refresh_token": "exampleRefreshTokenRandomSymbols01234567890000000000000000000000"
                    }
                  },
                  "app auth": {
                    "value": {
                      "access_token": "exampleApplicationTokenRandomSymbols0123456789000000000000000000",
                      "token_type": "bearer"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Ошибка параметров запроса",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonBadAuthorizationBadParameters"
                },
                "examples": {
                  "account not found": {
                    "value": {
                      "summary": "Передана неправильная пара `client_id` и `client_secret`",
                      "error": "invalid_request",
                      "error_description": "account not found"
                    }
                  },
                  "account is locked": {
                    "value": {
                      "summary": "Пользовательский аккаунт заблокирован, пользователь должен обратиться в [службу поддержки сайта](https://github.com/hhru/api#feedback)",
                      "error": "invalid_request",
                      "error_description": "account is locked"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Действие запрещено",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonBadAuthorizationErrors"
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://hh.ru"
          }
        ]
      },
      "delete": {
        "tags": [
          "Авторизация работодателя",
          "Авторизация соискателя",
          "Авторизация на уровне работодателя"
        ],
        "summary": "Инвалидация токена",
        "description": "Инвалидация работает только на действующем access-токене.\nПосле инвалидации токен нельзя будет запросить с помощью refresh-токена - для работы необходимо будет заново авторизоваться в API \nТаким образом нельзя инвалидировать токен приложения <a name=\"invalidate_token\"></a>.\nВ случае компрометации токена необходимо инвалидировать скомпрометированный токен и запросить токен заново!\n",
        "operationId": "invalidate-token",
        "responses": {
          "204": {
            "$ref": "#/components/responses/SuccessNoContent",
            "description": ""
          },
          "403": {
            "description": "Запрос выполнен не с авторизацией пользователя",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonBadAuthorizationErrors"
                }
              }
            }
          }
        }
      }
    },
    "/me": {
      "x-name": "/me",
      "get": {
        "tags": [
          "Информация о соискателе",
          "Информация о менеджере",
          "Информация о приложении",
          "Информация о работодателе",
          "Информация об интеграции работодателя"
        ],
        "summary": "Информация о текущем пользователе",
        "operationId": "get-current-user-info",
        "parameters": [
          {
            "$ref": "#/components/parameters/Locale/schema"
          },
          {
            "$ref": "#/components/parameters/Host/schema"
          },
          {
            "$ref": "#/components/parameters/HHUserAgent/schema"
          }
        ],
        "responses": {
          "200": {
            "description": "Успешный ответ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MeProfile"
                }
              }
            }
          },
          "403": {
            "description": "Ошибка авторизации",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonBadAuthorizationErrors"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Информация о соискателе"
        ],
        "summary": "Редактирование информации авторизованного пользователя",
        "description": "Редактирование ФИО или изменение флага «ищу работу». Данные можно редактировать только группами",
        "operationId": "edit-current-user-info",
        "parameters": [
          {
            "$ref": "#/components/parameters/Locale/schema"
          },
          {
            "$ref": "#/components/parameters/Host/schema"
          },
          {
            "$ref": "#/components/parameters/HHUserAgent/schema"
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/MeChangeName"
                  },
                  {
                    "$ref": "#/components/schemas/MeSetInSearch"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Успешный ответ, данные переданы"
          },
          "400": {
            "description": "Переданы не все поля, или параметры относятся к разным группам",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonBadArgumentErrors"
                }
              }
            }
          },
          "403": {
            "description": "Ошибка авторизации. Пользователь не является соискателем",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonBadAuthorizationErrors"
                }
              }
            }
          }
        }
      }
    },
    "/locales/resume": {
      "x-name": "/locales/resume",
      "get": {
        "tags": [
          "Общие справочники"
        ],
        "summary": "Список доступных локалей для резюме",
        "description": "Возвращает справочник возможных локалей резюме. Подколлекция [справочника локалей](#tag/Obshie-spravochniki/operation/get-locales-for-resume).\n\nИзменив локаль, можно, например, создать резюме на английском языке\n",
        "operationId": "get-locales-for-resume",
        "parameters": [
          {
            "$ref": "#/components/parameters/Locale/schema"
          },
          {
            "$ref": "#/components/parameters/Host/schema"
          },
          {
            "$ref": "#/components/parameters/HHUserAgent/schema"
          }
        ],
        "responses": {
          "200": {
            "description": "Успешный ответ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LocalesResumeLocales"
                },
                "examples": {
                  "Пример ответа": {
                    "$ref": "#/components/examples/LocalesResumeLocales"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/locales": {
      "x-name": "/locales",
      "get": {
        "tags": [
          "Общие справочники"
        ],
        "summary": "Список доступных локалей",
        "description": "Возвращает список возможных значений (доступных локалей) в поле `id`. Список локалей будет зависеть от указанного сайта (параметр `host`). В любом запросе к API можно указывать параметр `?locale=` для передачи значения локали (языка)\n",
        "operationId": "get-locales",
        "parameters": [
          {
            "$ref": "#/components/parameters/Locale/schema"
          },
          {
            "$ref": "#/components/parameters/Host/schema"
          },
          {
            "$ref": "#/components/parameters/HHUserAgent/schema"
          }
        ],
        "responses": {
          "200": {
            "description": "Успешный ответ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LocalesLocales"
                },
                "examples": {
                  "Пример ответа": {
                    "$ref": "#/components/examples/LocalesLocales"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/suggests/positions": {
      "x-name": "/suggests/positions",
      "get": {
        "tags": [
          "Подсказки"
        ],
        "summary": "Подсказки по должностям резюме",
        "operationId": "get-positions-suggestions",
        "parameters": [
          {
            "name": "text",
            "in": "query",
            "required": true,
            "description": "Текст для поиска должности. Искомый текст должен быть длиной два или более символа и не более 3 000 символов",
            "schema": {
              "type": "string"
            },
            "example": "водитель"
          },
          {
            "$ref": "#/components/parameters/Locale/schema"
          },
          {
            "$ref": "#/components/parameters/Host/schema"
          },
          {
            "$ref": "#/components/parameters/HHUserAgent/schema"
          }
        ],
        "responses": {
          "200": {
            "description": "Успешный ответ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuggestsPositions"
                },
                "examples": {
                  "Пример ответа": {
                    "$ref": "#/components/examples/SuggestsSuggestsPositions"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Ошибки запроса",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuggestsErrors"
                }
              }
            }
          }
        }
      }
    },
    "/suggests/educational_institutions": {
      "x-name": "/suggests/educational_institutions",
      "get": {
        "tags": [
          "Подсказки"
        ],
        "summary": "Подсказки по названиям учебных заведений",
        "description": "Чтобы узнать список факультетов, обратитесь к [соответствующему методу](#tag/Obshie-spravochniki/operation/get-educational-institutions-dictionary)",
        "operationId": "get-educational-institutions-suggests",
        "parameters": [
          {
            "name": "text",
            "in": "query",
            "required": true,
            "description": "Текст для поиска учебного заведения. Искомый текст должен быть длиной два или более символа и не более 3 000 символов",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/Locale/schema"
          },
          {
            "$ref": "#/components/parameters/Host/schema"
          },
          {
            "$ref": "#/components/parameters/HHUserAgent/schema"
          }
        ],
        "responses": {
          "200": {
            "description": "Успешный ответ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuggestsEducationalInstitutions"
                },
                "examples": {
                  "Пример ответа": {
                    "$ref": "#/components/examples/SuggestsEducationalInstitutions"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Ошибки запроса",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuggestsErrors"
                }
              }
            }
          }
        }
      }
    },
    "/suggests/area_leaves": {
      "x-name": "/suggests/area_leaves",
      "get": {
        "tags": [
          "Подсказки"
        ],
        "summary": "Подсказки по регионам, являющимися листами в дереве регионов",
        "description": "Также доступна загрузка [полного дерева регионов](#tag/Obshie-spravochniki/operation/get-areas) и [части дерева от определенного элемента](#tag/Obshie-spravochniki/operation/get-areas-from-specified)",
        "operationId": "get-area-leaves-suggests",
        "parameters": [
          {
            "name": "text",
            "in": "query",
            "required": true,
            "description": "Текст для поиска региона. Искомый текст должен быть длиной два или более символа и не более 3 000 символов",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "area_id",
            "in": "query",
            "description": "Идентификатор региона из [справочника](#tag/Obshie-spravochniki/operation/get-areas). Сужает подсказки поддеревом переданного идентификатора региона",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/Locale/schema"
          },
          {
            "$ref": "#/components/parameters/Host/schema"
          },
          {
            "$ref": "#/components/parameters/HHUserAgent/schema"
          }
        ],
        "responses": {
          "200": {
            "description": "Успешный ответ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuggestsAreas"
                },
                "examples": {
                  "Пример ответа": {
                    "$ref": "#/components/examples/SuggestsSuggestsAreas"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Ошибки запроса",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuggestsErrors"
                }
              }
            }
          }
        }
      }
    },
    "/suggests/skill_set": {
      "x-name": "/suggests/skill_set",
      "get": {
        "tags": [
          "Подсказки"
        ],
        "summary": "Подсказки по ключевым навыкам",
        "operationId": "get-skill-set-suggests",
        "parameters": [
          {
            "name": "text",
            "in": "query",
            "required": true,
            "description": "Текст для поиска ключевых навыков. Искомый текст должен быть длиной два или более символа и не более 3 000 символов",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/Locale/schema"
          },
          {
            "$ref": "#/components/parameters/Host/schema"
          },
          {
            "$ref": "#/components/parameters/HHUserAgent/schema"
          }
        ],
        "responses": {
          "200": {
            "description": "Успешный ответ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuggestsSkillSet"
                },
                "examples": {
                  "Пример ответа": {
                    "$ref": "#/components/examples/SuggestsSkillSet"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Ошибки запроса",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuggestsErrors"
                }
              }
            }
          }
        }
      }
    },
    "/suggests/vacancy_positions": {
      "x-name": "/suggests/vacancy_positions",
      "get": {
        "tags": [
          "Подсказки"
        ],
        "summary": "Подсказки по должностям вакансий",
        "operationId": "get-vacancy-positions-suggests",
        "parameters": [
          {
            "name": "text",
            "in": "query",
            "required": true,
            "description": "Текст для поиска должности в вакансии. Искомый текст должен быть длиной два или более символа и не более 3 000 символов",
            "schema": {
              "type": "string"
            },
            "example": "водитель"
          },
          {
            "$ref": "#/components/parameters/Locale/schema"
          },
          {
            "$ref": "#/components/parameters/Host/schema"
          },
          {
            "$ref": "#/components/parameters/HHUserAgent/schema"
          }
        ],
        "responses": {
          "200": {
            "description": "Успешный ответ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuggestsVacancyPositions"
                }
              }
            }
          },
          "400": {
            "description": "Ошибки запроса",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuggestsErrors"
                }
              }
            }
          }
        }
      }
    },
    "/suggests/professional_roles": {
      "x-name": "/suggests/professional_roles",
      "get": {
        "tags": [
          "Подсказки"
        ],
        "summary": "Подсказки по профессиональным ролям",
        "operationId": "get-professional-roles-suggests",
        "parameters": [
          {
            "name": "text",
            "in": "query",
            "required": true,
            "description": "Текст для поиска профессиональной роли. Искомый текст должен быть длиной два или более символа и не более 3 000 символов",
            "schema": {
              "type": "string"
            },
            "example": "водитель"
          },
          {
            "$ref": "#/components/parameters/Locale/schema"
          },
          {
            "$ref": "#/components/parameters/Host/schema"
          },
          {
            "$ref": "#/components/parameters/HHUserAgent/schema"
          }
        ],
        "responses": {
          "200": {
            "description": "Успешный ответ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuggestsProfessionalRoles"
                }
              }
            }
          },
          "400": {
            "description": "Ошибки запроса",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuggestsErrors"
                }
              }
            }
          }
        }
      }
    },
    "/suggests/resume_search_keyword": {
      "x-name": "/suggests/resume_search_keyword",
      "get": {
        "tags": [
          "Подсказки"
        ],
        "summary": "Подсказки по ключевым словам поиска резюме",
        "description": "Предназначены для использования в поле `text` при [поиске резюме](#tag/Poisk-rezyume/operation/search-for-resumes). Содержит названия должностей, компаний и другие фразы, часто используемые при поиске резюме",
        "operationId": "get-resume-search-keywords-suggests",
        "parameters": [
          {
            "name": "text",
            "in": "query",
            "required": true,
            "description": "Текст для поиска ключевого слова. Искомый текст должен быть длиной два или более символа и не более 3 000 символов",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/Locale/schema"
          },
          {
            "$ref": "#/components/parameters/Host/schema"
          },
          {
            "$ref": "#/components/parameters/HHUserAgent/schema"
          }
        ],
        "responses": {
          "200": {
            "description": "Успешный ответ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuggestsSearchKeyword"
                },
                "examples": {
                  "Пример ответа": {
                    "$ref": "#/components/examples/SuggestsResumeSearchKeyword"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Ошибки запроса",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuggestsErrors"
                }
              }
            }
          }
        }
      }
    },
    "/suggests/areas": {
      "x-name": "/suggests/areas",
      "get": {
        "tags": [
          "Подсказки"
        ],
        "summary": "Подсказки по регионам",
        "description": "Также доступна загрузка [полного дерева регионов](#tag/Obshie-spravochniki/operation/get-areas) и [части дерева от определенного элемента](#tag/Obshie-spravochniki/operation/get-areas-from-specified)",
        "operationId": "get-areas-suggests",
        "parameters": [
          {
            "name": "text",
            "in": "query",
            "required": true,
            "description": "Текст для поиска региона. Искомый текст должен быть длиной два или более символа и не более 3 000 символов",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "area_id",
            "in": "query",
            "description": "Идентификатор региона из [справочника](#tag/Obshie-spravochniki/operation/get-areas). Сужает подсказки поддеревом переданного идентификатора региона",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "include_parent",
            "in": "query",
            "description": "Включать ли в ответ регион, переданный в параметре `area_id`, если он подходит по искомому тексту",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "$ref": "#/components/parameters/Locale/schema"
          },
          {
            "$ref": "#/components/parameters/Host/schema"
          },
          {
            "$ref": "#/components/parameters/HHUserAgent/schema"
          }
        ],
        "responses": {
          "200": {
            "description": "Успешный ответ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuggestsAreas"
                },
                "examples": {
                  "Пример ответа": {
                    "$ref": "#/components/examples/SuggestsSuggestsAreas"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Ошибки запроса",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuggestsErrors"
                }
              }
            }
          }
        }
      }
    },
    "/suggests/vacancy_search_keyword": {
      "x-name": "/suggests/vacancy_search_keyword",
      "get": {
        "tags": [
          "Подсказки"
        ],
        "summary": "Подсказки по ключевым словам поиска вакансий",
        "description": "Предназначены для использования в поле `text` при [поиске вакансий](#tag/Poisk-vakansij/operation/get-vacancies). Содержит названия должностей, компаний и другие фразы, часто используемые при поиске вакансий",
        "operationId": "get-vacancy-search-keywords",
        "parameters": [
          {
            "name": "text",
            "in": "query",
            "required": true,
            "description": "Текст для поиска ключевого слова. Искомый текст должен быть длиной два или более символа и не более 3 000 символов",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/Locale/schema"
          },
          {
            "$ref": "#/components/parameters/Host/schema"
          },
          {
            "$ref": "#/components/parameters/HHUserAgent/schema"
          }
        ],
        "responses": {
          "200": {
            "description": "Успешный ответ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuggestsSearchKeyword"
                },
                "examples": {
                  "Пример ответа": {
                    "$ref": "#/components/examples/SuggestsVacancySearchKeyword"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Ошибки запроса",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuggestsErrors"
                }
              }
            }
          }
        }
      }
    },
    "/suggests/fields_of_study": {
      "x-name": "/suggests/fields_of_study",
      "get": {
        "tags": [
          "Подсказки"
        ],
        "summary": "Подсказки по специализациям",
        "operationId": "get-fields-of-study-suggestions",
        "parameters": [
          {
            "name": "text",
            "in": "query",
            "required": true,
            "description": "Текст для поиска специализаций. Искомый текст должен быть длиной два или более символа и не более 3 000 символов",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/Locale/schema"
          },
          {
            "$ref": "#/components/parameters/Host/schema"
          },
          {
            "$ref": "#/components/parameters/HHUserAgent/schema"
          }
        ],
        "responses": {
          "200": {
            "description": "Успешный ответ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuggestsFieldsOfStudy"
                },
                "examples": {
                  "Пример ответа": {
                    "$ref": "#/components/examples/SuggestsFieldsOfStudy"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Ошибки запроса",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuggestsErrors"
                }
              }
            }
          }
        }
      }
    },
    "/suggests/companies": {
      "x-name": "/suggests/companies",
      "get": {
        "tags": [
          "Подсказки"
        ],
        "summary": "Подсказки по зарегистрированным организациям",
        "description": "Данные из этой подсказки можно использовать, например, для выбора компании при заполнении опыта работы [в резюме](#tag/Rezyume.-Sozdanie-i-obnovlenie). Чтобы найти организации, которые могут публиковать вакансии, используйте [поиск](#tag/Rabotodatel/operation/search-employer)",
        "operationId": "get-registered-companies-suggests",
        "parameters": [
          {
            "name": "text",
            "in": "query",
            "required": true,
            "description": "Текст для поиска организации. Искомый текст должен быть длиной два или более символа и не более 3 000 символов",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/Locale/schema"
          },
          {
            "$ref": "#/components/parameters/Host/schema"
          },
          {
            "$ref": "#/components/parameters/HHUserAgent/schema"
          }
        ],
        "responses": {
          "200": {
            "description": "Успешный ответ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuggestsCompanies"
                },
                "examples": {
                  "Пример ответа": {
                    "$ref": "#/components/examples/SuggestsCompanies"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Ошибки запроса",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuggestsErrors"
                }
              }
            }
          }
        }
      }
    },
    "/employers/{employer_id}/services/payable_api_actions/active": {
      "x-name": "/employers/{employer_id}/services/payable_api_actions/active",
      "get": {
        "tags": [
          "Услуги работодателя"
        ],
        "summary": "Информация по активным услугам API для платных методов",
        "description": "Каждая подключенная услуга отображается отдельным объектом в массиве `items`, даже при условии, что подключено несколько услуг одного типа.\nЕсли у работодателя нет активных услуг, то в ответе придет пустой массив `items`\n",
        "operationId": "get-payable-api-actions",
        "parameters": [
          {
            "name": "employer_id",
            "in": "path",
            "required": true,
            "description": "Идентификатор работодателя",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/Locale/schema"
          },
          {
            "$ref": "#/components/parameters/Host/schema"
          },
          {
            "$ref": "#/components/parameters/HHUserAgent/schema"
          }
        ],
        "responses": {
          "200": {
            "description": "Успешный ответ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmployerServicesEmployerServices"
                },
                "examples": {
                  "Пример ответа": {
                    "$ref": "#/components/examples/ServicesEmployerServices"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Текущий пользователь не является работодателем",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonBadAuthorizationErrors"
                }
              }
            }
          },
          "404": {
            "description": "Указанный работодатель не существует или у текущего пользователя нет прав на просмотр информации",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonNotFoundErrors"
                }
              }
            }
          }
        }
      }
    },
    "/employers/{employer_id}/managers/{manager_id}/method_access": {
      "x-name": "/employers/{employer_id}/managers/{manager_id}/method_access",
      "get": {
        "tags": [
          "Услуги работодателя"
        ],
        "summary": "Проверка доступа к платным методам",
        "description": "Начиная с 16 июля 2018 года, некоторые методы API HH для работодателей стали платными.\n\nТакие методы отмечены в [оглавлении GitHub](https://github.com/hhru/api/blob/master/README.md#content) лейблом <img src=\"http://hhru.github.io/api/badges/emp_paid.png\" alt=\"employer with paid access\" />\n\nЧтобы приобрести доступ к платным методам, обратитесь к своему персональному менеджеру.\n\n> Если вы работаете от имени нескольких учетных записей работодателя, проверьте [информацию о подключенных услугах](#tag/Uslugi-rabotodatelya/operation/get-payable-api-actions) — каждой учетной записи должен быть предоставлен доступ к платным методам API. При отсутствии доступа будет выдана ошибка `403 Forbidden`.\n\nМетод возвращает информацию о доступе к группам платных методов. Существующие группы:\n\n1. Наличие доступа к методам резюме:\n  * [Просмотр резюме](#tag/Prosmotr-rezyume/operation/get-resume).\n  * [Работа с откликами](https://github.com/hhru/api/blob/master/docs/employer_negotiations.md).\n  * [Переписка с соискателем](https://github.com/hhru/api/blob/master/docs/employer_negotiations.md#get-messages).\n2. Наличие доступа к методам поиска вакансий:\n  * [Поиск резюме](#tag/Poisk-rezyume/operation/search-for-resumes).\n  * [Сохраненные поиски резюме](#tag/Sohranennye-poiski-rezyume/operation/get-saved-resume-searches).\n3. Наличие доступа к [просмотру резюме](#tag/Prosmotr-rezyume/operation/get-resume), у которого есть отклик или приглашение.\n4. Наличие доступа к [просмотру резюме](#tag/Prosmotr-rezyume/operation/get-resume), найденных через [поиск по базе](#tag/Poisk-rezyume/operation/search-for-resumes).\n\n**Внимание!** Изменился доступ к контактной информации резюме, подробнее [о новой модели работы с базой резюме](https://github.com/hhru/api/blob/master/docs/payable/resume.md)\n",
        "operationId": "get-payable-api-method-access",
        "parameters": [
          {
            "name": "employer_id",
            "in": "path",
            "required": true,
            "description": "Идентификатор работодателя. Можно узнать в [информации о текущем пользователе](#tag/Informaciya-o-menedzhere/operation/get-current-user-info)\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "manager_id",
            "in": "path",
            "required": true,
            "description": "Идентификатор менеджера. Можно узнать в [информации о текущем пользователе](#tag/Informaciya-o-menedzhere/operation/get-current-user-info)\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/Locale/schema"
          },
          {
            "$ref": "#/components/parameters/Host/schema"
          },
          {
            "$ref": "#/components/parameters/HHUserAgent/schema"
          }
        ],
        "responses": {
          "200": {
            "description": "Успешный ответ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmployerServicesMethodAccess"
                },
                "examples": {
                  "Пример ответа": {
                    "$ref": "#/components/examples/ServicesMethodAccess"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Текущий пользователь не является работодателем",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonBadAuthorizationErrors"
                }
              }
            }
          },
          "404": {
            "description": "Указанный работодатель или менеджер не найден",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonNotFoundErrors"
                }
              }
            }
          }
        }
      }
    },
    "/saved_searches/vacancies": {
      "x-name": "/saved_searches/vacancies",
      "get": {
        "tags": [
          "Сохраненные поиски вакансий"
        ],
        "summary": "Список сохраненных поисков вакансий",
        "operationId": "get-saved-vacancy-searches",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Номер страницы (считается от 0, по умолчанию - 0)",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Количество элементов (по умолчанию - 10, максимальное значение - 10)",
            "schema": {
              "type": "number"
            }
          },
          {
            "$ref": "#/components/parameters/Locale/schema"
          },
          {
            "$ref": "#/components/parameters/Host/schema"
          },
          {
            "$ref": "#/components/parameters/HHUserAgent/schema"
          }
        ],
        "responses": {
          "200": {
            "description": "Успешный ответ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SavedSearchesSavedSearchResponse"
                },
                "examples": {
                  "Пример ответа": {
                    "$ref": "#/components/examples/SavedSearchesSavedSearchesVacancies"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Текущий пользователь не является соискателем",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonBadAuthorizationErrors"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Сохраненные поиски вакансий"
        ],
        "summary": "Создание нового сохраненного поиска вакансий",
        "description": "Некоторые параметры принимают множественные значения: `key=value&key=value`.\n\nПри указании параметров пагинации (`page`, `per_page`) работает ограничение: глубина возвращаемых результатов не может быть больше 2000. Например, возможен запрос `per_page=10&page=199` (выдача с 1991 по 2000 вакансию), но запрос с `per_page=10&page=200` вернёт ошибку (выдача с 2001 до 2010 вакансию)\n",
        "operationId": "create-saved-vacancy-search",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Номер страницы (считается от 0, по умолчанию - 0)",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Количество элементов (по умолчанию - 10, максимальное значение - 100)",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "text",
            "in": "query",
            "description": "Переданное значение ищется в полях вакансии, указанных в параметре `search_field`. Доступен [язык запросов](https://hh.ru/article/1175). Специально для этого поля есть [автодополнение](#tag/Podskazki/operation/get-vacancy-search-keywords)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search_field",
            "in": "query",
            "description": "Область поиска. Справочник с возможными значениями: `vacancy_search_fields` в [/dictionaries](#tag/Obshie-spravochniki/operation/get-dictionaries).\nПо умолчанию, используются все поля. Можно указать несколько значений\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "experience",
            "in": "query",
            "description": "Опыт работы. Необходимо передавать `id` из справочника `experience` в [/dictionaries](#tag/Obshie-spravochniki/operation/get-dictionaries). Можно указать несколько значений\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "employment",
            "in": "query",
            "description": "Тип занятости. Необходимо передавать `id` из справочника `employment` в [/dictionaries](#tag/Obshie-spravochniki/operation/get-dictionaries). Можно указать несколько значений\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "schedule",
            "in": "query",
            "description": "График работы. Необходимо передавать `id` из справочника `schedule` в [/dictionaries](#tag/Obshie-spravochniki/operation/get-dictionaries). Можно указать несколько значений\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "area",
            "in": "query",
            "description": "Регион. Необходимо передавать `id` из справочника [/areas](#tag/Obshie-spravochniki/operation/get-areas). Можно указать несколько значений\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "metro",
            "in": "query",
            "description": "Ветка или станция метро. Необходимо передавать `id` из справочника [/metro](#tag/Obshie-spravochniki/operation/get-metro-stations). Можно указать несколько значений\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "professional_role",
            "in": "query",
            "description": "Профессиональная область. Необходимо передавать `id` из справочника [/professional_roles](#tag/Obshie-spravochniki/operation/get-professional-roles-dictionary)\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "industry",
            "in": "query",
            "description": "Индустрия компании, разместившей вакансию. Необходимо передавать `id` из справочника [/industries](#tag/Obshie-spravochniki/operation/get-industries). Можно указать несколько значений\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "employer_id",
            "in": "query",
            "description": "Идентификатор [работодателя](#tag/Rabotodatel). Можно указать несколько значений\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "currency",
            "in": "query",
            "description": "Код валюты. Справочник с возможными значениями: `currency` (ключ `code`) в [/dictionaries](#tag/Obshie-spravochniki/operation/get-dictionaries). Имеет смысл указывать только совместно с параметром `salary`\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "salary",
            "in": "query",
            "description": "Размер заработной платы. Если указано это поле, но не указано `currency`, то для `currency` используется значение RUR.\n\nПри указании значения будут найдены вакансии, в которых вилка зарплаты близка к указанной в запросе. При этом значения пересчитываются по текущим курсам ЦБ РФ. Например, при указании `salary=100&currency=EUR` будут найдены вакансии, где вилка зарплаты указана в рублях и после пересчёта в Евро близка к 100 EUR.\n\nПо умолчанию будут также найдены вакансии, в которых вилка зарплаты не указана, чтобы такие вакансии отфильтровать, используйте `only_with_salary=true`\n",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "label",
            "in": "query",
            "description": "Фильтр по меткам вакансий. Необходимо передавать `id` из справочника `vacancy_label` в [/dictionaries](#tag/Obshie-spravochniki/operation/get-dictionaries). Можно указать несколько значений\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "only_with_salary",
            "in": "query",
            "description": "Показывать вакансии только с указанием зарплаты. По умолчанию `false`\n",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "period",
            "in": "query",
            "description": "Количество дней, в пределах которых производится поиск по вакансиям\n",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "date_from",
            "in": "query",
            "description": "Дата, которая ограничивает снизу диапазон дат публикации вакансий. Нельзя передавать вместе с параметром `period`.\n\nЗначение указывается в формате `ISO 8601 - YYYY-MM-DD` или с точность до секунды `YYYY-MM-DDThh:mm:ss±hhmm`. Указанное значение будет округлено до ближайших пяти минут\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "date_to",
            "in": "query",
            "description": "Дата, которая ограничивает сверху диапазон дат публикации вакансий. Нельзя передавать вместе с параметром `period`.\n\nЗначение указывается в формате `ISO 8601 - YYYY-MM-DD` или с точность до секунды `YYYY-MM-DDThh:mm:ss±hhmm`. Указанное значение будет округлено до ближайших пяти минут\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "top_lat",
            "in": "query",
            "description": "Верхняя граница широты.\n\nПри поиске используется значение указанного в вакансии адреса. Принимаемое значение — градусы в виде десятичной дроби.\n\nНеобходимо передавать одновременно все четыре параметра гео-координат, иначе вернется ошибка\n",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "bottom_lat",
            "in": "query",
            "description": "Нижняя граница широты.\n\nПри поиске используется значение указанного в вакансии адреса. Принимаемое значение — градусы в виде десятичной дроби.\n\nНеобходимо передавать одновременно все четыре параметра гео-координат, иначе вернется ошибка\n",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "left_lng",
            "in": "query",
            "description": "Левая граница долготы.\n\nПри поиске используется значение указанного в вакансии адреса. Принимаемое значение — градусы в виде десятичной дроби.\n\nНеобходимо передавать одновременно все четыре параметра гео-координат, иначе вернется ошибка\n",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "right_lng",
            "in": "query",
            "description": "Правая граница долготы.\n\nПри поиске используется значение указанного в вакансии адреса. Принимаемое значение — градусы в виде десятичной дроби.\n\nНеобходимо передавать одновременно все четыре параметра гео-координат, иначе вернется ошибка\n",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "order_by",
            "in": "query",
            "description": "Сортировка списка вакансий. Справочник с возможными значениями: `vacancy_search_order` в [/dictionaries](#tag/Obshie-spravochniki/operation/get-dictionaries).\n\nЕсли выбрана сортировка по удалённости от гео-точки `distance`, необходимо также задать её координаты: `sort_point_lat`, `sort_point_lng`\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort_point_lat",
            "in": "query",
            "description": "Значение географической широты точки, по расстоянию от которой будут отсортированы вакансии. Необходимо указывать только, если `order_by` установлено в `distance`\n",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "sort_point_lng",
            "in": "query",
            "description": "Значение географической долготы точки, по расстоянию от которой будут отсортированы вакансии. Необходимо указывать только, если `order_by` установлено в `distance`\n",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "clusters",
            "in": "query",
            "description": "Возвращать ли [кластеры для данного поиска](#tag/Poisk-vakansij/Klastery-v-poiske-vakansij). По умолчанию — `false`\n",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "describe_arguments",
            "in": "query",
            "description": "Возвращать ли описание использованных параметров поиска. Успешный ответ будет содержать поле [`arguments`]((#tag/Poisk-vakansij/operation/get-vacancies))). \nПо умолчанию — `false`\n",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "no_magic",
            "in": "query",
            "description": "Если значение `true` — автоматическое преобразование вакансий отключено. По умолчанию – false.\n\nПри включённом автоматическом преобразовании, будет предпринята попытка изменить текстовый запрос пользователя на набор параметров. Например, запрос `text=москва бухгалтер 100500` будет преобразован в `text=бухгалтер&only_with_salary=true&area=1&salary=100500`\n",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "premium",
            "in": "query",
            "description": "Если значение `true` — в сортировке вакансий будет учтены премиум вакансии. Такая сортировка используется на сайте. По умолчанию — false\n",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "responses_count_enabled",
            "in": "query",
            "description": "Если значение `true` — дополнительное поле `counters` с количеством откликов для вакансии включено. По-умолчанию — `false`\n",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "part_time",
            "in": "query",
            "description": "Вакансии для подработки. Возможные значения:\n\n* Все элементы из `working_days` в [/dictionaries](#tag/Obshie-spravochniki/operation/get-dictionaries).\n* Все элементы из `working_time_intervals` в [/dictionaries](#tag/Obshie-spravochniki/operation/get-dictionaries).\n* Все элементы из `working_time_modes` в [/dictionaries](#tag/Obshie-spravochniki/operation/get-dictionaries).\n* Элементы `part` или `project` из `employment` в [/dictionaries](#tag/Obshie-spravochniki/operation/get-dictionaries).\n* Элемент `accept_temporary`, показывает вакансии только с временным трудоустройством.\n\nМожно указать несколько значений\n",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "$ref": "#/components/parameters/Locale/schema"
          },
          {
            "$ref": "#/components/parameters/Host/schema"
          },
          {
            "$ref": "#/components/parameters/HHUserAgent/schema"
          }
        ],
        "responses": {
          "201": {
            "description": "Успешно создано",
            "headers": {
              "Location": {
                "schema": {
                  "type": "string",
                  "description": "Путь к созданному автопоиску. Пример: `/saved_searches/vacancies/123`, где `123` — `id` созданного автопоиска"
                }
              }
            },
            "content": {
              "text/html": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Ошибки в аргументах",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonBadArgumentErrors"
                }
              }
            }
          },
          "403": {
            "description": "Текущий пользователь не является соискателем",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonBadAuthorizationErrors"
                }
              }
            }
          }
        }
      }
    },
    "/vacancies/{vacancy_id}/visitors": {
      "x-name": "/vacancies/{vacancy_id}/visitors",
      "get": {
        "tags": [
          "Управление вакансиями"
        ],
        "summary": "Посмотревшие вакансию",
        "description": "Возвращает список сокращенных резюме соискателей, просмотревших вакансию за последнюю неделю. Список отсортирован по убыванию по дате просмотра. Если у пользователя несколько резюме, то вернется резюме с наиболее поздней датой обновления.\n\nВ списке `items` не отображаются резюме, которые соискатель удалил или скрыл от работодателя. Но они учитываются при пагинации (`per_page`) и при подсчете найденных резюме (`found`), а в поле `hidden_on_page` показано количество таких пропущенных резюме на странице\n",
        "operationId": "get-vacancy-visitors",
        "parameters": [
          {
            "name": "vacancy_id",
            "in": "path",
            "required": true,
            "description": "Идентификатор вакансии",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Номер страницы (считается от 0, по умолчанию — 0)",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Количество элементов (по умолчанию — 20, максимальное значение — 50)",
            "schema": {
              "type": "number"
            }
          },
          {
            "$ref": "#/components/parameters/Locale/schema"
          },
          {
            "$ref": "#/components/parameters/Host/schema"
          },
          {
            "$ref": "#/components/parameters/HHUserAgent/schema"
          }
        ],
        "responses": {
          "200": {
            "description": "Успешный ответ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VacanciesVisitorsResponse"
                },
                "examples": {
                  "Пример ответа": {
                    "$ref": "#/components/examples/VacanciesVisitors"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Параметры переданы с ошибкой",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonBadArgumentErrors"
                }
              }
            }
          },
          "404": {
            "description": "Вакансия не найдена или недоступна текущему пользователю",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonNotFoundErrors"
                }
              }
            }
          }
        }
      }
    },
    "/vacancies/{vacancy_id}": {
      "x-name": "/vacancies/{vacancy_id}",
      "get": {
        "tags": [
          "Вакансии",
          "Управление вакансиями"
        ],
        "summary": "Просмотр вакансии",
        "description": "Возвращает подробную информацию по указанной вакансии",
        "operationId": "get-vacancy",
        "parameters": [
          {
            "name": "vacancy_id",
            "in": "path",
            "required": true,
            "description": "Идентификатор вакансии",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/Locale/schema"
          },
          {
            "$ref": "#/components/parameters/Host/schema"
          },
          {
            "$ref": "#/components/parameters/HHUserAgent/schema"
          }
        ],
        "responses": {
          "200": {
            "description": "Успешный ответ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VacanciesVacancy"
                },
                "examples": {
                  "Пример ответа": {
                    "$ref": "#/components/examples/VacanciesVacancy"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Требуется ввести капчу",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonCaptchaErrors"
                }
              }
            }
          },
          "404": {
            "description": "Указанная вакансия не существует или у пользователя нет прав на просмотр вакансии",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonNotFoundErrors"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Управление вакансиями",
          "Управление вакансиями на уровне работодателя"
        ],
        "summary": "Редактирование вакансий",
        "description": "Изменяет поля вакансии, передаваемые в теле запроса.\n\nСоставные поля (например, `salary`, `contacts`, `professional_roles`) можно редактировать только целиком, передавая полный объект. Например, для изменения валюты в зарплате, необходимо передавать также и значение зарплаты.\n\nПоля `billing_type` и `manager` необходимо передавать в отдельном запросе\n",
        "operationId": "edit-vacancy",
        "parameters": [
          {
            "name": "vacancy_id",
            "in": "path",
            "required": true,
            "description": "Идентификатор вакансии",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ignore_duplicates",
            "in": "query",
            "description": "Игнорировать [появление дубликата](https://github.com/hhru/api/blob/master/docs/employer_vacancies.md#edit-ignore-duplicates), после редактирования вакансии. По умолчанию — `false`",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "$ref": "#/components/parameters/Locale/schema"
          },
          {
            "$ref": "#/components/parameters/Host/schema"
          },
          {
            "$ref": "#/components/parameters/HHUserAgent/schema"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VacancyEdit"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Успешный ответ"
          },
          "400": {
            "description": "Ошибка в теле запроса",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsVacancyAddEditCombinedBadJsonDataErrors"
                }
              }
            }
          },
          "403": {
            "description": "Ошибка авторизации",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsVacancyAddEditBadAuthForbiddenErrors"
                }
              }
            }
          },
          "404": {
            "description": "Вакансия с переданным идентификатором не существует",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonNotFoundErrors"
                }
              }
            }
          }
        }
      }
    },
    "/vacancies/blacklisted": {
      "x-name": "/vacancies/blacklisted",
      "get": {
        "tags": [
          "Скрытые вакансии"
        ],
        "summary": "Список скрытых вакансий",
        "description": "Возвращает [подмножество вакансий](#tag/Vakansii/operation/get-vacancy), скрытых пользователем, а также один дополнительный параметр",
        "operationId": "get-blacklisted-vacancies",
        "parameters": [
          {
            "$ref": "#/components/parameters/Locale/schema"
          },
          {
            "$ref": "#/components/parameters/Host/schema"
          },
          {
            "$ref": "#/components/parameters/HHUserAgent/schema"
          }
        ],
        "responses": {
          "200": {
            "description": "Успешный ответ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VacanciesVacanciesBlacklistedResponse"
                },
                "examples": {
                  "Пример ответа": {
                    "$ref": "#/components/examples/VacanciesVacanciesBlacklisted"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Текущий пользователь не является соискателем",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonBadAuthorizationErrors"
                }
              }
            }
          }
        }
      }
    },
    "/vacancies": {
      "x-name": "/vacancies",
      "post": {
        "tags": [
          "Управление вакансиями",
          "Управление вакансиями на уровне работодателя"
        ],
        "summary": "Публикация вакансии",
        "description": "Создает новую вакансию с полями, передаваемыми в теле запроса. \n\nВ соответствии с [законом РФ № 1032-1 от 19.04.1991 в ред. от 02.07.2013 г.](https://hh.ru/article/13967) запрещено размещать информацию, ограничивающую права или устанавливающую преимущества для соискателей по полу, возрасту, семейному положению и другим обстоятельствам, не связанным с деловыми качествами работников.\n\nПримечания:\n\n* При успешной публикации будут списаны соответствующие услуги.\n* Все вакансии проходят ручную модерацию.\n* В течение нескольких минут после публикации вакансия станет доступна в поиске.\n\nПолезные ссылки:\n\n* [Правила размещения вакансий](https://hh.ru/article/341)\n* [Как составить хорошее описание вакансии](https://hh.ru/article/16239)\n",
        "operationId": "publish-vacancy",
        "parameters": [
          {
            "name": "ignore_duplicates",
            "in": "query",
            "description": "Форсирование добавления дубликатов",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "$ref": "#/components/parameters/Locale/schema"
          },
          {
            "$ref": "#/components/parameters/Host/schema"
          },
          {
            "$ref": "#/components/parameters/HHUserAgent/schema"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VacancyCreate"
              },
              "examples": {
                "Пример запроса": {
                  "$ref": "#/components/examples/VacancyCreate"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Успешный ответ",
            "headers": {
              "Location": {
                "schema": {
                  "type": "string",
                  "description": "Ссылка на добавленную вакансию, например: `/vacancies/78789890`"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_IncludesId"
                },
                "examples": {
                  "Пример ответа": {
                    "$ref": "#/components/examples/Id"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Ошибка в параметрах запроса",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsVacancyAddEditCombinedBadJsonDataErrors"
                }
              }
            }
          },
          "403": {
            "description": "Ошибка авторизации",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsVacancyAddEditBadAuthForbiddenErrors"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Поиск вакансий"
        ],
        "summary": "Поиск по вакансиям",
        "description": "Возвращает список вакансий, размещенных в сервисе. Список вакансий фильтруется согласно переданным параметрам запроса.\n\nОсобенности работы метода:\n\n* Неизвестные параметры и параметры с ошибкой в названии игнорируются.\n* Если не передан токен авторизации, то после первого запроса будет предложено пройти капчу.\n* Список вакансий зависит от типа авторизации пользователя. Например, для соискателей вакансии фильтруются по [списку скрытых вакансий](#tag/Skrytye-vakansii) и [списку скрытых компаний](#tag/Skrytye-rabotodateli).\n* Список вакансий также зависит от [выбранного сайта](#section/Obshaya-informaciya/Vybor-sajta) (параметр `host`). Однако выбор регионального сайта, например hh.kz, не ограничивает список вакансиями данного региона. Чтобы ограничить список по региону, используйте параметр `area`.\n* При указании параметров пагинации (`page`, `per_page`) работает ограничение: глубина возвращаемых результатов не может быть больше `2000`. Например, возможен запрос `per_page=10&page=199` (выдача с `1991` по `2000` вакансию), но запрос с `per_page=10&page=200` вернёт ошибку (выдача с `2001` по `2010` вакансию)\n",
        "operationId": "get-vacancies",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Номер страницы",
            "schema": {
              "type": "number",
              "default": "0"
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Количество элементов",
            "schema": {
              "type": "number",
              "default": "10",
              "maximum": 100.0
            }
          },
          {
            "name": "text",
            "in": "query",
            "description": "Переданное значение ищется в полях вакансии, указанных в параметре `search_field`. Доступен [язык запросов](https://hh.ru/article/1175). Специально для этого поля есть [автодополнение](#tag/Podskazki/operation/get-vacancy-search-keywords)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search_field",
            "in": "query",
            "description": "Область поиска. Справочник с возможными значениями: `vacancy_search_fields` в [/dictionaries](#tag/Obshie-spravochniki/operation/get-dictionaries).\nПо умолчанию, используются все поля. Можно указать несколько значений\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "experience",
            "in": "query",
            "description": "Опыт работы. Необходимо передавать `id` из справочника `experience` в [/dictionaries](#tag/Obshie-spravochniki/operation/get-dictionaries). Можно указать несколько значений\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "employment",
            "in": "query",
            "description": "Тип занятости. Необходимо передавать `id` из справочника `employment` в [/dictionaries](#tag/Obshie-spravochniki/operation/get-dictionaries). Можно указать несколько значений\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "schedule",
            "in": "query",
            "description": "График работы. Необходимо передавать `id` из справочника `schedule` в [/dictionaries](#tag/Obshie-spravochniki/operation/get-dictionaries). Можно указать несколько значений\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "area",
            "in": "query",
            "description": "Регион. Необходимо передавать `id` из справочника [/areas](#tag/Obshie-spravochniki/operation/get-areas). Можно указать несколько значений\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "metro",
            "in": "query",
            "description": "Ветка или станция метро. Необходимо передавать `id` из справочника [/metro](#tag/Obshie-spravochniki/operation/get-metro-stations). Можно указать несколько значений\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "professional_role",
            "in": "query",
            "description": "Профессиональная область. Необходимо передавать `id` из справочника [/professional_roles](#tag/Obshie-spravochniki/operation/get-professional-roles-dictionary)\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "industry",
            "in": "query",
            "description": "Индустрия компании, разместившей вакансию. Необходимо передавать `id` из справочника [/industries](#tag/Obshie-spravochniki/operation/get-industries). Можно указать несколько значений\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "employer_id",
            "in": "query",
            "description": "Идентификатор [работодателя](#tag/Rabotodatel). Можно указать несколько значений\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "currency",
            "in": "query",
            "description": "Код валюты. Справочник с возможными значениями: `currency` (ключ `code`) в [/dictionaries](#tag/Obshie-spravochniki/operation/get-dictionaries). Имеет смысл указывать только совместно с параметром `salary`\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "salary",
            "in": "query",
            "description": "Размер заработной платы. Если указано это поле, но не указано `currency`, то для `currency` используется значение RUR.\nПри указании значения будут найдены вакансии, в которых вилка зарплаты близка к указанной в запросе. При этом значения пересчитываются по текущим курсам ЦБ РФ. Например, при указании `salary=100&currency=EUR` будут найдены вакансии, где вилка зарплаты указана в рублях и после пересчёта в Евро близка к 100 EUR.\nПо умолчанию будут также найдены вакансии, в которых вилка зарплаты не указана, чтобы такие вакансии отфильтровать, используйте `only_with_salary=true`\n",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "label",
            "in": "query",
            "description": "Фильтр по меткам вакансий. Необходимо передавать `id` из справочника `vacancy_label` в [/dictionaries](#tag/Obshie-spravochniki/operation/get-dictionaries). Можно указать несколько значений\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "only_with_salary",
            "in": "query",
            "description": "Показывать вакансии только с указанием зарплаты. По умолчанию `false`\n",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "period",
            "in": "query",
            "description": "Количество дней, в пределах которых производится поиск по вакансиям\n",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "date_from",
            "in": "query",
            "description": "Дата, которая ограничивает снизу диапазон дат публикации вакансий. Нельзя передавать вместе с параметром `period`.\nЗначение указывается в формате `ISO 8601 - YYYY-MM-DD` или с точность до секунды `YYYY-MM-DDThh:mm:ss±hhmm`. Указанное значение будет округлено до ближайших пяти минут\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "date_to",
            "in": "query",
            "description": "Дата, которая ограничивает сверху диапазон дат публикации вакансий. Нельзя передавать вместе с параметром `period`.\nЗначение указывается в формате `ISO 8601 - YYYY-MM-DD` или с точность до секунды `YYYY-MM-DDThh:mm:ss±hhmm`. Указанное значение будет округлено до ближайших пяти минут\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "top_lat",
            "in": "query",
            "description": "Верхняя граница широты.\nПри поиске используется значение указанного в вакансии адреса. Принимаемое значение — градусы в виде десятичной дроби.\nНеобходимо передавать одновременно все четыре параметра гео-координат, иначе вернется ошибка\n",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "bottom_lat",
            "in": "query",
            "description": "Нижняя граница широты.\nПри поиске используется значение указанного в вакансии адреса. Принимаемое значение — градусы в виде десятичной дроби.\nНеобходимо передавать одновременно все четыре параметра гео-координат, иначе вернется ошибка\n",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "left_lng",
            "in": "query",
            "description": "Левая граница долготы.\nПри поиске используется значение указанного в вакансии адреса. Принимаемое значение — градусы в виде десятичной дроби.\nНеобходимо передавать одновременно все четыре параметра гео-координат, иначе вернется ошибка\n",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "right_lng",
            "in": "query",
            "description": "Правая граница долготы.\nПри поиске используется значение указанного в вакансии адреса. Принимаемое значение — градусы в виде десятичной дроби.\nНеобходимо передавать одновременно все четыре параметра гео-координат, иначе вернется ошибка\n",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "order_by",
            "in": "query",
            "description": "Сортировка списка вакансий. Справочник с возможными значениями: `vacancy_search_order` в [/dictionaries](#tag/Obshie-spravochniki/operation/get-dictionaries).\nЕсли выбрана сортировка по удалённости от гео-точки `distance`, необходимо также задать её координаты: `sort_point_lat`, `sort_point_lng`\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort_point_lat",
            "in": "query",
            "description": "Значение географической широты точки, по расстоянию от которой будут отсортированы вакансии. Необходимо указывать только, если `order_by` установлено в `distance`\n",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "sort_point_lng",
            "in": "query",
            "description": "Значение географической долготы точки, по расстоянию от которой будут отсортированы вакансии. Необходимо указывать только, если `order_by` установлено в `distance`\n",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "clusters",
            "in": "query",
            "description": "Возвращать ли [кластеры для данного поиска](#tag/Poisk-vakansij/Klastery-v-poiske-vakansij). По умолчанию — `false`\n",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "describe_arguments",
            "in": "query",
            "description": "Возвращать ли описание использованных параметров поиска (массив `arguments`). По умолчанию — `false`\n",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "no_magic",
            "in": "query",
            "description": "Если значение `true` — автоматическое преобразование вакансий отключено. По умолчанию – false.\nПри включённом автоматическом преобразовании, будет предпринята попытка изменить текстовый запрос пользователя на набор параметров. Например, запрос `text=москва бухгалтер 100500` будет преобразован в `text=бухгалтер&only_with_salary=true&area=1&salary=100500`\n",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "premium",
            "in": "query",
            "description": "Если значение `true` — в сортировке вакансий будет учтены премиум вакансии. Такая сортировка используется на сайте. По умолчанию — false\n",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "responses_count_enabled",
            "in": "query",
            "description": "Если значение `true` — дополнительное поле `counters` с количеством откликов для вакансии включено. По-умолчанию — `false`\n",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "part_time",
            "in": "query",
            "description": "Вакансии для подработки. Возможные значения:\n* Все элементы из `working_days` в [/dictionaries](#tag/Obshie-spravochniki/operation/get-dictionaries).\n* Все элементы из `working_time_intervals` в [/dictionaries](#tag/Obshie-spravochniki/operation/get-dictionaries).\n* Все элементы из `working_time_modes` в [/dictionaries](#tag/Obshie-spravochniki/operation/get-dictionaries).\n* Элементы `part` или `project` из `employment` в [/dictionaries](#tag/Obshie-spravochniki/operation/get-dictionaries).\n* Элемент `accept_temporary`, показывает вакансии только с временным трудоустройством.\nМожно указать несколько значений\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accept_temporary",
            "in": "query",
            "description": "Если значение `true` — то поиск происходит только по вакансиям временной работы.\nПо-умолчанию — `false`\n",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "$ref": "#/components/parameters/Locale/schema"
          },
          {
            "$ref": "#/components/parameters/Host/schema"
          },
          {
            "$ref": "#/components/parameters/HHUserAgent/schema"
          }
        ],
        "responses": {
          "200": {
            "description": "Успешный ответ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VacanciesVacanciesResponse"
                },
                "examples": {
                  "Пример ответа": {
                    "$ref": "#/components/examples/VacanciesVacancies"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Параметры переданы с ошибкой",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonBadArgumentErrors"
                }
              }
            }
          },
          "403": {
            "description": "Требуется ввести капчу",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonCaptchaErrors"
                }
              }
            }
          },
          "404": {
            "description": "Указанная вакансия не существует",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonNotFoundErrors"
                }
              }
            }
          }
        }
      }
    },
    "/saved_searches/vacancies/{id}": {
      "x-name": "/saved_searches/vacancies/{id}",
      "get": {
        "tags": [
          "Сохраненные поиски вакансий"
        ],
        "summary": "Получение единичного сохраненного поиска вакансий",
        "operationId": "get-saved-vacancy-search",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Идентификатор сохраненного поиска",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/Locale/schema"
          },
          {
            "$ref": "#/components/parameters/Host/schema"
          },
          {
            "$ref": "#/components/parameters/HHUserAgent/schema"
          }
        ],
        "responses": {
          "200": {
            "description": "Успешный ответ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SavedSearchesSavedSearchItem"
                },
                "examples": {
                  "Пример ответа": {
                    "$ref": "#/components/examples/SavedSearchesSavedSearchVacancyItem"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Текущий пользователь не является соискателем",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonBadAuthorizationErrors"
                }
              }
            }
          },
          "404": {
            "description": "Сохраненный поиск не найден",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonNotFoundErrors"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Сохраненные поиски вакансий"
        ],
        "summary": "Обновление сохраненного поиска вакансий",
        "description": "У сохраненного поиска можно изменить имя (`name`) и статус подписки (`subscription`). В одном запросе можно передать только один из параметров",
        "operationId": "update-saved-vacancy-search",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Идентификатор сохраненного поиска",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "Новое имя сохраненного поиска",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subscription",
            "in": "query",
            "description": "Статус подписки",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "$ref": "#/components/parameters/Locale/schema"
          },
          {
            "$ref": "#/components/parameters/Host/schema"
          },
          {
            "$ref": "#/components/parameters/HHUserAgent/schema"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/SuccessNoContent",
            "description": ""
          },
          "400": {
            "$ref": "#/components/responses/ErrorBadArgument",
            "description": ""
          },
          "403": {
            "$ref": "#/components/responses/ErrorBadAuthorization",
            "description": ""
          },
          "404": {
            "$ref": "#/components/responses/ErrorNotFound",
            "description": ""
          },
          "409": {
            "$ref": "#/components/responses/ErrorBothChangedConflict",
            "description": ""
          }
        }
      },
      "delete": {
        "tags": [
          "Сохраненные поиски вакансий"
        ],
        "summary": "Удаление сохраненного поиска вакансий",
        "operationId": "delete-saved-vacancy-search",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Идентификатор сохраненного поиска",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/Locale/schema"
          },
          {
            "$ref": "#/components/parameters/Host/schema"
          },
          {
            "$ref": "#/components/parameters/HHUserAgent/schema"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/SuccessNoContent",
            "description": ""
          },
          "403": {
            "$ref": "#/components/responses/ErrorBadAuthorization",
            "description": ""
          },
          "404": {
            "$ref": "#/components/responses/ErrorNotFound",
            "description": ""
          }
        }
      }
    },
    "/vacancies/{vacancy_id}/similar_vacancies": {
      "x-name": "/vacancies/{vacancy_id}/similar_vacancies",
      "get": {
        "tags": [
          "Поиск вакансий"
        ],
        "summary": "Поиск по вакансиям, похожим на вакансию",
        "description": "Если не передан токен авторизации, то после первого запроса будет предложено пройти капчу.\n\nПри указании параметров пагинации (`page`, `per_page`) работает ограничение: глубина возвращаемых результатов не может быть больше `2000`. Например, возможен запрос `per_page=10&page=199` (выдача с `1991` по `2000` вакансию), но запрос с `per_page=10&page=200` вернёт ошибку (выдача с `2001` по `2010` вакансию)\n",
        "operationId": "get-vacancies-similar-to-vacancy",
        "parameters": [
          {
            "name": "vacancy_id",
            "in": "path",
            "required": true,
            "description": "Идентификатор вакансии",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Номер страницы",
            "schema": {
              "type": "number",
              "default": "0"
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Количество элементов",
            "schema": {
              "type": "number",
              "default": "10",
              "maximum": 100.0
            }
          },
          {
            "name": "text",
            "in": "query",
            "description": "Переданное значение ищется в полях вакансии, указанных в параметре `search_field`. Доступен [язык запросов](https://hh.ru/article/1175). Специально для этого поля есть [автодополнение](#tag/Podskazki/operation/get-vacancy-search-keywords)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search_field",
            "in": "query",
            "description": "Область поиска. Справочник с возможными значениями: `vacancy_search_fields` в [/dictionaries](#tag/Obshie-spravochniki/operation/get-dictionaries).\nПо умолчанию, используются все поля. Можно указать несколько значений\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "experience",
            "in": "query",
            "description": "Опыт работы. Необходимо передавать `id` из справочника `experience` в [/dictionaries](#tag/Obshie-spravochniki/operation/get-dictionaries). Можно указать несколько значений\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "employment",
            "in": "query",
            "description": "Тип занятости. Необходимо передавать `id` из справочника `employment` в [/dictionaries](#tag/Obshie-spravochniki/operation/get-dictionaries). Можно указать несколько значений\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "schedule",
            "in": "query",
            "description": "График работы. Необходимо передавать `id` из справочника `schedule` в [/dictionaries](#tag/Obshie-spravochniki/operation/get-dictionaries). Можно указать несколько значений\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "area",
            "in": "query",
            "description": "Регион. Необходимо передавать `id` из справочника [/areas](#tag/Obshie-spravochniki/operation/get-areas). Можно указать несколько значений\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "metro",
            "in": "query",
            "description": "Ветка или станция метро. Необходимо передавать `id` из справочника [/metro](#tag/Obshie-spravochniki/operation/get-metro-stations). Можно указать несколько значений\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "professional_role",
            "in": "query",
            "description": "Профессиональная область. Необходимо передавать `id` из справочника [/professional_roles](#tag/Obshie-spravochniki/operation/get-professional-roles-dictionary)\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "industry",
            "in": "query",
            "description": "Индустрия компании, разместившей вакансию. Необходимо передавать `id` из справочника [/industries](#tag/Obshie-spravochniki/operation/get-industries). Можно указать несколько значений\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "employer_id",
            "in": "query",
            "description": "Идентификатор [работодателя](#tag/Rabotodatel). Можно указать несколько значений\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "currency",
            "in": "query",
            "description": "Код валюты. Справочник с возможными значениями: `currency` (ключ `code`) в [/dictionaries](#tag/Obshie-spravochniki/operation/get-dictionaries). Имеет смысл указывать только совместно с параметром `salary`\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "salary",
            "in": "query",
            "description": "Размер заработной платы. Если указано это поле, но не указано `currency`, то для `currency` используется значение RUR.\nПри указании значения будут найдены вакансии, в которых вилка зарплаты близка к указанной в запросе. При этом значения пересчитываются по текущим курсам ЦБ РФ. Например, при указании `salary=100&currency=EUR` будут найдены вакансии, где вилка зарплаты указана в рублях и после пересчёта в Евро близка к 100 EUR.\nПо умолчанию будут также найдены вакансии, в которых вилка зарплаты не указана, чтобы такие вакансии отфильтровать, используйте `only_with_salary=true`\n",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "label",
            "in": "query",
            "description": "Фильтр по меткам вакансий. Необходимо передавать `id` из справочника `vacancy_label` в [/dictionaries](#tag/Obshie-spravochniki/operation/get-dictionaries). Можно указать несколько значений\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "only_with_salary",
            "in": "query",
            "description": "Показывать вакансии только с указанием зарплаты. По умолчанию `false`\n",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "period",
            "in": "query",
            "description": "Количество дней, в пределах которых производится поиск по вакансиям\n",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "date_from",
            "in": "query",
            "description": "Дата, которая ограничивает снизу диапазон дат публикации вакансий. Нельзя передавать вместе с параметром `period`.\nЗначение указывается в формате `ISO 8601 - YYYY-MM-DD` или с точность до секунды `YYYY-MM-DDThh:mm:ss±hhmm`. Указанное значение будет округлено до ближайших пяти минут\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "date_to",
            "in": "query",
            "description": "Дата, которая ограничивает сверху диапазон дат публикации вакансий. Нельзя передавать вместе с параметром `period`.\nЗначение указывается в формате `ISO 8601 - YYYY-MM-DD` или с точность до секунды `YYYY-MM-DDThh:mm:ss±hhmm`. Указанное значение будет округлено до ближайших пяти минут\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "top_lat",
            "in": "query",
            "description": "Верхняя граница широты.\nПри поиске используется значение указанного в вакансии адреса. Принимаемое значение — градусы в виде десятичной дроби.\nНеобходимо передавать одновременно все четыре параметра гео-координат, иначе вернется ошибка\n",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "bottom_lat",
            "in": "query",
            "description": "Нижняя граница широты.\nПри поиске используется значение указанного в вакансии адреса. Принимаемое значение — градусы в виде десятичной дроби.\nНеобходимо передавать одновременно все четыре параметра гео-координат, иначе вернется ошибка\n",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "left_lng",
            "in": "query",
            "description": "Левая граница долготы.\nПри поиске используется значение указанного в вакансии адреса. Принимаемое значение — градусы в виде десятичной дроби.\nНеобходимо передавать одновременно все четыре параметра гео-координат, иначе вернется ошибка\n",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "right_lng",
            "in": "query",
            "description": "Правая граница долготы.\nПри поиске используется значение указанного в вакансии адреса. Принимаемое значение — градусы в виде десятичной дроби.\nНеобходимо передавать одновременно все четыре параметра гео-координат, иначе вернется ошибка\n",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "order_by",
            "in": "query",
            "description": "Сортировка списка вакансий. Справочник с возможными значениями: `vacancy_search_order` в [/dictionaries](#tag/Obshie-spravochniki/operation/get-dictionaries).\nЕсли выбрана сортировка по удалённости от гео-точки `distance`, необходимо также задать её координаты: `sort_point_lat`, `sort_point_lng`\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort_point_lat",
            "in": "query",
            "description": "Значение географической широты точки, по расстоянию от которой будут отсортированы вакансии. Необходимо указывать только, если `order_by` установлено в `distance`\n",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "sort_point_lng",
            "in": "query",
            "description": "Значение географической долготы точки, по расстоянию от которой будут отсортированы вакансии. Необходимо указывать только, если `order_by` установлено в `distance`\n",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "clusters",
            "in": "query",
            "description": "Возвращать ли [кластеры для данного поиска](#tag/Poisk-vakansij/Klastery-v-poiske-vakansij). По умолчанию — `false`\n",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "describe_arguments",
            "in": "query",
            "description": "Возвращать ли описание использованных параметров поиска. Успешный ответ будет содержать поле [`arguments`]((#tag/Poisk-vakansij/operation/get-vacancies))).\nПо умолчанию — `false`\n",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "no_magic",
            "in": "query",
            "description": "Если значение `true` — автоматическое преобразование вакансий отключено. По умолчанию – false.\nПри включённом автоматическом преобразовании, будет предпринята попытка изменить текстовый запрос пользователя на набор параметров. Например, запрос `text=москва бухгалтер 100500` будет преобразован в `text=бухгалтер&only_with_salary=true&area=1&salary=100500`\n",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "premium",
            "in": "query",
            "description": "Если значение `true` — в сортировке вакансий будет учтены премиум вакансии. Такая сортировка используется на сайте. По умолчанию — false\n",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "responses_count_enabled",
            "in": "query",
            "description": "Если значение `true` — дополнительное поле `counters` с количеством откликов для вакансии включено. По-умолчанию — `false`\n",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "part_time",
            "in": "query",
            "description": "Вакансии для подработки. Возможные значения:\n* Все элементы из `working_days` в [/dictionaries](#tag/Obshie-spravochniki/operation/get-dictionaries).\n* Все элементы из `working_time_intervals` в [/dictionaries](#tag/Obshie-spravochniki/operation/get-dictionaries).\n* Все элементы из `working_time_modes` в [/dictionaries](#tag/Obshie-spravochniki/operation/get-dictionaries).\n* Элементы `part` или `project` из `employment` в [/dictionaries](#tag/Obshie-spravochniki/operation/get-dictionaries).\n* Элемент `accept_temporary`, показывает вакансии только с временным трудоустройством.\nМожно указать несколько значений\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/Locale/schema"
          },
          {
            "$ref": "#/components/parameters/Host/schema"
          },
          {
            "$ref": "#/components/parameters/HHUserAgent/schema"
          }
        ],
        "responses": {
          "200": {
            "description": "Успешный ответ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VacanciesVacanciesResponse"
                },
                "examples": {
                  "Пример ответа": {
                    "$ref": "#/components/examples/VacanciesVacancies"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Параметры переданы с ошибкой",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonBadArgumentErrors"
                }
              }
            }
          },
          "403": {
            "description": "Требуется ввести капчу",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonCaptchaErrors"
                }
              }
            }
          },
          "404": {
            "description": "Указанная вакансия не существует",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonNotFoundErrors"
                }
              }
            }
          }
        }
      }
    },
    "/vacancies/{vacancy_id}/upgrades": {
      "x-name": "/vacancies/{vacancy_id}/upgrades",
      "get": {
        "tags": [
          "Управление вакансиями"
        ],
        "summary": "Список улучшений для вакансии",
        "operationId": "get-vacancy-upgrade-list",
        "parameters": [
          {
            "name": "vacancy_id",
            "in": "path",
            "required": true,
            "description": "Идентификатор вакансии",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/Locale/schema"
          },
          {
            "$ref": "#/components/parameters/Host/schema"
          },
          {
            "$ref": "#/components/parameters/HHUserAgent/schema"
          }
        ],
        "responses": {
          "200": {
            "description": "Успешный ответ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VacanciesVacancyUpgradeListResponse"
                },
                "examples": {
                  "Пример ответа": {
                    "$ref": "#/components/examples/VacanciesVacancyUpgradeList"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Текущий пользователь не является работодателем",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonBadAuthorizationErrors"
                }
              }
            }
          },
          "404": {
            "description": "Вакансия не найдена или у пользователя нет прав на просмотр данной вакансии",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonNotFoundErrors"
                }
              }
            }
          }
        }
      }
    },
    "/resumes/{resume_id}/similar_vacancies": {
      "x-name": "/resumes/{resume_id}/similar_vacancies",
      "get": {
        "tags": [
          "Поиск вакансий для соискателя"
        ],
        "summary": "Поиск по вакансиям, похожим на резюме",
        "description": "Данные доступны только автору резюме.\n\nПри указании параметров пагинации (`page`, `per_page`) работает ограничение: глубина возвращаемых результатов не может быть больше `2000`. Например, возможен запрос `per_page=10&page=199` (выдача с `1991` по `2000` вакансию), но запрос с `per_page=10&page=200` вернёт ошибку (выдача с `2001` по `2010` вакансию)\n",
        "operationId": "get-vacancies-similar-to-resume",
        "parameters": [
          {
            "name": "resume_id",
            "in": "path",
            "required": true,
            "description": "Идентификатор резюме",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Номер страницы (считается от 0, по умолчанию - 0)",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Количество элементов (по умолчанию - 10, максимальное значение - 100)",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "text",
            "in": "query",
            "description": "Переданное значение ищется в полях вакансии, указанных в параметре `search_field`. Доступен [язык запросов](https://hh.ru/article/1175). Специально для этого поля есть [автодополнение](#tag/Podskazki/operation/get-vacancy-search-keywords)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search_field",
            "in": "query",
            "description": "Область поиска. Справочник с возможными значениями: `vacancy_search_fields` в [/dictionaries](#tag/Obshie-spravochniki/operation/get-dictionaries).\nПо умолчанию, используются все поля. Можно указать несколько значений\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "experience",
            "in": "query",
            "description": "Опыт работы. Необходимо передавать `id` из справочника `experience` в [/dictionaries](#tag/Obshie-spravochniki/operation/get-dictionaries). Можно указать несколько значений\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "employment",
            "in": "query",
            "description": "Тип занятости. Необходимо передавать `id` из справочника `employment` в [/dictionaries](#tag/Obshie-spravochniki/operation/get-dictionaries). Можно указать несколько значений\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "schedule",
            "in": "query",
            "description": "График работы. Необходимо передавать `id` из справочника `schedule` в [/dictionaries](#tag/Obshie-spravochniki/operation/get-dictionaries). Можно указать несколько значений\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "area",
            "in": "query",
            "description": "Регион. Необходимо передавать `id` из справочника [/areas](#tag/Obshie-spravochniki/operation/get-areas). Можно указать несколько значений\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "metro",
            "in": "query",
            "description": "Ветка или станция метро. Необходимо передавать `id` из справочника [/metro](#tag/Obshie-spravochniki/operation/get-metro-stations). Можно указать несколько значений\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "professional_role",
            "in": "query",
            "description": "Профессиональная область. Необходимо передавать `id` из справочника [/professional_roles](#tag/Obshie-spravochniki/operation/get-professional-roles-dictionary)\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "industry",
            "in": "query",
            "description": "Индустрия компании, разместившей вакансию. Необходимо передавать `id` из справочника [/industries](#tag/Obshie-spravochniki/operation/get-industries). Можно указать несколько значений\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "employer_id",
            "in": "query",
            "description": "Идентификатор [работодателя](#tag/Rabotodatel). Можно указать несколько значений\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "currency",
            "in": "query",
            "description": "Код валюты. Справочник с возможными значениями: `currency` (ключ `code`) в [/dictionaries](#tag/Obshie-spravochniki/operation/get-dictionaries). Имеет смысл указывать только совместно с параметром `salary`\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "salary",
            "in": "query",
            "description": "Размер заработной платы. Если указано это поле, но не указано `currency`, то для `currency` используется значение RUR.\nПри указании значения будут найдены вакансии, в которых вилка зарплаты близка к указанной в запросе. При этом значения пересчитываются по текущим курсам ЦБ РФ. Например, при указании `salary=100&currency=EUR` будут найдены вакансии, где вилка зарплаты указана в рублях и после пересчёта в Евро близка к 100 EUR.\nПо умолчанию будут также найдены вакансии, в которых вилка зарплаты не указана, чтобы такие вакансии отфильтровать, используйте `only_with_salary=true`\n",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "label",
            "in": "query",
            "description": "Фильтр по меткам вакансий. Необходимо передавать `id` из справочника `vacancy_label` в [/dictionaries](#tag/Obshie-spravochniki/operation/get-dictionaries). Можно указать несколько значений\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "only_with_salary",
            "in": "query",
            "description": "Показывать вакансии только с указанием зарплаты. По умолчанию `false`\n",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "period",
            "in": "query",
            "description": "Количество дней, в пределах которых производится поиск по вакансиям\n",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "date_from",
            "in": "query",
            "description": "Дата, которая ограничивает снизу диапазон дат публикации вакансий. Нельзя передавать вместе с параметром `period`.\nЗначение указывается в формате `ISO 8601 - YYYY-MM-DD` или с точность до секунды `YYYY-MM-DDThh:mm:ss±hhmm`. Указанное значение будет округлено до ближайших пяти минут\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "date_to",
            "in": "query",
            "description": "Дата, которая ограничивает сверху диапазон дат публикации вакансий. Нельзя передавать вместе с параметром `period`.\nЗначение указывается в формате `ISO 8601 - YYYY-MM-DD` или с точность до секунды `YYYY-MM-DDThh:mm:ss±hhmm`. Указанное значение будет округлено до ближайших пяти минут\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "top_lat",
            "in": "query",
            "description": "Верхняя граница широты.\nПри поиске используется значение указанного в вакансии адреса. Принимаемое значение — градусы в виде десятичной дроби.\nНеобходимо передавать одновременно все четыре параметра гео-координат, иначе вернется ошибка\n",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "bottom_lat",
            "in": "query",
            "description": "Нижняя граница широты.\nПри поиске используется значение указанного в вакансии адреса. Принимаемое значение — градусы в виде десятичной дроби.\nНеобходимо передавать одновременно все четыре параметра гео-координат, иначе вернется ошибка\n",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "left_lng",
            "in": "query",
            "description": "Левая граница долготы.\nПри поиске используется значение указанного в вакансии адреса. Принимаемое значение — градусы в виде десятичной дроби.\nНеобходимо передавать одновременно все четыре параметра гео-координат, иначе вернется ошибка\n",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "right_lng",
            "in": "query",
            "description": "Правая граница долготы.\nПри поиске используется значение указанного в вакансии адреса. Принимаемое значение — градусы в виде десятичной дроби.\nНеобходимо передавать одновременно все четыре параметра гео-координат, иначе вернется ошибка\n",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "order_by",
            "in": "query",
            "description": "Сортировка списка вакансий. Справочник с возможными значениями: `vacancy_search_order` в [/dictionaries](#tag/Obshie-spravochniki/operation/get-dictionaries).\nЕсли выбрана сортировка по удалённости от гео-точки `distance`, необходимо также задать её координаты: `sort_point_lat`, `sort_point_lng`\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort_point_lat",
            "in": "query",
            "description": "Значение географической широты точки, по расстоянию от которой будут отсортированы вакансии. Необходимо указывать только, если `order_by` установлено в `distance`\n",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "sort_point_lng",
            "in": "query",
            "description": "Значение географической долготы точки, по расстоянию от которой будут отсортированы вакансии. Необходимо указывать только, если `order_by` установлено в `distance`\n",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "clusters",
            "in": "query",
            "description": "Возвращать ли [кластеры для данного поиска](#tag/Poisk-vakansij/Klastery-v-poiske-vakansij). По умолчанию — `false`\n",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "describe_arguments",
            "in": "query",
            "description": "Возвращать ли описание использованных параметров поиска. Успешный ответ будет содержать поле [`arguments`]((#tag/Poisk-vakansij/operation/get-vacancies))).\nПо умолчанию — `false`\n",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "no_magic",
            "in": "query",
            "description": "Если значение `true` — автоматическое преобразование вакансий отключено. По умолчанию – false.\nПри включённом автоматическом преобразовании, будет предпринята попытка изменить текстовый запрос пользователя на набор параметров. Например, запрос `text=москва бухгалтер 100500` будет преобразован в `text=бухгалтер&only_with_salary=true&area=1&salary=100500`\n",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "premium",
            "in": "query",
            "description": "Если значение `true` — в сортировке вакансий будет учтены премиум вакансии. Такая сортировка используется на сайте. По умолчанию — false\n",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "responses_count_enabled",
            "in": "query",
            "description": "Если значение `true` — дополнительное поле `counters` с количеством откликов для вакансии включено. По-умолчанию — `false`\n",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "part_time",
            "in": "query",
            "description": "Вакансии для подработки. Возможные значения:\n* Все элементы из `working_days` в [/dictionaries](#tag/Obshie-spravochniki/operation/get-dictionaries).\n* Все элементы из `working_time_intervals` в [/dictionaries](#tag/Obshie-spravochniki/operation/get-dictionaries).\n* Все элементы из `working_time_modes` в [/dictionaries](#tag/Obshie-spravochniki/operation/get-dictionaries).\n* Элементы `part` или `project` из `employment` в [/dictionaries](#tag/Obshie-spravochniki/operation/get-dictionaries).\n* Элемент `accept_temporary`, показывает вакансии только с временным трудоустройством.\nМожно указать несколько значений\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/Locale/schema"
          },
          {
            "$ref": "#/components/parameters/Host/schema"
          },
          {
            "$ref": "#/components/parameters/HHUserAgent/schema"
          }
        ],
        "responses": {
          "200": {
            "description": "Успешный ответ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VacanciesVacanciesResponse"
                },
                "examples": {
                  "Пример ответа": {
                    "$ref": "#/components/examples/VacanciesVacancies"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Параметры переданы с ошибкой",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonBadArgumentErrors"
                }
              }
            }
          },
          "404": {
            "description": "Указанное резюме не существует или у текущего пользователя нет доступа",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonNotFoundErrors"
                }
              }
            }
          }
        }
      }
    },
    "/vacancies/favorited": {
      "x-name": "/vacancies/favorited",
      "get": {
        "tags": [
          "Отобранные вакансии"
        ],
        "summary": "Список отобранных вакансий",
        "description": "Возвращает [подмножество вакансий](#tag/Vakansii/operation/get-vacancy), добавленных пользователем в отобранные, а также ряд дополнительных полей",
        "operationId": "get-favorite-vacancies",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Номер страницы (считается от 0, по умолчанию - 0)",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Количество элементов на странице",
            "schema": {
              "type": "number"
            }
          },
          {
            "$ref": "#/components/parameters/Locale/schema"
          },
          {
            "$ref": "#/components/parameters/Host/schema"
          },
          {
            "$ref": "#/components/parameters/HHUserAgent/schema"
          }
        ],
        "responses": {
          "200": {
            "description": "Успешный ответ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VacanciesVacanciesFavoritedResponse"
                },
                "examples": {
                  "Пример ответа": {
                    "$ref": "#/components/examples/VacanciesVacanciesFavorited"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Текущий пользователь не является соискателем",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonBadAuthorizationErrors"
                }
              }
            }
          }
        }
      }
    },
    "/vacancies/blacklisted/{vacancy_id}": {
      "x-name": "/vacancies/blacklisted/{vacancy_id}",
      "put": {
        "tags": [
          "Скрытые вакансии"
        ],
        "summary": "Добавление вакансии в список скрытых",
        "description": "Добавляет указанную вакансию в [список скрытых вакансий](#tag/Skrytye-vakansii/operation/get-blacklisted-vacancies)",
        "operationId": "add-vacancy-to-blacklisted",
        "parameters": [
          {
            "name": "vacancy_id",
            "in": "path",
            "required": true,
            "description": "Идентификатор вакансии",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/Locale/schema"
          },
          {
            "$ref": "#/components/parameters/Host/schema"
          },
          {
            "$ref": "#/components/parameters/HHUserAgent/schema"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/SuccessNoContent",
            "description": ""
          },
          "400": {
            "description": "Превышен лимит на количество элементов в списке",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsVacancyBlacklistedBadRequestErrors"
                }
              }
            }
          },
          "403": {
            "description": "Текущий пользователь не является соискателем или не имеет прав на добавление вакансии в скрытые",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonBadAuthorizationErrors"
                }
              }
            }
          },
          "404": {
            "description": "Вакансия не найдена",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsVacancyBlacklistedNotFoundErrors"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Скрытые вакансии"
        ],
        "summary": "Удаление вакансии из списка скрытых",
        "description": "Удаляет указанную вакансию из [списка скрытых вакансий](#tag/Skrytye-vakansii/operation/get-blacklisted-vacancies)",
        "operationId": "delete-vacancy-from-blacklisted",
        "parameters": [
          {
            "name": "vacancy_id",
            "in": "path",
            "required": true,
            "description": "Идентификатор вакансии",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/Locale/schema"
          },
          {
            "$ref": "#/components/parameters/Host/schema"
          },
          {
            "$ref": "#/components/parameters/HHUserAgent/schema"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/SuccessNoContent",
            "description": ""
          },
          "403": {
            "description": "Текущий пользователь не является соискателем",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonBadAuthorizationErrors"
                }
              }
            }
          },
          "404": {
            "description": "Вакансия не найдена",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsVacancyBlacklistedNotFoundErrors"
                }
              }
            }
          }
        }
      }
    },
    "/employers/{employer_id}/vacancies/active": {
      "x-name": "/employers/{employer_id}/vacancies/active",
      "get": {
        "tags": [
          "Управление вакансиями",
          "Управление вакансиями на уровне работодателя"
        ],
        "summary": "Просмотр списка опубликованных вакансий",
        "description": "Возвращает список опубликованных вакансий.\n\nЕсли передан параметр `resume_id`, то в список попадут только те вакансии, которые подходят для указанного резюме. Кроме того, ответ будет содержать дополнительные поля\n",
        "operationId": "get-active-vacancy-list",
        "parameters": [
          {
            "name": "employer_id",
            "in": "path",
            "required": true,
            "description": "Идентификатор работодателя",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Номер страницы (считается от 0)",
            "schema": {
              "type": "number",
              "default": "0"
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Количество элементов",
            "schema": {
              "type": "number",
              "default": "20",
              "maximum": 50.0
            }
          },
          {
            "name": "manager_id",
            "in": "query",
            "description": "Идентификатор менеджера, вакансии которого будут получены в ответе. По умолчанию возвращаются вакансии текущего пользователя. \nЕсли передать несколько `manager_id`, будет использован последний. Значения можно взять из [списка](#tag/Menedzhery-rabotodatelya/operation/get-employer-managers)\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "text",
            "in": "query",
            "description": "Строка для поиска по названию вакансии",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "area",
            "in": "query",
            "description": "Идентификатор региона с вакансией. Чтобы получить идентификаторы регионов, в которых есть активные вакансии, воспользуйтесь [соответствующим методом](#tag/Informaciya-o-rabotodatele/operation/get-employer-vacancy-areas)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "resume_id",
            "in": "query",
            "description": "Идентификатор резюме. Этот параметр нельзя передавать в комбинации с другими параметрами, только отдельно. Если параметр передан, в ответе возвращаются только те вакансии, которые подходят для указанного резюме, а также дополнительные поля",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "order_by",
            "in": "query",
            "description": "Способ сортировки вакансий. Доступные значения перечислены в поле `employer_active_vacancies_order` в [справочнике полей](#tag/Obshie-spravochniki/operation/get-dictionaries)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/Locale/schema"
          },
          {
            "$ref": "#/components/parameters/Host/schema"
          },
          {
            "$ref": "#/components/parameters/HHUserAgent/schema"
          }
        ],
        "responses": {
          "200": {
            "description": "Успешный ответ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VacanciesVacancyListResponse"
                },
                "examples": {
                  "Пример ответа": {
                    "$ref": "#/components/examples/VacanciesActiveList"
                  },
                  "Пример ответа при указанном resume_id": {
                    "$ref": "#/components/examples/VacanciesMatchList"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Ошибка параметров запроса или передана несочетаемая пара параметров",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonBadArgumentErrors"
                }
              }
            }
          },
          "403": {
            "description": "Текущий пользователь не является работодателем",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonBadAuthorizationErrors"
                }
              }
            }
          },
          "404": {
            "description": "Менеджер с переданным идентификатором не существует или у текущего пользователя нет прав на просмотр опубликованных вакансий",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonNotFoundErrors"
                }
              }
            }
          }
        }
      }
    },
    "/employers/{employer_id}/vacancies/hidden": {
      "x-name": "/employers/{employer_id}/vacancies/hidden",
      "get": {
        "tags": [
          "Управление вакансиями",
          "Управление вакансиями на уровне работодателя"
        ],
        "summary": "Список удаленных вакансий",
        "operationId": "get-hidden-vacancies",
        "parameters": [
          {
            "name": "employer_id",
            "in": "path",
            "required": true,
            "description": "Идентификатор работодателя",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "manager_id",
            "in": "query",
            "description": "Идентификатор менеджера. Передайте, если требуется получить удаленные вакансии другого менеджера. \nЕсли передать несколько параметров `manager_id`, будет использоваться только последний.\nПо умолчанию возвращаются вакансии текущего пользователя\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "order_by",
            "in": "query",
            "description": "Сортировка списка вакансий в архиве. Справочник с возможными значениями: `employer_hidden_vacancies_order` в [/dictionaries](#tag/Obshie-spravochniki/operation/get-dictionaries)\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Количество элементов на странице выдачи. Поддерживаются [стандартные параметры пагинации](#section/Obshaya-informaciya/Paginaciya). Значение по умолчанию и максимальное значение `per_page` составляет 1000\n",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Порядковый номер страницы в выдаче. Поддерживаются [стандартные параметры пагинации](#section/Obshaya-informaciya/Paginaciya). По умолчанию нумерация начинается с 0 страницы\n",
            "schema": {
              "type": "integer"
            }
          },
          {
            "$ref": "#/components/parameters/Locale/schema"
          },
          {
            "$ref": "#/components/parameters/Host/schema"
          },
          {
            "$ref": "#/components/parameters/HHUserAgent/schema"
          }
        ],
        "responses": {
          "200": {
            "description": "Успешный ответ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VacanciesDeletedVacancyListResponse"
                },
                "examples": {
                  "Пример ответа": {
                    "$ref": "#/components/examples/VacanciesDeletedVacancyList"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Параметры переданы с ошибкой",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonBadArgumentErrors"
                }
              }
            }
          },
          "403": {
            "description": "Текущий пользователь не является работодателем, либо указан неверный идентификатор работодателя",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonBadAuthorizationErrors"
                }
              }
            }
          },
          "404": {
            "description": "У текущего пользователя нет прав на просмотр удаленных вакансий",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonNotFoundErrors"
                }
              }
            }
          }
        }
      }
    },
    "/employers/{employer_id}/vacancies/hidden/{vacancy_id}": {
      "x-name": "/employers/{employer_id}/vacancies/hidden/{vacancy_id}",
      "put": {
        "tags": [
          "Управление вакансиями"
        ],
        "summary": "Удаление вакансий",
        "description": "Удалить можно только вакансию из архива",
        "operationId": "add-vacancy-to-hidden",
        "parameters": [
          {
            "name": "employer_id",
            "in": "path",
            "required": true,
            "description": "Идентификатор работодателя",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "vacancy_id",
            "in": "path",
            "required": true,
            "description": "Идентификатор вакансии",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/Locale/schema"
          },
          {
            "$ref": "#/components/parameters/Host/schema"
          },
          {
            "$ref": "#/components/parameters/HHUserAgent/schema"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/SuccessNoContent",
            "description": ""
          },
          "403": {
            "description": "Текущий пользователь не является работодателем или вы пытаетесь удалить вакансию, которая не находится в архиве",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonBadAuthorizationErrors"
                }
              }
            }
          },
          "404": {
            "description": "Указан неверный идентификатор работодателя или вакансии, либо у текущего пользователя нет прав на удаление вакансии из архива",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonNotFoundErrors"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Управление вакансиями"
        ],
        "summary": "Восстановление вакансии из удаленных",
        "description": "Восстановить можно только удаленную из архива вакансию. Вакансия вернется в архив",
        "operationId": "restore-vacancy-from-hidden",
        "parameters": [
          {
            "name": "employer_id",
            "in": "path",
            "required": true,
            "description": "Идентификатор работодателя",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "vacancy_id",
            "in": "path",
            "required": true,
            "description": "Идентификатор вакансии",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/Locale/schema"
          },
          {
            "$ref": "#/components/parameters/Host/schema"
          },
          {
            "$ref": "#/components/parameters/HHUserAgent/schema"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/SuccessNoContent",
            "description": ""
          },
          "403": {
            "description": "Текущий пользователь не является работодателем или вы пытаетесь восстановить вакансию, которая не удалена",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonBadAuthorizationErrors"
                }
              }
            }
          },
          "404": {
            "description": "Указан неверный идентификатор работодателя или вакансии, либо у текущего пользователя нет прав на удаление вакансии из архива",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonNotFoundErrors"
                }
              }
            }
          }
        }
      }
    },
    "/vacancy_conditions": {
      "x-name": "/vacancy_conditions",
      "get": {
        "tags": [
          "Управление вакансиями"
        ],
        "summary": "Условия заполнения полей при добавлении и редактировании вакансий",
        "operationId": "get-vacancy-conditions",
        "parameters": [
          {
            "$ref": "#/components/parameters/Locale/schema"
          },
          {
            "$ref": "#/components/parameters/Host/schema"
          },
          {
            "$ref": "#/components/parameters/HHUserAgent/schema"
          }
        ],
        "responses": {
          "200": {
            "description": "Успешный ответ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VacanciesVacancyConditions"
                },
                "examples": {
                  "Пример ответа": {
                    "$ref": "#/components/examples/VacanciesVacancyConditions"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Условия заполнения полей вакансии недоступны данному пользователю",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonBadAuthorizationErrors"
                }
              }
            }
          }
        }
      }
    },
    "/vacancies/{vacancy_id}/prolongate": {
      "x-name": "/vacancies/{vacancy_id}/prolongate",
      "get": {
        "tags": [
          "Управление вакансиями",
          "Управление вакансиями на уровне работодателя"
        ],
        "summary": "Информация о возможности продления вакансии",
        "description": "Условия продления:\n\n    * Стоимость продления вакансии равна стоимости новой публикации.\n    * Стандартные вакансии можно продлевать, если с момента предыдущего продления прошло не менее 1 минуты.\n    * Вакансии \"стандарт-плюс\" можно продлевать не ранее, чем за 7 дней до окончания срока публикации\n",
        "operationId": "get-prolongation-vacancy-info",
        "parameters": [
          {
            "name": "vacancy_id",
            "in": "path",
            "required": true,
            "description": "Идентификатор вакансии",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/Locale/schema"
          },
          {
            "$ref": "#/components/parameters/Host/schema"
          },
          {
            "$ref": "#/components/parameters/HHUserAgent/schema"
          }
        ],
        "responses": {
          "200": {
            "description": "Успешный ответ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VacanciesVacancyProlongate"
                },
                "examples": {
                  "Пример ответа, когда продление возможно": {
                    "$ref": "#/components/examples/VacanciesVacancyProlongateAvailable"
                  },
                  "Пример ответа, когда продление невозможно": {
                    "$ref": "#/components/examples/VacanciesVacancyProlongateUnavailable"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Текущий пользователь не является работодателем",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonBadAuthorizationErrors"
                }
              }
            }
          },
          "404": {
            "description": "Текущему пользователю недоступно получение информации о вакансии или вакансия не существует",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonNotFoundErrors"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Управление вакансиями",
          "Управление вакансиями на уровне работодателя"
        ],
        "summary": "Продление вакансии",
        "description": "Продлевает срок размещения указанной вакансии.\n\nУсловия продления:\n\n* Стоимость продления вакансии равна стоимости новой публикации.\n* Стандартные вакансии можно продлевать, если с момента предыдущего продления прошло не менее 1 минуты.\n* Вакансии \"стандарт-плюс\" можно продлевать не ранее, чем за 7 дней до окончания срока публикации\n",
        "operationId": "vacancy-prolongation",
        "parameters": [
          {
            "name": "vacancy_id",
            "in": "path",
            "required": true,
            "description": "Идентификатор вакансии",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/Locale/schema"
          },
          {
            "$ref": "#/components/parameters/Host/schema"
          },
          {
            "$ref": "#/components/parameters/HHUserAgent/schema"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/SuccessNoContent",
            "description": ""
          },
          "403": {
            "description": "Текущий пользователь не является работодателем или продление невозможно",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsVacancyProlongateForbidden"
                }
              }
            }
          },
          "404": {
            "description": "Текущему пользователю недоступно получение информации о вакансии или вакансия не существует",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonNotFoundErrors"
                }
              }
            }
          }
        }
      }
    },
    "/employers/{employer_id}/vacancies/archived/{vacancy_id}": {
      "x-name": "/employers/{employer_id}/vacancies/archived/{vacancy_id}",
      "put": {
        "tags": [
          "Управление вакансиями",
          "Управление вакансиями на уровне работодателя"
        ],
        "summary": "Архивация вакансии",
        "description": "Переносит вакансию в архив",
        "operationId": "add-vacancy-to-archive",
        "parameters": [
          {
            "name": "employer_id",
            "in": "path",
            "required": true,
            "description": "Идентификатор работодателя",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "vacancy_id",
            "in": "path",
            "required": true,
            "description": "Идентификатор вакансии",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/Locale/schema"
          },
          {
            "$ref": "#/components/parameters/Host/schema"
          },
          {
            "$ref": "#/components/parameters/HHUserAgent/schema"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/SuccessNoContent",
            "description": ""
          },
          "403": {
            "description": "Текущий пользователь не является работодателем",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonBadAuthorizationErrors"
                }
              }
            }
          },
          "404": {
            "description": "Указан неверный идентификатор работодателя, либо у текущего пользователя нет прав на архивацию вакансии, либо вакансия с переданным идентификатором не существует",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonNotFoundErrors"
                }
              }
            }
          }
        }
      }
    },
    "/vacancies/{id}/preferred_negotiations_order": {
      "x-name": "/vacancies/{id}/preferred_negotiations_order",
      "get": {
        "tags": [
          "Отклики/приглашения работодателя",
          "Отклики/приглашения работодателя на уровне работодателя"
        ],
        "summary": "Просмотр предпочитаемой сортировки откликов",
        "operationId": "get-pref-negotiations-order",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Идентификатор вакансии",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/Locale/schema"
          },
          {
            "$ref": "#/components/parameters/Host/schema"
          },
          {
            "$ref": "#/components/parameters/HHUserAgent/schema"
          }
        ],
        "responses": {
          "200": {
            "description": "Успешный ответ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VacanciesPreferredNegotiationsOrder"
                },
                "examples": {
                  "Пример ответа": {
                    "$ref": "#/components/examples/VacanciesPreferredNegotiationsOrder"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Вакансия не найдена или просмотр откликов/приглашений по ней недоступен",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonNotFoundErrors"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Отклики/приглашения работодателя",
          "Отклики/приглашения работодателя на уровне работодателя"
        ],
        "summary": "Изменение предпочитаемой сортировки откликов",
        "operationId": "put-pref-negotiations-order",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Идентификатор вакансии",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/Locale/schema"
          },
          {
            "$ref": "#/components/parameters/Host/schema"
          },
          {
            "$ref": "#/components/parameters/HHUserAgent/schema"
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/VacanciesPreferredNegotiationsOrderRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/SuccessNoContent",
            "description": ""
          },
          "400": {
            "description": "Идентификатор типа сортировки передан с ошибкой или данный тип сортировки недоступен",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonBadArgumentErrors"
                }
              }
            }
          },
          "404": {
            "description": "Вакансия не найдена или просмотр откликов/приглашений по ней недоступен",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonNotFoundErrors"
                }
              }
            }
          }
        }
      }
    },
    "/vacancies/favorited/{vacancy_id}": {
      "x-name": "/vacancies/favorited/{vacancy_id}",
      "put": {
        "tags": [
          "Отобранные вакансии"
        ],
        "summary": "Добавление вакансии в список отобранных",
        "description": "Добавляет указанную вакансию в [список отобранных вакансий](#tag/Otobrannye-vakansii/operation/get-favorite-vacancies)",
        "operationId": "add-vacancy-to-favorite",
        "parameters": [
          {
            "name": "vacancy_id",
            "in": "path",
            "required": true,
            "description": "Идентификатор вакансии",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/Locale/schema"
          },
          {
            "$ref": "#/components/parameters/Host/schema"
          },
          {
            "$ref": "#/components/parameters/HHUserAgent/schema"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/SuccessNoContent",
            "description": ""
          },
          "403": {
            "description": "Текущий пользователь не является соискателем или не имеет прав на добавление вакансии в отобранные",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsVacancyFavoritedCombinedBadAuthErrors"
                }
              }
            }
          },
          "404": {
            "description": "Вакансия не найдена",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonNotFoundErrors"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Отобранные вакансии"
        ],
        "summary": "Удаление вакансии из списка отобранных",
        "description": "Удаляет указанную вакансию из [списка отобранных вакансий](#tag/Otobrannye-vakansii/operation/get-favorite-vacancies)",
        "operationId": "delete-vacancy-from-favorite",
        "parameters": [
          {
            "name": "vacancy_id",
            "in": "path",
            "required": true,
            "description": "Идентификатор вакансии",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/Locale/schema"
          },
          {
            "$ref": "#/components/parameters/Host/schema"
          },
          {
            "$ref": "#/components/parameters/HHUserAgent/schema"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/SuccessNoContent",
            "description": ""
          },
          "403": {
            "description": "Текущий пользователь не является соискателем",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonBadAuthorizationErrors"
                }
              }
            }
          },
          "404": {
            "description": "Вакансия не найдена",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonNotFoundErrors"
                }
              }
            }
          }
        }
      }
    },
    "/employers/{employer_id}/managers/{manager_id}/vacancies/available_types": {
      "x-name": "/employers/{employer_id}/managers/{manager_id}/vacancies/available_types",
      "get": {
        "tags": [
          "Информация о менеджере"
        ],
        "summary": "Варианты публикации вакансий у текущего менеджера",
        "description": "Метод позволяет понять, может ли менеджер публиковать вакансии и какие типы вакансий ему доступны. Возвращает все возможные типы публикации",
        "operationId": "get-available-vacancy-types",
        "parameters": [
          {
            "name": "employer_id",
            "in": "path",
            "required": true,
            "description": "Идентификатор работодателя, который можно узнать [в информации о текущем пользователе](#tag/Informaciya-o-menedzhere/operation/get-current-user-info)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "manager_id",
            "in": "path",
            "required": true,
            "description": "Идентификатор менеджера, который можно узнать [в информации о текущем пользователе](#tag/Informaciya-o-menedzhere/operation/get-current-user-info)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/Locale/schema"
          },
          {
            "$ref": "#/components/parameters/Host/schema"
          },
          {
            "$ref": "#/components/parameters/HHUserAgent/schema"
          }
        ],
        "responses": {
          "200": {
            "description": "Успешный ответ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VacanciesAvailableVacancyTypeResponse"
                },
                "examples": {
                  "Пример ответа": {
                    "$ref": "#/components/examples/VacanciesAvailableVacancyType"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Текущий пользователь не является работодателем или не имеет доступа к данным",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonBadAuthorizationErrors"
                }
              }
            }
          },
          "404": {
            "description": "Менеджер или компания не существуют или не доступны для текущего пользователя",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonNotFoundErrors"
                }
              }
            }
          }
        }
      }
    },
    "/vacancies/{vacancy_id}/stats": {
      "x-name": "/vacancies/{vacancy_id}/stats",
      "get": {
        "tags": [
          "Управление вакансиями"
        ],
        "summary": "Статистика по вакансии",
        "description": "Возвращает статистику за последние пять дней существования вакансии.\n\nПри этом:\n\n* Если вакансия создана менее пяти дней назад, то первой датой в ответе будет дата создания вакансии. Для будущих дат в полях `responses` и `views` вернется `null`.\n* Если вакансия находится в архиве или удалена, то последней датой будет дата архивации\n",
        "operationId": "get-vacancy-stats",
        "parameters": [
          {
            "name": "vacancy_id",
            "in": "path",
            "required": true,
            "description": "Идентификатор вакансии",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/Locale/schema"
          },
          {
            "$ref": "#/components/parameters/Host/schema"
          },
          {
            "$ref": "#/components/parameters/HHUserAgent/schema"
          }
        ],
        "responses": {
          "200": {
            "description": "Успешный ответ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VacanciesVacancyStatsResponse"
                },
                "examples": {
                  "Пример ответа": {
                    "$ref": "#/components/examples/VacanciesVacancyStats"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Текущий пользователь не является работодателем",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonBadAuthorizationErrors"
                }
              }
            }
          },
          "404": {
            "description": "Вакансия не найдена",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonNotFoundErrors"
                }
              }
            }
          }
        }
      }
    },
    "/employers/{employer_id}/vacancies/archived": {
      "x-name": "/employers/{employer_id}/vacancies/archived",
      "get": {
        "tags": [
          "Управление вакансиями",
          "Управление вакансиями на уровне работодателя"
        ],
        "summary": "Список архивных вакансий",
        "operationId": "get-archived-vacancies",
        "parameters": [
          {
            "name": "employer_id",
            "in": "path",
            "required": true,
            "description": "Идентификатор работодателя",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "manager_id",
            "in": "query",
            "description": "Идентификатор менеджера из [списка менеджеров работодателя](#tag/Menedzhery-rabotodatelya/operation/get-employer-managers). Передайте, если требуется получить вакансии другого менеджера. \n\nЕсли передать несколько параметров `manager_id`, будет использоваться только последний.\n\nПо умолчанию возвращаются вакансии текущего пользователя\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "order_by",
            "in": "query",
            "description": "Сортировка списка вакансий в архиве. Справочник с возможными значениями: `employer_archived_vacancies_order` в [/dictionaries](#tag/Obshie-spravochniki/operation/get-dictionaries)\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Количество элементов на странице выдачи. Поддерживаются [стандартные параметры пагинации](#section/Obshaya-informaciya/Paginaciya). Значение по умолчанию и максимальное значение `per_page` составляет 1000\n",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Порядковый номер страницы в выдаче. Поддерживаются [стандартные параметры пагинации](#section/Obshaya-informaciya/Paginaciya). По умолчанию нумерация начинается с 0 страницы\n",
            "schema": {
              "type": "integer"
            }
          },
          {
            "$ref": "#/components/parameters/Locale/schema"
          },
          {
            "$ref": "#/components/parameters/Host/schema"
          },
          {
            "$ref": "#/components/parameters/HHUserAgent/schema"
          }
        ],
        "responses": {
          "200": {
            "description": "Успешный ответ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VacanciesArchivedVacancyListResponse"
                },
                "examples": {
                  "Пример ответа": {
                    "$ref": "#/components/examples/VacanciesArchivedVacancyList"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Параметры переданы с ошибкой",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonBadArgumentErrors"
                }
              }
            }
          },
          "403": {
            "description": "Текущий пользователь не является работодателем, либо указан неверный идентификатор работодателя",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonBadAuthorizationErrors"
                }
              }
            }
          },
          "404": {
            "description": "У текущего пользователя нет прав на просмотр архивных вакансий",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonNotFoundErrors"
                }
              }
            }
          }
        }
      }
    },
    "/artifacts/portfolio/conditions": {
      "x-name": "/artifacts/portfolio/conditions",
      "get": {
        "tags": [
          "Работа с артефактами"
        ],
        "summary": "Условия загрузки портфолио",
        "operationId": "get-artifacts-portfolio-conditions",
        "parameters": [
          {
            "$ref": "#/components/parameters/Locale/schema"
          },
          {
            "$ref": "#/components/parameters/Host/schema"
          },
          {
            "$ref": "#/components/parameters/HHUserAgent/schema"
          }
        ],
        "responses": {
          "200": {
            "description": "Успешный ответ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ArtifactsArtifactConditions"
                },
                "examples": {
                  "Пример ответа": {
                    "$ref": "#/components/examples/ArtifactsArtifactConditions"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Текущий пользователь не является соискателем",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonBadAuthorizationErrors"
                }
              }
            }
          }
        }
      }
    },
    "/artifacts/{id}": {
      "x-name": "/artifacts/{id}",
      "put": {
        "tags": [
          "Работа с артефактами"
        ],
        "summary": "Редактирование артефакта",
        "description": "Метод позволяет отредактировать описание портфолио",
        "operationId": "edit-artifact",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Идентификатор артефакта. Чтобы получить его, используйте метод [Получение портфолио](#tag/Rabota-s-artefaktami/operation/get-artifacts-portfolio)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/Locale/schema"
          },
          {
            "$ref": "#/components/parameters/Host/schema"
          },
          {
            "$ref": "#/components/parameters/HHUserAgent/schema"
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/ArtifactsPortfolioDescription"
              },
              "examples": {
                "Пример запроса": {
                  "$ref": "#/components/examples/ArtifactsPortfolioDescription"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/SuccessNoContent",
            "description": ""
          },
          "400": {
            "description": "Ошибка в параметрах запроса",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonBadArgumentErrors"
                }
              }
            }
          },
          "403": {
            "description": "Текущий пользователь не является соискателем",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonBadAuthorizationErrors"
                }
              }
            }
          },
          "404": {
            "description": "Артефакт не существует или не принадлежит текущему пользователю",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonNotFoundErrors"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Работа с артефактами"
        ],
        "summary": "Удаление артефакта",
        "operationId": "delete-artifact",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Идентификатор артефакта. Чтобы получить его, используйте метод [Получение портфолио](#tag/Rabota-s-artefaktami/operation/get-artifacts-portfolio) или [Получение фотографий](#tag/Rabota-s-artefaktami/operation/get-artifact-photos)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/Locale/schema"
          },
          {
            "$ref": "#/components/parameters/Host/schema"
          },
          {
            "$ref": "#/components/parameters/HHUserAgent/schema"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/SuccessNoContent",
            "description": ""
          },
          "403": {
            "description": "Текущий пользователь не является соискателем",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonBadAuthorizationErrors"
                }
              }
            }
          },
          "404": {
            "description": "Артефакт не существует или не принадлежит текущему пользователю",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonNotFoundErrors"
                }
              }
            }
          }
        }
      }
    },
    "/artifacts": {
      "x-name": "/artifacts",
      "post": {
        "tags": [
          "Работа с артефактами"
        ],
        "summary": "Загрузка артефакта",
        "description": "Запрос загружает файл с локальной машины в сервис. \n\nОграничения на типы файлов и их размер доступны в [условиях загрузки артефактов](#tag/Rabota-s-artefaktami).\n\nДля прикрепления загруженных изображений в резюме, необходимо передать `id` артефакта в [соответствующее поле резюме](https://github.com/hhru/api/blob/master/docs/employer_resumes.md#resume-fields). Для удаления артефакта из резюме укажите `null`\n",
        "operationId": "load-artifact",
        "parameters": [
          {
            "$ref": "#/components/parameters/Locale/schema"
          },
          {
            "$ref": "#/components/parameters/Host/schema"
          },
          {
            "$ref": "#/components/parameters/HHUserAgent/schema"
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/ArtifactsArtifactUploadBody"
              },
              "encoding": {
                "file": {}
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Результат отправки файла",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ArtifactsArtifactItem"
                },
                "examples": {
                  "Пример ответа": {
                    "$ref": "#/components/examples/ArtifactsArtifactUpload"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Ошибка в параметрах запроса или добавление изображения невозможно",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsArtifactUploadBadJsonData"
                }
              }
            }
          },
          "403": {
            "description": "Текущий пользователь не является соискателем",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonBadAuthorizationErrors"
                }
              }
            }
          },
          "413": {
            "description": "Изображение слишком большое",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsRequestEntityTooLargeErrors"
                }
              }
            }
          }
        }
      }
    },
    "/artifacts/portfolio": {
      "x-name": "/artifacts/portfolio",
      "get": {
        "tags": [
          "Работа с артефактами"
        ],
        "summary": "Получение портфолио",
        "description": "Возвращает список ранее загруженных изображений с портфолио. Их можно использовать при создании/редактировании резюме",
        "operationId": "get-artifacts-portfolio",
        "parameters": [
          {
            "$ref": "#/components/parameters/Locale/schema"
          },
          {
            "$ref": "#/components/parameters/Host/schema"
          },
          {
            "$ref": "#/components/parameters/HHUserAgent/schema"
          }
        ],
        "responses": {
          "200": {
            "description": "Успешный ответ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ArtifactsArtifactPortfolioResponse"
                },
                "examples": {
                  "Пример ответа": {
                    "$ref": "#/components/examples/ArtifactsArtifactsPortfolio"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Текущий пользователь не является соискателем",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonBadAuthorizationErrors"
                }
              }
            }
          }
        }
      }
    },
    "/artifacts/photo/conditions": {
      "x-name": "/artifacts/photo/conditions",
      "get": {
        "tags": [
          "Работа с артефактами"
        ],
        "summary": "Условия загрузки фотографий",
        "operationId": "get-artifact-photos-conditions",
        "parameters": [
          {
            "$ref": "#/components/parameters/Locale/schema"
          },
          {
            "$ref": "#/components/parameters/Host/schema"
          },
          {
            "$ref": "#/components/parameters/HHUserAgent/schema"
          }
        ],
        "responses": {
          "200": {
            "description": "Успешный ответ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ArtifactsArtifactConditions"
                },
                "examples": {
                  "Пример ответа": {
                    "$ref": "#/components/examples/ArtifactsArtifactConditions"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Текущий пользователь не является соискателем",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonBadAuthorizationErrors"
                }
              }
            }
          }
        }
      }
    },
    "/artifacts/photo": {
      "x-name": "/artifacts/photo",
      "get": {
        "tags": [
          "Работа с артефактами"
        ],
        "summary": "Получение фотографий",
        "description": "Возвращает список ранее загруженных изображений с фотографиями. Их можно использовать при создании/редактировании резюме",
        "operationId": "get-artifact-photos",
        "parameters": [
          {
            "$ref": "#/components/parameters/Locale/schema"
          },
          {
            "$ref": "#/components/parameters/Host/schema"
          },
          {
            "$ref": "#/components/parameters/HHUserAgent/schema"
          }
        ],
        "responses": {
          "200": {
            "description": "Успешный ответ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ArtifactsArtifactPhotoResponse"
                },
                "examples": {
                  "Пример ответа": {
                    "$ref": "#/components/examples/ArtifactsArtifactsPhoto"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Текущий пользователь не является соискателем",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonBadAuthorizationErrors"
                }
              }
            }
          }
        }
      }
    },
    "/dictionaries": {
      "x-name": "/dictionaries",
      "get": {
        "tags": [
          "Общие справочники"
        ],
        "summary": "Справочники полей",
        "description": "Справочники полей и сущностей, используемых в API. Значения в справочниках могут поменяться в любой момент",
        "operationId": "get-dictionaries",
        "parameters": [
          {
            "$ref": "#/components/parameters/Locale/schema"
          },
          {
            "$ref": "#/components/parameters/Host/schema"
          },
          {
            "$ref": "#/components/parameters/HHUserAgent/schema"
          }
        ],
        "responses": {
          "200": {
            "description": "Успешный ответ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DictionariesDictResponse"
                },
                "examples": {
                  "Пример ответа": {
                    "$ref": "#/components/examples/DictionariesDictionaries"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/languages": {
      "x-name": "/languages",
      "get": {
        "tags": [
          "Общие справочники"
        ],
        "summary": "Список всех языков",
        "operationId": "get-languages",
        "parameters": [
          {
            "$ref": "#/components/parameters/Locale/schema"
          },
          {
            "$ref": "#/components/parameters/Host/schema"
          },
          {
            "$ref": "#/components/parameters/HHUserAgent/schema"
          }
        ],
        "responses": {
          "200": {
            "description": "Успешный ответ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DictionariesLangResponse"
                },
                "examples": {
                  "Пример ответа": {
                    "$ref": "#/components/examples/Languages"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/educational_institutions": {
      "x-name": "/educational_institutions",
      "get": {
        "tags": [
          "Общие справочники"
        ],
        "summary": "Основная информация об учебных заведениях",
        "operationId": "get-educational-institutions-dictionary",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": true,
            "description": "Идентификаторы учебных заведений. Идентификатор конкретного заведения можно узнать в [подсказке](#tag/Podskazki/operation/get-educational-institutions-suggests). Передать можно не более 50 значений. Например: `?id=39196&id=45470&id=0`. Если был передан идентификатор несуществующего заведения, для него не вернется никакой информации",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/Locale/schema"
          },
          {
            "$ref": "#/components/parameters/Host/schema"
          },
          {
            "$ref": "#/components/parameters/HHUserAgent/schema"
          }
        ],
        "responses": {
          "200": {
            "description": "Успешный ответ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuggestsEducationalInstitutions"
                },
                "examples": {
                  "Пример ответа": {
                    "$ref": "#/components/examples/SuggestsEducationalInstitutions"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Неверные параметры запроса, либо ошибка [bulk-запроса](https://github.com/hhru/api/blob/master/docs/errors.md#bulk-request)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonBadArgumentErrors"
                }
              }
            }
          }
        }
      }
    },
    "/skills": {
      "x-name": "/skills",
      "get": {
        "tags": [
          "Общие справочники"
        ],
        "summary": "Справочник ключевых навыков",
        "description": "Метод возвращает информацию по запрашиваемым ключевым навыкам.\n\nЗначения в справочнике могут поменяться в любой момент\n",
        "operationId": "get-skills",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": true,
            "description": "Идентификаторы ключевых навыков. Идентификатор конкретного навыка можно узнать по [подсказке](#tag/Podskazki/operation/get-skill-set-suggests). Передать можно не более 50 значений. Например: `?id=2716&id=3019&id=0`. Если был передан идентификатор несуществующего ключевого навыка, для него не вернется никакой информации",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/Locale/schema"
          },
          {
            "$ref": "#/components/parameters/Host/schema"
          },
          {
            "$ref": "#/components/parameters/HHUserAgent/schema"
          }
        ],
        "responses": {
          "200": {
            "description": "Успешный ответ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DictionariesSkillsResponse"
                },
                "examples": {
                  "Пример ответа": {
                    "$ref": "#/components/examples/DictionariesSkills"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Неверные параметры запроса, либо ошибка [bulk-запроса](https://github.com/hhru/api/blob/master/docs/errors.md#bulk-request)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonBadArgumentErrors"
                }
              }
            }
          }
        }
      }
    },
    "/professional_roles": {
      "x-name": "/professional_roles",
      "get": {
        "tags": [
          "Общие справочники"
        ],
        "summary": "Справочник профессиональных ролей",
        "description": "Возвращает профессиональные роли, их категории и другую информацию о профессиональных ролях\n",
        "operationId": "get-professional-roles-dictionary",
        "parameters": [
          {
            "$ref": "#/components/parameters/Locale/schema"
          },
          {
            "$ref": "#/components/parameters/Host/schema"
          },
          {
            "$ref": "#/components/parameters/HHUserAgent/schema"
          }
        ],
        "responses": {
          "200": {
            "description": "Успешный ответ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProfessionalRolesCatalog"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ErrorBadArgument",
            "description": ""
          }
        }
      }
    },
    "/educational_institutions/{id}/faculties": {
      "x-name": "/educational_institutions/{id}/faculties",
      "get": {
        "tags": [
          "Общие справочники"
        ],
        "summary": "Список факультетов учебного заведения",
        "description": "Возвращает список факультетов указанного учебного заведения",
        "operationId": "get-faculties",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Идентификатор учебного заведения, который можно узнать из [подсказки](#tag/Podskazki/operation/get-educational-institutions-suggests)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/Locale/schema"
          },
          {
            "$ref": "#/components/parameters/Host/schema"
          },
          {
            "$ref": "#/components/parameters/HHUserAgent/schema"
          }
        ],
        "responses": {
          "200": {
            "description": "Успешный ответ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DictionariesFacultiesResponse"
                },
                "examples": {
                  "Пример ответа": {
                    "$ref": "#/components/examples/DictionariesFaculties"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Указанное учебное заведение не существует",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonNotFoundErrors"
                }
              }
            }
          }
        }
      }
    },
    "/industries": {
      "x-name": "/industries",
      "get": {
        "tags": [
          "Общие справочники"
        ],
        "summary": "Отрасли компаний",
        "description": "Возвращает двухуровневый справочник всех отраслей",
        "operationId": "get-industries",
        "parameters": [
          {
            "$ref": "#/components/parameters/Locale/schema"
          },
          {
            "$ref": "#/components/parameters/Host/schema"
          },
          {
            "$ref": "#/components/parameters/HHUserAgent/schema"
          }
        ],
        "responses": {
          "200": {
            "description": "Успешный ответ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DictionariesIndustriesResponse"
                },
                "examples": {
                  "Пример ответа": {
                    "$ref": "#/components/examples/DictionariesIndustries"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/areas/countries": {
      "x-name": "/areas/countries",
      "get": {
        "tags": [
          "Общие справочники"
        ],
        "summary": "Справочник стран",
        "description": "Возвращает подмножество регионов, являющихся странами",
        "operationId": "get-countries",
        "parameters": [
          {
            "$ref": "#/components/parameters/Locale/schema"
          },
          {
            "$ref": "#/components/parameters/Host/schema"
          },
          {
            "$ref": "#/components/parameters/HHUserAgent/schema"
          }
        ],
        "responses": {
          "200": {
            "description": "Успешный ответ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DictionariesCountriesResponse"
                },
                "examples": {
                  "Пример ответа": {
                    "$ref": "#/components/examples/AreasCountries"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/areas": {
      "x-name": "/areas",
      "get": {
        "tags": [
          "Общие справочники"
        ],
        "summary": "Дерево всех регионов",
        "description": "Возвращает древовидный список всех регионов.\n\nЗначения в справочнике могут поменяться в любой момент\n",
        "operationId": "get-areas",
        "parameters": [
          {
            "name": "additional_case",
            "in": "query",
            "description": "Применимо только к русской локализации.\n\nВ дополнительном поле вернется название региона в указанном падеже. Поддерживается только значение `prepositional` — предложный падеж\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/Locale/schema"
          },
          {
            "$ref": "#/components/parameters/Host/schema"
          },
          {
            "$ref": "#/components/parameters/HHUserAgent/schema"
          }
        ],
        "responses": {
          "200": {
            "description": "Успешный ответ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DictionariesAreaResponse"
                },
                "examples": {
                  "Пример ответа": {
                    "$ref": "#/components/examples/AreasAreas"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Ошибки в параметрах запроса",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsDictionariesBadArgumentErrors"
                }
              }
            }
          }
        }
      }
    },
    "/areas/{area_id}": {
      "x-name": "/areas/{area_id}",
      "get": {
        "tags": [
          "Общие справочники"
        ],
        "summary": "Справочник регионов, начиная с указанного",
        "description": "Возвращает древовидный список регионов, начиная с указанного.\n\nЗначения в справочнике могут поменяться в любой момент\n",
        "operationId": "get-areas-from-specified",
        "parameters": [
          {
            "name": "area_id",
            "in": "path",
            "required": true,
            "description": "Идентификатор региона из справочника [/areas](#tag/Obshie-spravochniki/operation/get-areas)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "additional_case",
            "in": "query",
            "description": "Применимо только к русской локализации.\n\nВ дополнительном поле вернется название региона в указанном падеже. Поддерживается только значение `prepositional` — предложный падеж\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/Locale/schema"
          },
          {
            "$ref": "#/components/parameters/Host/schema"
          },
          {
            "$ref": "#/components/parameters/HHUserAgent/schema"
          }
        ],
        "responses": {
          "200": {
            "description": "Успешный ответ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DictionariesAreaItem"
                },
                "examples": {
                  "Пример ответа": {
                    "$ref": "#/components/examples/AreasAreaItem"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Ошибки в параметрах запроса",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsDictionariesBadArgumentErrors"
                }
              }
            }
          }
        }
      }
    },
    "/salary_statistics/dictionaries/employee_levels": {
      "x-name": "/salary_statistics/dictionaries/employee_levels",
      "get": {
        "tags": [
          "Справочники Банка данных заработных плат"
        ],
        "summary": "Уровни компетенций",
        "description": "Возвращает список уровней компетенций",
        "operationId": "get-salary-employee-levels",
        "parameters": [
          {
            "$ref": "#/components/parameters/Locale/schema"
          },
          {
            "$ref": "#/components/parameters/Host/schema"
          },
          {
            "$ref": "#/components/parameters/HHUserAgent/schema"
          }
        ],
        "responses": {
          "200": {
            "description": "Успешный ответ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DictionariesSalaryStatisticsEmployeeLevelResponse"
                },
                "examples": {
                  "Пример ответа": {
                    "$ref": "#/components/examples/DictionariesSalaryStatisticsEmployeeLevel"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/salary_statistics/dictionaries/salary_areas": {
      "x-name": "/salary_statistics/dictionaries/salary_areas",
      "get": {
        "tags": [
          "Справочники Банка данных заработных плат"
        ],
        "summary": "Регионы и города",
        "description": "Возвращает список регионов, областей и городов",
        "operationId": "get-salary-salary-areas",
        "parameters": [
          {
            "$ref": "#/components/parameters/Locale/schema"
          },
          {
            "$ref": "#/components/parameters/Host/schema"
          },
          {
            "$ref": "#/components/parameters/HHUserAgent/schema"
          }
        ],
        "responses": {
          "200": {
            "description": "Успешный ответ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DictionariesSalaryStatisticsAreaResponse"
                },
                "examples": {
                  "Пример ответа": {
                    "$ref": "#/components/examples/DictionariesSalaryStatisticsSalaryAreas"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/salary_statistics/dictionaries/professional_areas": {
      "x-name": "/salary_statistics/dictionaries/professional_areas",
      "get": {
        "tags": [
          "Справочники Банка данных заработных плат"
        ],
        "summary": "Профобласти и специализации",
        "description": "Возвращает список профобластей и специализаций",
        "operationId": "get-salary-professional-areas",
        "parameters": [
          {
            "$ref": "#/components/parameters/Locale/schema"
          },
          {
            "$ref": "#/components/parameters/Host/schema"
          },
          {
            "$ref": "#/components/parameters/HHUserAgent/schema"
          }
        ],
        "responses": {
          "200": {
            "description": "Успешный ответ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DictionariesSalaryStatisticsProfessionalAreasResponse"
                },
                "examples": {
                  "Пример ответа": {
                    "$ref": "#/components/examples/DictionariesSalaryStatisticsProfessionalAreas"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/salary_statistics/dictionaries/salary_industries": {
      "x-name": "/salary_statistics/dictionaries/salary_industries",
      "get": {
        "tags": [
          "Справочники Банка данных заработных плат"
        ],
        "summary": "Отрасли и сферы деятельности",
        "description": "Возвращает двухуровневый список отраслей и сфер деятельности",
        "operationId": "get-salary-industries",
        "parameters": [
          {
            "$ref": "#/components/parameters/Locale/schema"
          },
          {
            "$ref": "#/components/parameters/Host/schema"
          },
          {
            "$ref": "#/components/parameters/HHUserAgent/schema"
          }
        ],
        "responses": {
          "200": {
            "description": "Успешный ответ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DictionariesIndustriesResponse"
                },
                "examples": {
                  "Пример ответа": {
                    "$ref": "#/components/examples/DictionariesIndustries"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/negotiations": {
      "x-name": "/negotiations",
      "post": {
        "tags": [
          "Вакансии"
        ],
        "summary": "Отклик на вакансию",
        "description": "Запрос позволяет пользователю откликнуться на вакансию.\n\nЧтобы узнать, какими резюме возможно откликнуться на конкретную вакансию, воспользуйтесь [списком подходящих резюме](#tag/Rezyume.-Prosmotr-informacii/operation/get-suitable-resumes)\n",
        "operationId": "apply-to-vacancy",
        "parameters": [
          {
            "$ref": "#/components/parameters/Locale/schema"
          },
          {
            "$ref": "#/components/parameters/Host/schema"
          },
          {
            "$ref": "#/components/parameters/HHUserAgent/schema"
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/VacanciesVacancyApplicationBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Результат отклика на обычную вакансию",
            "headers": {
              "Location": {
                "schema": {
                  "type": "string",
                  "description": "Путь к созданному отклику. Пример: `/negotiations/123`, где `123` — `id` созданного отклика"
                }
              }
            },
            "content": {
              "text/html": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "303": {
            "description": "Результат отклика на вакансию с прямым откликом",
            "headers": {
              "Location": {
                "schema": {
                  "type": "string",
                  "description": "Содержит внешний URL на сайт работодателя. Пример: `http://example.com/respond/vacancy`. Используйте этот URL, чтобы предложить пользователю откликнуться на вакансию на сайте работодателя вместо стандартного механизма откликов"
                }
              }
            },
            "content": {
              "text/html": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Ошибка в параметрах запроса",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorsVacancyApplyBadRequestErrors"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Невозможно откликнуться на вакансию",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsVacancyApplyForbiddenErrors"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Переписка (отклики/приглашения) для соискателя",
          "Отклики/приглашения работодателя",
          "Отклики/приглашения работодателя на уровне работодателя"
        ],
        "summary": "Список откликов/приглашений",
        "description": "Возвращает список откликов соискателя или список коллекций откликов/приглашений по [вакансии](#tag/Upravlenie-vakansiyami/operation/get-active-vacancy-list) работодателя.\n\nПо умолчанию отклики сортируются по дате последнего обновления — от новых к старым.\n\nЧтобы получить список активных откликов, передайте в запросе параметр `?status=active`\n",
        "operationId": "get-negotiations",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Номер страницы",
            "schema": {
              "type": "number",
              "default": "0"
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Количество элементов на странице",
            "schema": {
              "type": "number",
              "default": "20"
            }
          },
          {
            "name": "order_by",
            "in": "query",
            "description": "Тип сортировки. Возможные значения указаны в поле `negotiations_order` [справочника полей](#tag/Obshie-spravochniki/operation/get-dictionaries)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "order",
            "in": "query",
            "description": "Направление сортировки. Возможные значения: `asc` — по возрастанию, `desc` — по убыванию",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "vacancy_id",
            "in": "query",
            "description": "Фильтр по ID вакансии. Обязательный для работодателя",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "Запрос вернет только те отклики, которые находятся в определенном статусе.\n\nВозможные значения указаны в поле `applicant_negotiation_status` [справочника полей](#tag/Obshie-spravochniki/operation/get-dictionaries)\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "has_updates",
            "in": "query",
            "description": "Если передан `true`, запрос вернет только те отклики, для которых есть непросмотренные сообщения. По умолчанию `false`\n",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "with_job_search_status",
            "in": "query",
            "description": "Если передан `true`, запрос вернет статус поиска работы кандидатом\n",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "with_generated_collections",
            "in": "query",
            "description": "Если передан `true`, запрос вернет информацию по [сгенерированным коллекциям](https://github.com/hhru/api/blob/master/docs/employer_negotiations.md#term-collection) откликов/приглашений для данной вакансии.\n\nЧтобы получить выгрузку по нескольким коллекциям, запросите их последовательно. По умолчанию `false`\n",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "$ref": "#/components/parameters/Locale/schema"
          },
          {
            "$ref": "#/components/parameters/Host/schema"
          },
          {
            "$ref": "#/components/parameters/HHUserAgent/schema"
          }
        ],
        "responses": {
          "200": {
            "description": "Успешный ответ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NegotiationsListResponse"
                },
                "examples": {
                  "Пример ответа (соискатель)": {
                    "$ref": "#/components/examples/NegotiationsListResponse"
                  },
                  "Пример ответа (работодатель)": {
                    "$ref": "#/components/examples/NegotiationsEmployerListResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Ошибка параметров запроса",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonBadRequestBadArgumentBadRequestAndBadArgumentErrors"
                }
              }
            }
          },
          "403": {
            "description": "Текущий пользователь не является соискателем",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonBadAuthorizationErrors"
                }
              }
            }
          },
          "404": {
            "description": "Указанная вакансия не существует или у текущего пользователя нет доступа",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonNotFoundErrors"
                }
              }
            }
          }
        }
      }
    },
    "/employers/{employer_id}/managers/{manager_id}/negotiations_statistics": {
      "x-name": "/employers/{employer_id}/managers/{manager_id}/negotiations_statistics",
      "get": {
        "tags": [
          "Отклики/приглашения работодателя",
          "Отклики/приглашения работодателя на уровне работодателя"
        ],
        "summary": "Статистика откликов для менеджера",
        "description": "Запрос выводит статистику по работе с откликами для вакансий менеджера за период (30 дней). Статистика менеджера доступна самому менеджеру, а также менеджерам с [типом](#tag/Menedzhery-rabotodatelya/operation/get-employer-manager-types) `main_contact_person`.\n\nДополнительно рассчитывается [индекс вежливости](https://hh.ru/article/23734) менеджера по всем вакансиям\n",
        "operationId": "get-negotiations-statistics-manager",
        "parameters": [
          {
            "name": "employer_id",
            "in": "path",
            "required": true,
            "description": "Идентификатор работодателя",
            "schema": {
              "type": "string"
            },
            "example": "1455"
          },
          {
            "name": "manager_id",
            "in": "path",
            "required": true,
            "description": "Идентификатор менеджера",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/Locale/schema"
          },
          {
            "$ref": "#/components/parameters/Host/schema"
          },
          {
            "$ref": "#/components/parameters/HHUserAgent/schema"
          }
        ],
        "responses": {
          "200": {
            "description": "Успешный ответ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NegotiationsNegotiationsStatisticsManagerResponse"
                },
                "examples": {
                  "Пример ответа": {
                    "$ref": "#/components/examples/NegotiationsNegotiationsStatisticsManager"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Текущий пользователь не является менеджером или работодателем",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonBadAuthorizationErrors"
                }
              }
            }
          },
          "404": {
            "description": "Запрашиваемый работодатель или менеджер не существует или у текущего пользователя нет доступа",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonNotFoundErrors"
                }
              }
            }
          }
        }
      }
    },
    "/negotiations/active": {
      "x-name": "/negotiations/active",
      "get": {
        "tags": [
          "Переписка (отклики/приглашения) для соискателя"
        ],
        "summary": "Список активных откликов",
        "description": "Возвращает список активных откликов соискателя.\n\nЗапрос является устаревшим и поддерживается для обратной совместимости. Вместо него используйте [запрос списка откликов](#tag/Perepiska-(otklikipriglasheniya)-dlya-soiskatelya/operation/get-negotiations) с параметром `?status=active`\n",
        "operationId": "get-active-negotiations",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Номер страницы",
            "schema": {
              "type": "number",
              "default": "0"
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Количество элементов на странице",
            "schema": {
              "type": "number",
              "default": "20"
            }
          },
          {
            "name": "order_by",
            "in": "query",
            "description": "Тип сортировки. Возможные значения указаны в поле `negotiations_order` [справочника полей](#tag/Obshie-spravochniki/operation/get-dictionaries)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "order",
            "in": "query",
            "description": "Направление сортировки. Возможные значения: `asc` — по возрастанию, `desc` — по убыванию",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "vacancy_id",
            "in": "query",
            "description": "Фильтр по ID вакансии",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "has_updates",
            "in": "query",
            "description": "Если передан `true`, запрос вернет только те отклики, для которых есть непросмотренные сообщения. По умолчанию `false`\n",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "with_job_search_status",
            "in": "query",
            "description": "Если передан `true`, запрос вернет статус поиска работы кандидатом\n",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "$ref": "#/components/parameters/Locale/schema"
          },
          {
            "$ref": "#/components/parameters/Host/schema"
          },
          {
            "$ref": "#/components/parameters/HHUserAgent/schema"
          }
        ],
        "responses": {
          "200": {
            "description": "Успешный ответ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NegotiationsListResponse"
                },
                "examples": {
                  "Пример ответа": {
                    "$ref": "#/components/examples/NegotiationsListResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Ошибка параметров запроса",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonBadArgumentErrors"
                }
              }
            }
          },
          "403": {
            "description": "Текущий пользователь не является соискателем",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonBadAuthorizationErrors"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/message_templates/{template}": {
      "x-name": "/message_templates/{template}",
      "get": {
        "tags": [
          "Отклики/приглашения работодателя"
        ],
        "summary": "Список шаблонов ответов для отклика/приглашения",
        "description": "Метод требует наличия [платного доступа для работодателя](#operation/get-payable-api-method-access).\n\nВозвращает список шаблонов ответов для отклика/приглашения или резюме. Может использоваться в отправляемых соискателю приглашениях на вакансию или [действиях по откликам/приглашениям](#tag/Otklikipriglasheniya-rabotodatelya/operation/put-negotiations-collection-to-next-state).\n\n> Количество доступных шаблонов будет зависеть от конкретного отклика/приглашения или вакансии и их статусов.\n\nРекомендуется использовать URL из поля `templates.url` в [списке откликов/приглашений](#tag/Otklikipriglasheniya-rabotodatelya/operation/get-negotiations). Примеры:\n\n```\nGET /message_templates/{template}?topic_id={topic_id}\nGET /message_templates/{template}?vacancy_id={vacancy_id}&resume_id={resume_id}\n```\n",
        "operationId": "get-negotiation-message-templates",
        "parameters": [
          {
            "name": "template",
            "in": "path",
            "required": true,
            "description": "Название шаблона. Возможные варианты:\n\n* `invite` — текст при приглашении соискателя на вакансию;\n* `invite_after_response` — текст при [приглашении после отклика со стороны соискателя](#tag/Otklikipriglasheniya-rabotodatelya/operation/put-negotiations-collection-to-next-state);\n* `discard_after_response` — текст при [отказе после отклика](#tag/Otklikipriglasheniya-rabotodatelya/operation/put-negotiations-collection-to-next-state);\n* `discard_after_interview` — текст при [отказе после приглашения соискателя на интервью](#tag/Otklikipriglasheniya-rabotodatelya/operation/put-negotiations-collection-to-next-state).\n\nСписок шаблонов может быть расширен\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "topic_id",
            "in": "query",
            "description": "Идентификатор существующего отклика/приглашения. Не может передаваться одновременно с другими параметрами",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "vacancy_id",
            "in": "query",
            "description": "Идентификатор вакансии для приглашения. Передается только вместе с параметром `resume_id`",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "resume_id",
            "in": "query",
            "description": "Идентификатор резюме для приглашения на вакансию. Передается только вместе с параметром `vacancy_id`",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/Locale/schema"
          },
          {
            "$ref": "#/components/parameters/Host/schema"
          },
          {
            "$ref": "#/components/parameters/HHUserAgent/schema"
          }
        ],
        "responses": {
          "200": {
            "description": "Успешный ответ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NegotiationsNegotiationMessageTemplates"
                },
                "examples": {
                  "Пример ответа": {
                    "$ref": "#/components/examples/NegotiationsNegotiationMessageTemplates"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Переданы конфликтующие параметры запроса (`topic_id` одновременно с `resume_id` или `vacancy_id`) или параметры не переданы совсем. Расшифровка возможных ошибок:\n\n* `topic_id` — 1) указанного отклика/приглашения не существует, либо у текущего пользователя нет к нему доступа; 2) вакансия из отклика/приглашения была заархивирована; 3) резюме из отклика/приглашения было скрыто/удалено;\n* `resume_id` — указанного резюме не существует, либо у текущего пользователя нет к нему доступа;\n* `vacancy_id` — 1) указанной вакансии не существует; 2) вакансия скрыта/заархивирована; 3) у текущего пользователя нет доступа к вакансии\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonBadArgumentErrors"
                }
              }
            }
          },
          "403": {
            "description": "Ошибка авторизации, либо отсутствует доступ к платному методу",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonBadAuthorizationErrors"
                }
              }
            }
          },
          "404": {
            "description": "Запрашиваемый шаблон не существует",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonNotFoundErrors"
                }
              }
            }
          }
        }
      }
    },
    "/negotiations/response": {
      "x-name": "/negotiations/response",
      "get": {
        "tags": [
          "Отклики/приглашения работодателя",
          "Отклики/приглашения работодателя на уровне работодателя"
        ],
        "summary": "Список откликов/приглашений коллекции",
        "description": "Возвращает список откликов/приглашений для заданной коллекции. URL для запроса необходимо брать из поля `collections[].url` [списка коллекций](#tag/Otklikipriglasheniya-rabotodatelya/operation/get-negotiations).\n\n> Вместо `response` необходимо указывать параметр `{collection_name}` — название коллекции. Возможные значения указаны в поле `generated_collections.name` [списка коллекций](#tag/Otklikipriglasheniya-rabotodatelya/operation/get-negotiations).\n\nВ ответе будет только основная информация о резюме. Чтобы получить дополнительную информацию, например, контактный телефон, необходимо [запросить полное резюме](#tag/Upravlenie-vakansiyami/operation/get-vacancy).\n\nНекоторые параметры запроса могут принимать множественные значения: `key=value&key=value`. Если параметр может принимать несколько значений, об этом явно указано в его описании. Неизвестные параметры и параметры с ошибкой в названии игнорируются.\n\n> Коллекция `phone_calls` принимает только параметры `vacancy_id`, `order_by`, `page` и `per_page`\n",
        "operationId": "get-collection-negotiations-list",
        "parameters": [
          {
            "name": "vacancy_id",
            "in": "query",
            "required": true,
            "description": "Идентификатор вакансии",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "order_by",
            "in": "query",
            "description": "Тип сортировки. Возможные значения указаны в поле `order_types` [списка коллекций](#tag/Otklikipriglasheniya-rabotodatelya/operation/get-negotiations)\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Порядковый номер страницы в выдаче. Поддерживаются [стандартные параметры пагинации](#section/Obshaya-informaciya/Paginaciya). По умолчанию нумерация начинается с 0 страницы\n",
            "schema": {
              "type": "integer",
              "default": "0"
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Количество элементов на странице выдачи. Поддерживаются [стандартные параметры пагинации](#section/Obshaya-informaciya/Paginaciya). Максимальное значение — `50`\n",
            "schema": {
              "type": "integer",
              "default": "20"
            }
          },
          {
            "name": "age_from",
            "in": "query",
            "description": "Нижняя граница возраста соискателя в годах",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "age_to",
            "in": "query",
            "description": "Верхняя граница возраста соискателя в годах",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "area",
            "in": "query",
            "description": "Регион. Возможные значения указаны в [справочнике регионов](#tag/Obshie-spravochniki/operation/get-areas). Можно указать несколько значений.\n\nПо умолчанию выбираются резюме, в которых соискатели живут в указанных регионах или готовы в них переехать. Поменять это поведение поиска можно, указав параметр `relocation`\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "citizenship",
            "in": "query",
            "description": "Страна гражданства соискателя. Возможные значения перечислены в [справочнике стран](#tag/Obshie-spravochniki/operation/get-countries). Можно указать несколько значений\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "currency",
            "in": "query",
            "description": "Код валюты. Возможные значения перечислены в поле `currency.code` в [справочнике полей](#tag/Obshie-spravochniki/operation/get-dictionaries)\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "driver_license_types",
            "in": "query",
            "description": "Категории водительских прав соискателя. Возможные значения перечислены в поле `driver_license_types` в [справочнике полей](#tag/Obshie-spravochniki/operation/get-dictionaries)\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "educational_institution",
            "in": "query",
            "description": "Учебные заведения соискателя. В качестве параметров используются [подсказки по названиям университетов](#tag/Podskazki/operation/get-educational-institutions-suggests). Можно указать несколько значений\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "education_level",
            "in": "query",
            "description": "Уровень образования. Возможные значения перечислены в поле `education_level` в [справочнике полей](#tag/Obshie-spravochniki/operation/get-dictionaries). Если параметр не указан, поиск ведется без ограничений на уровень образования\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "experience",
            "in": "query",
            "description": "Опыт работы. Возможные значения перечислены в поле `experience` в [справочнике полей](#tag/Obshie-spravochniki/operation/get-dictionaries)\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "gender",
            "in": "query",
            "description": "Пол соискателя. Возможные значения перечислены в поле `gender` в [справочнике полей](#tag/Obshie-spravochniki/operation/get-dictionaries).\n\nПо умолчанию вне зависимости от значения параметра будут найдены резюме, в которых пол не указан, исключить из поисковой выдачи такие резюме можно с помощью параметра `label=only_with_gender`\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "language",
            "in": "query",
            "description": "Знание языка. Можно указать несколько значений. Задается в формате `language.level`, где:\n\n* `language` — значение из [справочника языков](#tag/Obshie-spravochniki/operation/get-languages);\n* `language_level` — значение одноименного поля [справочника полей](#tag/Obshie-spravochniki/operation/get-dictionaries)\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "relocation",
            "in": "query",
            "description": "Готовность к переезду. Возможные значения указаны в поле `resume_search_relocation` в [справочнике полей](#tag/Obshie-spravochniki/operation/get-dictionaries). Необходимо указывать вместе с параметром `area`\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "salary_from",
            "in": "query",
            "description": "Нижняя граница желаемой заработной платы (ЗП)",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "salary_to",
            "in": "query",
            "description": "Верхняя граница желаемой заработной платы (ЗП)",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "search_radius_meters",
            "in": "query",
            "description": "Расстояние до кандидата (в метрах)",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "search_text",
            "in": "query",
            "description": "Поисковая строка",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "show_only_new_responses",
            "in": "query",
            "description": "Показывать только непросмотренные отклики коллекции «Все неразобранные» (`/response`)\n",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "show_only_with_vehicle",
            "in": "query",
            "description": "Показывать соискателей с личным автомобилем",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "show_only_new",
            "in": "query",
            "description": "Показывать только отклики, в которых есть непрочитанные сообщения для всех коллекций, кроме «Все неразобранные» (`/response`)\n",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "$ref": "#/components/parameters/Locale/schema"
          },
          {
            "$ref": "#/components/parameters/Host/schema"
          },
          {
            "$ref": "#/components/parameters/HHUserAgent/schema"
          }
        ],
        "responses": {
          "200": {
            "description": "Успешный ответ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NegotiationsCollectionNegotiationsResponse"
                },
                "examples": {
                  "Пример ответа": {
                    "$ref": "#/components/examples/NegotiationsCollectionNegotiations"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Ошибка в параметрах запроса",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonBadArgumentErrors"
                }
              }
            }
          },
          "403": {
            "description": "Текущий пользователь не является работодателем или не имеет доступа к методу",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonBadAuthorizationCommonAndPaymentMethodError"
                }
              }
            }
          },
          "404": {
            "description": "Запрашиваемая вакансия не существует или недоступна для текущего пользователя",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonNotFoundErrors"
                }
              }
            }
          }
        }
      }
    },
    "/negotiations/{nid}/test/solution": {
      "x-name": "/negotiations/{nid}/test/solution",
      "get": {
        "tags": [
          "Отклики/приглашения работодателя",
          "Отклики/приглашения работодателя на уровне работодателя"
        ],
        "summary": "Получить результаты тестов, прикрепленных к вакансии",
        "description": "Запрос возвращает информацию о пройденных тестах откликнувшегося соискателя",
        "operationId": "get-negotiation-test-results",
        "parameters": [
          {
            "name": "nid",
            "in": "path",
            "required": true,
            "description": "Идентификатор отклика",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/Locale/schema"
          },
          {
            "$ref": "#/components/parameters/Host/schema"
          },
          {
            "$ref": "#/components/parameters/HHUserAgent/schema"
          }
        ],
        "responses": {
          "200": {
            "description": "Успешный ответ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NegotiationsNegotiationTestResultsResponse"
                },
                "examples": {
                  "Пример ответа": {
                    "$ref": "#/components/examples/NegotiationsNegotiationTestResults"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Текущий пользователь не является работодателем",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonBadAuthorizationErrors"
                }
              }
            }
          },
          "404": {
            "description": "Указанный отклик/приглашение не найден или у текущего пользователя нет доступа",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonNotFoundErrors"
                }
              }
            }
          }
        }
      }
    },
    "/negotiations/{nid}/messages/{mid}": {
      "x-name": "/negotiations/{nid}/messages/{mid}",
      "put": {
        "tags": [
          "Переписка (отклики/приглашения) для соискателя"
        ],
        "summary": "Редактирование сообщения в отклике",
        "description": "На данный момент доступно редактирование только сообщения при отклике. \n\nТекст сообщения можно редактировать после отправки при соблюдении следующих условий:\n- сообщение еще не прочитано другой стороной;\n- вакансия, на которую отправлялся отклик, должна быть активна (не в архиве); \n- резюме из отклика не должно быть скрыто или удалено. \n\nУсловия могут измениться.\n\nУ каждого сообщения в [списке сообщений в отклике](https://github.com/hhru/api/blob/master/docs/negotiations.md#%D0%BF%D1%80%D0%BE%D1%81%D0%BC%D0%BE%D1%82%D1%80-%D1%81%D0%BF%D0%B8%D1%81%D0%BA%D0%B0-%D1%81%D0%BE%D0%BE%D0%B1%D1%89%D0%B5%D0%BD%D0%B8%D0%B9-%D0%B2-%D0%BE%D1%82%D0%BA%D0%BB%D0%B8%D0%BA%D0%B5) в поле `editable` указана возможность редактирования\n",
        "operationId": "edit-negotiation-message",
        "parameters": [
          {
            "name": "nid",
            "in": "path",
            "required": true,
            "description": "Идентификатор отклика",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "mid",
            "in": "path",
            "required": true,
            "description": "Идентификатор сообщения в отклике",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/Locale/schema"
          },
          {
            "$ref": "#/components/parameters/Host/schema"
          },
          {
            "$ref": "#/components/parameters/HHUserAgent/schema"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/SuccessNoContent",
            "description": ""
          },
          "403": {
            "description": "Выбранное сообщение не может быть отредактировано",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsNegotiationEditMessageForbiddenErrors"
                }
              }
            }
          },
          "404": {
            "description": "Указанный отклик или сообщение не были найдены",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonNotFoundErrors"
                }
              }
            }
          }
        }
      }
    },
    "/negotiations/read": {
      "x-name": "/negotiations/read",
      "post": {
        "tags": [
          "Отклики/приглашения работодателя",
          "Отклики/приглашения работодателя на уровне работодателя"
        ],
        "summary": "Отметить отклики прочитанными",
        "operationId": "post-negotiations-topics-read",
        "parameters": [
          {
            "$ref": "#/components/parameters/Locale/schema"
          },
          {
            "$ref": "#/components/parameters/Host/schema"
          },
          {
            "$ref": "#/components/parameters/HHUserAgent/schema"
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "required": [
                  "topic_id"
                ],
                "properties": {
                  "topic_id": {
                    "type": "string",
                    "description": "Идентификаторы откликов",
                    "maximum": 50.0
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/SuccessNoContent",
            "description": ""
          },
          "400": {
            "description": "Ошибка в параметрах запроса",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonBadArgumentErrors"
                }
              }
            }
          },
          "403": {
            "description": "Текущий пользователь не является работодателем",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonBadAuthorizationErrors"
                }
              }
            }
          },
          "404": {
            "description": "Топик не существует или недоступен для текущего пользователя",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonNotFoundErrors"
                }
              }
            }
          }
        }
      }
    },
    "/negotiations/active/{nid}": {
      "x-name": "/negotiations/active/{nid}",
      "delete": {
        "tags": [
          "Переписка (отклики/приглашения) для соискателя"
        ],
        "summary": "Скрыть отклик",
        "operationId": "hide-active-response",
        "parameters": [
          {
            "name": "nid",
            "in": "path",
            "required": true,
            "description": "Идентификатор отклика",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "with_decline_message",
            "in": "query",
            "description": "Должно ли быть отправлено работодателю сообщение об отказе, по умолчанию `false`. Возможность отправить сообщение об отказе определяется полем `decline_allowed` получаемым при запросе [списка откликов или одного отклика](https://github.com/hhru/api/blob/e2a0ac4e174a6b56272f78348c05958f5db1b392/docs/negotiations.md#get_negotiation)\n",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "$ref": "#/components/parameters/Locale/schema"
          },
          {
            "$ref": "#/components/parameters/Host/schema"
          },
          {
            "$ref": "#/components/parameters/HHUserAgent/schema"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/SuccessNoContent",
            "description": ""
          },
          "403": {
            "description": "Невозможно отправить сообщение об отказе",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsNegotiationHideResponseForbiddenErrors"
                }
              }
            }
          },
          "404": {
            "description": "Отклик не существует",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonNotFoundErrors"
                }
              }
            }
          },
          "425": {
            "description": "Чат отклика еще не готов",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsNegotiationHideResponseErrors"
                }
              }
            }
          }
        }
      }
    },
    "/negotiations/{nid}": {
      "x-name": "/negotiations/{nid}",
      "get": {
        "tags": [
          "Переписка (отклики/приглашения) для соискателя",
          "Отклики/приглашения работодателя"
        ],
        "summary": "Просмотр отклика/приглашения",
        "description": "Запрос возвращает информацию об отклике/приглашении по его ID.\n\nРаботодатель может получить URL для запроса из [списка откликов/приглашений](https://github.com/hhru/api/blob/master/docs/employer_negotiations.md#negotiations-list) (поле `items[].url`).\n\n> !! Обратите внимание, что методы для работы с сообщениями в рамках отклика/приглашения от имени [соискателя](#tag/Perepiska-(otklikipriglasheniya)-dlya-soiskatelya/operation/get-negotiation-messages) и [менеджера работодателя](https://github.com/hhru/api/blob/master/docs/employer_negotiations.md#get-messages) устарели, и новые возможности [чатов](https://feedback.hh.ru/knowledge-base/article/1290) в них не будут поддерживаться\n",
        "operationId": "get-negotiation-item",
        "parameters": [
          {
            "name": "nid",
            "in": "path",
            "required": true,
            "description": "Идентификатор отклика",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/Locale/schema"
          },
          {
            "$ref": "#/components/parameters/Host/schema"
          },
          {
            "$ref": "#/components/parameters/HHUserAgent/schema"
          }
        ],
        "responses": {
          "200": {
            "description": "Отклик/приглашение получено",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NegotiationsNegotiationGetResponse"
                },
                "examples": {
                  "Пример ответа (соискатель)": {
                    "$ref": "#/components/examples/NegotiationsNegotiationItem"
                  },
                  "Пример ответа (работодатель)": {
                    "$ref": "#/components/examples/NegotiationsEmployerNegotiationItem"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Текущий пользователь не является работодателем",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonBadAuthorizationErrors"
                }
              }
            }
          },
          "404": {
            "description": "Указанный отклик/приглашение не найден или у текущего пользователя нет доступа",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsNegotiationNegotiationsNotFoundErrors"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Отклики/приглашения работодателя",
          "Отклики/приглашения работодателя на уровне работодателя"
        ],
        "summary": "Действия по откликам/приглашениям",
        "description": "Работодатель может изменять состояние (state) отклика для соискателя, чтобы повысить качество обратной связи и упростить работу со статистикой откликов.\n\nЕсли работодатель, используя данный метод, отправляет соискателю сообщение об изменении состояния отклика/приглашения (поле `message` в теле запроса), это приведет также к изменению соискательского состояния отклика/приглашения.\n\nОбязательность аргументов в теле запроса отличается для разных откликов/приглашений. Проверить, является ли аргумент обязательным можно в поле `actions.arguments`, которое возвращается для каждого отклика в [списке откликов/приглашений](https://github.com/hhru/api/blob/master/docs/employer_negotiations.md#действия-по-откликуприглашению-actions)\n",
        "operationId": "put-negotiations-collection-to-next-state",
        "parameters": [
          {
            "name": "nid",
            "in": "path",
            "required": true,
            "description": "Идентификатор [коллекции](#tag/Otklikipriglasheniya-rabotodatelya/operation/get-negotiations) топиков, в которую будет перенесено состояние отклика",
            "schema": {
              "type": "string",
              "example": "discard"
            }
          },
          {
            "$ref": "#/components/parameters/Locale/schema"
          },
          {
            "$ref": "#/components/parameters/Host/schema"
          },
          {
            "$ref": "#/components/parameters/HHUserAgent/schema"
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "required": [
                  "topic_id"
                ],
                "properties": {
                  "topic_id": {
                    "type": "string",
                    "description": "Идентификаторы откликов",
                    "maximum": 50.0
                  },
                  "address_id": {
                    "type": "string",
                    "description": "Идентификатор [адреса](https://api.hh.ru/openapi/redoc#tag/Adresa-rabotodatelya), который будет указан в приглашении"
                  },
                  "message": {
                    "type": "string",
                    "description": "Сообщение, которое будет отправлено соискателю на электронную почту. Используйте [шаблоны](#tag/Otklikipriglasheniya-rabotodatelya/operation/get-mail-templates) для получения текстов"
                  },
                  "send_sms": {
                    "type": "boolean",
                    "description": "Если установлено `true`, соискателю будет отправлено SMS-уведомление о приглашении. Обратите внимание, что в SMS-сообщении используется стандартный текст, изменить его нельзя",
                    "default": "false"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/SuccessNoContent",
            "description": ""
          },
          "400": {
            "description": "Ошибка в параметрах запроса",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonBadArgumentErrors"
                }
              }
            }
          },
          "403": {
            "description": "Текущий пользователь не является работодателем",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonBadAuthorizationErrors"
                }
              }
            }
          },
          "404": {
            "description": "Топик не существует или недоступен для текущего пользователя",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonNotFoundErrors"
                }
              }
            }
          }
        }
      }
    },
    "/employers/{employer_id}/negotiations_statistics": {
      "x-name": "/employers/{employer_id}/negotiations_statistics",
      "get": {
        "tags": [
          "Отклики/приглашения работодателя",
          "Отклики/приглашения работодателя на уровне работодателя"
        ],
        "summary": "Статистика откликов для компании",
        "description": "Запрос выводит статистику по работе с откликами для вакансий компании за период (30 дней).\n\nДополнительно рассчитывается [индекс вежливости](https://hh.ru/article/23734) компании по всем вакансиям\n",
        "operationId": "get-negotiations-statistics-employer",
        "parameters": [
          {
            "name": "employer_id",
            "in": "path",
            "required": true,
            "description": "Идентификатор работодателя",
            "schema": {
              "type": "string"
            },
            "example": "1455"
          },
          {
            "$ref": "#/components/parameters/Locale/schema"
          },
          {
            "$ref": "#/components/parameters/Host/schema"
          },
          {
            "$ref": "#/components/parameters/HHUserAgent/schema"
          }
        ],
        "responses": {
          "200": {
            "description": "Успешный ответ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NegotiationsNegotiationsStatisticsEmployerResponse"
                },
                "examples": {
                  "Пример ответа": {
                    "$ref": "#/components/examples/NegotiationsNegotiationsStatisticsEmployer"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Текущий пользователь не является работодателем",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonBadAuthorizationErrors"
                }
              }
            }
          },
          "404": {
            "description": "Запрашиваемый работодатель не существует или у текущего пользователя нет доступа",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonNotFoundErrors"
                }
              }
            }
          }
        }
      }
    },
    "/negotiations/{nid}/messages": {
      "x-name": "/negotiations/{nid}/messages",
      "post": {
        "tags": [
          "Переписка (отклики/приглашения) для соискателя",
          "Отклики/приглашения работодателя"
        ],
        "summary": "Отправка нового сообщения",
        "description": "Запрос отправляет новое сообщение в рамках переписки.\n\nОтправить новое сообщение можно, если:\n\n* Работодатель пригласил соискателя на вакансию.\n* Соискатель оставил отклик на вакансию.\n\nЕсли вакансия была отправлена в архив или соискатель удалил резюме, переписка будет недоступна. Работодатель также может вручную отключить переписку для вакансии.\n\n‼️ Обратите внимание, что методы для работы с сообщениями в рамках отклика/приглашения от имени [соискателя](#tag/Perepiska-(otklikipriglasheniya)-dlya-soiskatelya/operation/get-negotiation-messages) и \n  [менеджера работодателя](https://github.com/hhru/api/blob/master/docs/employer_negotiations.md#get-messages) устарели, и новые возможности [чатов](https://feedback.hh.ru/knowledge-base/article/1290) в них не будут поддерживаться.\n  В связи с этим переписка может некорректно отображаться\n",
        "operationId": "send-negotiation-message",
        "parameters": [
          {
            "name": "nid",
            "in": "path",
            "required": true,
            "description": "Идентификатор отклика/приглашения",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/Locale/schema"
          },
          {
            "$ref": "#/components/parameters/Host/schema"
          },
          {
            "$ref": "#/components/parameters/HHUserAgent/schema"
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string",
                    "description": "Сообщение отклика/приглашения"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Сообщение отправлено",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NegotiationsMessageSent"
                },
                "examples": {
                  "Пример ответа (соискатель)": {
                    "$ref": "#/components/examples/NegotiationsMessageSent"
                  }
                }
              },
              "text/html": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Ошибка в параметрах запроса",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonNotFoundErrors"
                }
              }
            }
          },
          "403": {
            "description": "Не удалось отправить сообщение",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorsVacancyApplyForbiddenErrors"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorsCommonBadAuthorizationErrors"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Указанный отклик/приглашение не найден или у текущего пользователя нет доступа",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsNegotiationNegotiationsNotFoundErrors"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Переписка (отклики/приглашения) для соискателя"
        ],
        "summary": "Просмотр списка сообщений в отклике",
        "operationId": "get-negotiation-messages",
        "parameters": [
          {
            "name": "nid",
            "in": "path",
            "required": true,
            "description": "Идентификатор отклика",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/Locale/schema"
          },
          {
            "$ref": "#/components/parameters/Host/schema"
          },
          {
            "$ref": "#/components/parameters/HHUserAgent/schema"
          }
        ],
        "responses": {
          "200": {
            "description": "Сообщение получено",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NegotiationsMessagesGetResponse"
                },
                "examples": {
                  "Пример ответа": {
                    "$ref": "#/components/examples/NegotiationsMessageGet"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/vacancies/drafts/{draft_id}": {
      "x-name": "/vacancies/drafts/{draft_id}",
      "get": {
        "tags": [
          "Черновики вакансий"
        ],
        "summary": "Получение черновика вакансии",
        "operationId": "get-vacancy-draft",
        "parameters": [
          {
            "name": "draft_id",
            "in": "path",
            "required": true,
            "description": "Идентификатор черновика",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/Locale/schema"
          },
          {
            "$ref": "#/components/parameters/Host/schema"
          },
          {
            "$ref": "#/components/parameters/HHUserAgent/schema"
          }
        ],
        "responses": {
          "200": {
            "description": "Успешный ответ содержит информацию по созданному черновику и дополнительную информацию по полям",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VacancyDraftVacancyDraftFull"
                },
                "examples": {
                  "Пример ответа": {
                    "$ref": "#/components/examples/VacancyDraftVacancyDraftFull"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Текущий пользователь не является работодателем",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonBadAuthorizationErrors"
                }
              }
            }
          },
          "404": {
            "description": "Черновик не найден или пользователь не имеет прав на просмотр указанного черновика",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonNotFoundErrors"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Черновики вакансий"
        ],
        "summary": "Изменение черновика вакансии",
        "operationId": "change-vacancy-draft",
        "parameters": [
          {
            "name": "draft_id",
            "in": "path",
            "required": true,
            "description": "Идентификатор черновика",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/Locale/schema"
          },
          {
            "$ref": "#/components/parameters/Host/schema"
          },
          {
            "$ref": "#/components/parameters/HHUserAgent/schema"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VacancyDraftVacancyDraftBodyCommon"
              },
              "examples": {
                "Пример запроса": {
                  "$ref": "#/components/examples/VacancyDraftVacancyDraftCreate"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Успешный ответ содержит информацию по измененому черновику и дополнительную информацию по полям",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VacancyDraftDraftResponseSchema"
                }
              }
            }
          },
          "400": {
            "description": "Переданный формат не json",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonBadJsonDataErrors"
                }
              }
            }
          },
          "403": {
            "description": "Запрос выполнен не с авторизацией работодателя или черновик не был создан вами",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonBadAuthorizationErrors"
                }
              }
            }
          },
          "404": {
            "description": "Черновик не найден",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonNotFoundErrors"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Черновики вакансий"
        ],
        "summary": "Удаление черновика вакансии",
        "operationId": "delete-vacancy-draft",
        "parameters": [
          {
            "name": "draft_id",
            "in": "path",
            "required": true,
            "description": "Идентификатор черновика",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/Locale/schema"
          },
          {
            "$ref": "#/components/parameters/Host/schema"
          },
          {
            "$ref": "#/components/parameters/HHUserAgent/schema"
          }
        ],
        "responses": {
          "204": {
            "description": "Успешное выполнение запроса, черновик удалён"
          },
          "403": {
            "description": "Текущий пользователь не является работодателем",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonBadAuthorizationErrors"
                }
              }
            }
          },
          "404": {
            "description": "Черновик не найден или у пользователя нет прав на удаление данного черновика",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonNotFoundErrors"
                }
              }
            }
          }
        }
      }
    },
    "/vacancies/drafts/{draft_id}/publish": {
      "x-name": "/vacancies/drafts/{draft_id}/publish",
      "post": {
        "tags": [
          "Черновики вакансий"
        ],
        "summary": "Публикация вакансии на основе черновика",
        "operationId": "publish-vacancy-from-draft",
        "parameters": [
          {
            "name": "draft_id",
            "in": "path",
            "required": true,
            "description": "Идентификатор черновика вакансии",
            "schema": {
              "type": "string"
            },
            "example": "1110031"
          },
          {
            "$ref": "#/components/parameters/Locale/schema"
          },
          {
            "$ref": "#/components/parameters/Host/schema"
          },
          {
            "$ref": "#/components/parameters/HHUserAgent/schema"
          }
        ],
        "responses": {
          "201": {
            "description": "Массив идентификаторов опубликованных вакансий",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VacancyDraftVacanciesDraftResponse"
                }
              }
            }
          },
          "400": {
            "description": "Ошибки в полях при добавлении вакансии",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsVacancyErrors"
                }
              }
            }
          },
          "403": {
            "description": "Запрос выполнен не с авторизацией работодателя",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonBadAuthorizationErrors"
                }
              }
            }
          },
          "404": {
            "description": "Черновик не найден",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonNotFoundErrors"
                }
              }
            }
          }
        }
      }
    },
    "/vacancies/drafts/{draft_id}/duplicates": {
      "x-name": "/vacancies/drafts/{draft_id}/duplicates",
      "get": {
        "tags": [
          "Черновики вакансий"
        ],
        "summary": "Проверка наличия дубликатов вакансии",
        "operationId": "search-for-vacancy-draft-duplicates",
        "parameters": [
          {
            "name": "draft_id",
            "in": "path",
            "required": true,
            "description": "Идентификатор черновика вакансии",
            "schema": {
              "type": "string"
            },
            "example": "12358"
          },
          {
            "$ref": "#/components/parameters/Locale/schema"
          },
          {
            "$ref": "#/components/parameters/Host/schema"
          },
          {
            "$ref": "#/components/parameters/HHUserAgent/schema"
          }
        ],
        "responses": {
          "200": {
            "description": "Информация про найденные дубликаты вакансии",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VacancyDuplicates"
                },
                "examples": {
                  "Пример ответа": {
                    "$ref": "#/components/examples/VacancyDuplicates"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Текущий пользователь не является работодателем",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonBadAuthorizationErrors"
                }
              }
            }
          },
          "404": {
            "description": "Черновик не найден",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonNotFoundErrors"
                }
              }
            }
          }
        }
      }
    },
    "/vacancies/drafts": {
      "x-name": "/vacancies/drafts",
      "post": {
        "tags": [
          "Черновики вакансий"
        ],
        "summary": "Создание черновика вакансии",
        "operationId": "create-vacancy-draft",
        "parameters": [
          {
            "$ref": "#/components/parameters/Locale/schema"
          },
          {
            "$ref": "#/components/parameters/Host/schema"
          },
          {
            "$ref": "#/components/parameters/HHUserAgent/schema"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VacancyDraftVacancyDraftCreate"
              },
              "examples": {
                "Пример запроса": {
                  "$ref": "#/components/examples/VacancyDraftVacancyDraftCreate"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Успешный ответ содержит информацию по созданному черновику и дополнительную информацию по полям",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VacancyDraftDraftResponseSchema"
                }
              }
            }
          },
          "400": {
            "description": "Переданный формат не json",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonBadJsonDataErrors"
                }
              }
            }
          },
          "403": {
            "description": "Запрос выполнен не с авторизацией работодателя",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonBadAuthorizationErrors"
                }
              }
            }
          },
          "429": {
            "description": "Превышено допустимое количество черновиков",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsDraftError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Черновики вакансий"
        ],
        "summary": "Получение списка черновиков вакансий",
        "operationId": "get-vacancy-draft-list",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Номер страницы (считается от 0, по умолчанию - 0)",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Количество элементов (по умолчанию - 20, максимальное значение - 50)",
            "schema": {
              "type": "number"
            }
          },
          {
            "$ref": "#/components/parameters/Locale/schema"
          },
          {
            "$ref": "#/components/parameters/Host/schema"
          },
          {
            "$ref": "#/components/parameters/HHUserAgent/schema"
          }
        ],
        "responses": {
          "200": {
            "description": "Успешный ответ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VacancyDraftVacancyDraftItems"
                },
                "examples": {
                  "Пример ответа": {
                    "$ref": "#/components/examples/VacancyDraftVacancyDraftItems"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Текущий пользователь не является работодателем",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonBadAuthorizationErrors"
                }
              }
            }
          }
        }
      }
    },
    "/vacancies/auto_publication": {
      "x-name": "/vacancies/auto_publication",
      "delete": {
        "tags": [
          "Черновики вакансий"
        ],
        "summary": "Отмена автопубликации вакансии",
        "operationId": "disable-automatic-vacancy-publication",
        "parameters": [
          {
            "name": "draft_id",
            "in": "query",
            "required": true,
            "description": "Идентификатор черновика",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/Locale/schema"
          },
          {
            "$ref": "#/components/parameters/Host/schema"
          },
          {
            "$ref": "#/components/parameters/HHUserAgent/schema"
          }
        ],
        "responses": {
          "204": {
            "description": "Успешное выполнение запроса, автопубликация произведена не будет"
          },
          "400": {
            "description": "Не передан draft_id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonBadArgumentErrors"
                }
              }
            }
          },
          "403": {
            "description": "Текущий пользователь не является работодателем",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonBadAuthorizationErrors"
                }
              }
            }
          },
          "404": {
            "description": "Черновик не найден или у пользователя нет прав на удаление данного расписания",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonNotFoundErrors"
                }
              }
            }
          }
        }
      }
    },
    "/webhook/subscriptions/{subscription_id}": {
      "x-name": "/webhook/subscriptions/{subscription_id}",
      "put": {
        "tags": [
          "Webhook API"
        ],
        "summary": "Изменить подписку на уведомления",
        "description": "Обновить можно как каждое поле по отдельности (в таком случае нужно отправить только обновляемое поле), так и несколько полей одновременно. Для обновления `actions` нужно передать полный список типов событий, по которым будут формироваться уведомления. Переданные типы событий не добавляются к типам событий, на которые пользователь уже подписан.\nПустой список `actions` передать нельзя\n",
        "operationId": "change-webhook-subscription",
        "parameters": [
          {
            "name": "subscription_id",
            "in": "path",
            "required": true,
            "description": "Идентификатор подписки",
            "schema": {
              "type": "string"
            },
            "example": "1455"
          },
          {
            "$ref": "#/components/parameters/Locale/schema"
          },
          {
            "$ref": "#/components/parameters/Host/schema"
          },
          {
            "$ref": "#/components/parameters/HHUserAgent/schema"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebhookSubscriptionUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/SuccessNoContent",
            "description": ""
          },
          "400": {
            "description": "Ошибка параметров запроса",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonBadJsonDataErrors"
                }
              }
            }
          },
          "403": {
            "description": "Запрос выполнен не с авторизацией работодателя",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonBadAuthorizationErrors"
                }
              }
            }
          },
          "404": {
            "description": "Подписка не найдена или недоступна текущему пользователю",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonNotFoundErrors"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Webhook API"
        ],
        "summary": "Удалить подписку на уведомление",
        "operationId": "cancel-webhook-subscription",
        "parameters": [
          {
            "name": "subscription_id",
            "in": "path",
            "required": true,
            "description": "Идентификатор подписки",
            "schema": {
              "type": "string"
            },
            "example": "1455"
          },
          {
            "$ref": "#/components/parameters/Locale/schema"
          },
          {
            "$ref": "#/components/parameters/Host/schema"
          },
          {
            "$ref": "#/components/parameters/HHUserAgent/schema"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/SuccessNoContent",
            "description": ""
          },
          "403": {
            "description": "Запрос выполнен не с авторизацией работодателя",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonBadAuthorizationErrors"
                }
              }
            }
          },
          "404": {
            "description": "Подписка не найдена или недоступна текущему пользователю",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonNotFoundErrors"
                }
              }
            }
          }
        }
      }
    },
    "/webhook/subscriptions": {
      "x-name": "/webhook/subscriptions",
      "post": {
        "tags": [
          "Webhook API"
        ],
        "summary": "Подписаться на уведомления",
        "description": "В рамках одного приложения пользователь может получать уведомления только на 1 url:  \nнельзя подписаться разными действиями на разные урлы.\nПосле наступления события будет отправлен POST-запрос на указанный URL c json телом (**см. раздел \"Callbacks\"**). \n\nВ ответ на POST-запрос ожидается ответ с кодом `2хх Success`, если сообщение принято, или `409 Conflict`, если пришел дубликат. \nДля определения дубликатов нужно использовать id из запроса - уникальный идентификатор для пары \"пользователь + приложение\" в рамках одного типа события в подписке. \nДубликаты возможны, если мы не получили ответ из-за проблем с сетью, или не получили ожидаемый ответ.\n\nЕсли в рамках одной подписки ожидаемые ответы не поступают долгое время, \nна почту разработчика приложения будет отправлено уведомительное письмо, подписка автоматически деактивируется, а отправки прекращаются. \n\nПри удалении приложения владельцем или отзыве пользователем доступа у приложения все подписки на уведомления удаляются. \nПосле восстановления доступа необходимо оформить новую подписку. \n\nВебхуки не являются средствами гарантированной доставки. Мы отправляем все сообщения, но не гарантируем, что адресат их получит\n\nСтруктура и содержимое колбэков описаны в разделе [callbacks](#callbacks)\n",
        "operationId": "post-webhook-subscription",
        "parameters": [
          {
            "$ref": "#/components/parameters/Locale/schema"
          },
          {
            "$ref": "#/components/parameters/Host/schema"
          },
          {
            "$ref": "#/components/parameters/HHUserAgent/schema"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebhookSubscriptionCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "$ref": "#/components/responses/SuccessCreated",
            "description": ""
          },
          "400": {
            "description": "Ошибка параметров запроса",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebhookBadDataError"
                }
              }
            }
          },
          "403": {
            "description": "Запрос <a name=\"callbacks\"></a> не от работодателя\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonBadAuthorizationErrors"
                }
              }
            }
          }
        },
        "callbacks": {
          "onData": {
            "/url_used_for_subscription": {
              "post": {
                "requestBody": {
                  "description": "Отправленный объект",
                  "content": {
                    "application/json": {
                      "schema": {
                        "oneOf": [
                          {
                            "$ref": "#/components/schemas/WebhookSendObjectBaseUser"
                          }
                        ]
                      }
                    }
                  }
                },
                "responses": {
                  "409": {
                    "description": "В ответ на наше исходящее сообщение код 2** или 409 принимается за успех"
                  },
                  "2XX": {
                    "description": "В ответ на наше исходящее сообщение код 2** или 409 принимается за успех"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Webhook API"
        ],
        "summary": "Получить список уведомлений, на которые подписан пользователь",
        "operationId": "get-webhook-subscriptions",
        "parameters": [
          {
            "$ref": "#/components/parameters/Locale/schema"
          },
          {
            "$ref": "#/components/parameters/Host/schema"
          },
          {
            "$ref": "#/components/parameters/HHUserAgent/schema"
          }
        ],
        "responses": {
          "200": {
            "description": "Успешный ответ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebhookSubscriptionsOutput"
                }
              }
            }
          },
          "403": {
            "description": "Запрос выполнен не с авторизацией работодателя",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonBadAuthorizationErrors"
                }
              }
            }
          }
        }
      }
    },
    "/employers/{employer_id}/tests": {
      "x-name": "/employers/{employer_id}/tests",
      "get": {
        "tags": [
          "Информация о работодателе",
          "Информация о работодателе на уровне работодателя"
        ],
        "summary": "Справочник тестов работодателя",
        "description": "Возвращает список сохраненных тестов работодателя",
        "operationId": "get-tests-dictionary",
        "parameters": [
          {
            "name": "employer_id",
            "in": "path",
            "required": true,
            "description": "Идентификатор работодателя",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/Locale/schema"
          },
          {
            "$ref": "#/components/parameters/Host/schema"
          },
          {
            "$ref": "#/components/parameters/HHUserAgent/schema"
          }
        ],
        "responses": {
          "200": {
            "description": "Успешный ответ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmployerDictionariesTestsResponse"
                },
                "examples": {
                  "Пример ответа": {
                    "$ref": "#/components/examples/EmployerDictionariesTests"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Ошибка авторизации. Пользователь не является работодателем",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonBadAuthorizationErrors"
                }
              }
            }
          },
          "404": {
            "description": "Работодатель не найден",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonNotFoundErrors"
                }
              }
            }
          }
        }
      }
    },
    "/employers/{employer_id}/vacancy_areas/active": {
      "x-name": "/employers/{employer_id}/vacancy_areas/active",
      "get": {
        "tags": [
          "Информация о работодателе"
        ],
        "summary": "Список регионов, в которых есть активные вакансии",
        "description": "Возвращает список регионов, в которых на данный момент есть активные вакансии от указанного работодателя.\n\nЗначения в справочнике могут поменяться в любой момент\n",
        "operationId": "get-employer-vacancy-areas",
        "parameters": [
          {
            "name": "employer_id",
            "in": "path",
            "required": true,
            "description": "Идентификатор работодателя, который можно узнать [в информации о текущем пользователе](#tag/Informaciya-o-menedzhere/operation/get-current-user-info)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/Locale/schema"
          },
          {
            "$ref": "#/components/parameters/Host/schema"
          },
          {
            "$ref": "#/components/parameters/HHUserAgent/schema"
          }
        ],
        "responses": {
          "200": {
            "description": "Успешный ответ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmployersEmployerVacancyAreasResponse"
                },
                "examples": {
                  "Пример ответа": {
                    "$ref": "#/components/examples/EmployersEmployerVacancyAreas"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Ошибка в параметрах запроса",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonBadArgumentErrors"
                }
              }
            }
          },
          "403": {
            "description": "Пользователь не имеет прав на просмотр информации",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonBadAuthorizationErrors"
                }
              }
            }
          },
          "404": {
            "description": "Работодатель не найден",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonNotFoundErrors"
                }
              }
            }
          }
        }
      }
    },
    "/employers/{employer_id}": {
      "x-name": "/employers/{employer_id}",
      "get": {
        "tags": [
          "Работодатель"
        ],
        "summary": "Информация о работодателе",
        "description": "Возвращает данные о работодателе со ссылкой на выдачу вакансий этого работодателя",
        "operationId": "get-employer-info",
        "parameters": [
          {
            "name": "employer_id",
            "in": "path",
            "required": true,
            "description": "Идентификатор работодателя, который можно получить в [списке работодателей](#tag/Rabotodatel/operation/search-employer)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/Locale/schema"
          },
          {
            "$ref": "#/components/parameters/Host/schema"
          },
          {
            "$ref": "#/components/parameters/HHUserAgent/schema"
          }
        ],
        "responses": {
          "200": {
            "description": "Успешный ответ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmployersEmployerInfo"
                },
                "examples": {
                  "Пример ответа": {
                    "$ref": "#/components/examples/EmployersEmployerInfoExample"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Работодатель не найден",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonNotFoundErrors"
                }
              }
            }
          }
        }
      }
    },
    "/employers/blacklisted/{employer_id}": {
      "x-name": "/employers/blacklisted/{employer_id}",
      "put": {
        "tags": [
          "Скрытые работодатели"
        ],
        "summary": "Добавление работодателя в список скрытых",
        "description": "Добавляет указанного работодателя в [список скрытых работодателей](#tag/Skrytye-vakansii/operation/get-blacklisted-vacancies)",
        "operationId": "add-employer-to-blacklisted",
        "parameters": [
          {
            "name": "employer_id",
            "in": "path",
            "required": true,
            "description": "Идентификатор работодателя",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/Locale/schema"
          },
          {
            "$ref": "#/components/parameters/Host/schema"
          },
          {
            "$ref": "#/components/parameters/HHUserAgent/schema"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/SuccessNoContent",
            "description": ""
          },
          "400": {
            "description": "Превышен лимит на количество элементов в списке",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsEmployerBlacklistedErrors"
                }
              }
            }
          },
          "403": {
            "description": "Текущий пользователь не является соискателем или не имеет прав на добавление работодателя в скрытые",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonBadAuthorizationErrors"
                }
              }
            }
          },
          "404": {
            "description": "Работодатель не найден",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsEmployerBlacklistedNotFoundErrors"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Скрытые работодатели"
        ],
        "summary": "Удаление работодателя из списка скрытых",
        "description": "Удаляет указанного работодателя из [списка скрытых работодателей](#tag/Skrytye-vakansii/operation/get-blacklisted-vacancies)",
        "operationId": "delete-employer-from-blacklisted",
        "parameters": [
          {
            "name": "employer_id",
            "in": "path",
            "required": true,
            "description": "Идентификатор работодателя",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/Locale/schema"
          },
          {
            "$ref": "#/components/parameters/Host/schema"
          },
          {
            "$ref": "#/components/parameters/HHUserAgent/schema"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/SuccessNoContent",
            "description": ""
          },
          "403": {
            "description": "Текущий пользователь не является соискателем",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonBadAuthorizationErrors"
                }
              }
            }
          },
          "404": {
            "description": "Работодатель не найден",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsEmployerBlacklistedNotFoundErrors"
                }
              }
            }
          }
        }
      }
    },
    "/employers": {
      "x-name": "/employers",
      "get": {
        "tags": [
          "Работодатель"
        ],
        "summary": "Поиск работодателя",
        "description": "При указании параметров пагинации (`page`, `per_page`) работает ограничение: глубина возвращаемых результатов не может быть больше `5000`. Например, возможен запрос `per_page=10&page=499` (выдача с `4991` по `5000` работодателя), но запрос с `per_page=10&page=500` вернёт ошибку (выдача с `5001` до `5010` работодателя)",
        "operationId": "search-employer",
        "parameters": [
          {
            "name": "text",
            "in": "query",
            "description": "Текст для поиска. Переданное значение ищется в названии и описании работодателя",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "area",
            "in": "query",
            "description": "Идентификатор региона работодателя, множественный параметр. Идентификаторы регионов можно узнать в [справочнике регионов](#tag/Obshie-spravochniki/operation/get-areas)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "type",
            "in": "query",
            "description": "Тип работодателя, множественный параметр. Разрешенные значения перечислены в [справочнике](#tag/Obshie-spravochniki/operation/get-dictionaries) в поле `employer_type`",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "only_with_vacancies",
            "in": "query",
            "description": "Возвращать только работодателей у которых есть в данный момент открытые вакансии (`true`) или же всех (`false`). По умолчанию — `false`",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "sort_by",
            "in": "query",
            "description": "Сортировка по имени (`by_name`) или по количеству открытых вакансий (`by_vacancies_open`). По умолчанию — `by_name`",
            "schema": {
              "type": "string",
              "enum": [
                "by_name",
                "by_vacancies_open"
              ]
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Номер страницы с работодателями (считается от `0`, по умолчанию — `0`)",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Количество элементов на страницу (по умолчанию — 20, максимум — 100 )",
            "schema": {
              "type": "number"
            }
          },
          {
            "$ref": "#/components/parameters/Locale/schema"
          },
          {
            "$ref": "#/components/parameters/Host/schema"
          },
          {
            "$ref": "#/components/parameters/HHUserAgent/schema"
          }
        ],
        "responses": {
          "200": {
            "description": "Успешный ответ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmployersEmployersList"
                },
                "examples": {
                  "Пример ответа": {
                    "$ref": "#/components/examples/EmployersEmployersExample"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Ошибка в параметрах запроса. В теле ответа может содержаться название параметра с ошибкой",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonBadArgumentErrors"
                }
              }
            }
          }
        }
      }
    },
    "/employers/{employer_id}/departments": {
      "x-name": "/employers/{employer_id}/departments",
      "get": {
        "tags": [
          "Информация о работодателе",
          "Информация о работодателе на уровне работодателя"
        ],
        "summary": "Справочник департаментов работодателя",
        "description": "Возвращает список департаментов работодателя.\n\nЗначения в справочнике могут поменяться в любой момент\n",
        "operationId": "get-employer-departments",
        "parameters": [
          {
            "name": "employer_id",
            "in": "path",
            "required": true,
            "description": "Идентификатор работодателя, который можно получить в [списке работодателей](#tag/Rabotodatel/operation/search-employer)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/Locale/schema"
          },
          {
            "$ref": "#/components/parameters/Host/schema"
          },
          {
            "$ref": "#/components/parameters/HHUserAgent/schema"
          }
        ],
        "responses": {
          "200": {
            "description": "Успешный ответ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmployersEmployerDepartmentsResponse"
                },
                "examples": {
                  "Пример ответа": {
                    "$ref": "#/components/examples/EmployersEmployerDepartments"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Пользователь не имеет прав на просмотр информации",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonBadAuthorizationErrors"
                }
              }
            }
          },
          "404": {
            "description": "Работодатель не найден",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonNotFoundErrors"
                }
              }
            }
          }
        }
      }
    },
    "/employers/{employer_id}/vacancy_branded_templates": {
      "x-name": "/employers/{employer_id}/vacancy_branded_templates",
      "get": {
        "tags": [
          "Информация о работодателе",
          "Информация о работодателе на уровне работодателя"
        ],
        "summary": "Список доступных бренд шаблонов вакансий работодателя",
        "description": "Внимание! Значения в справочниках могут поменяться в любой момент. Не нужно завязываться на них.\n\nИспользование брендированных шаблонов вакансии доступно работодателям, оплатившим и активировавшим соответствующую \nуслугу. Подробнее на сайте [hh.ru](https://hh.ru/article/brand)\n",
        "operationId": "get-vacancy-branded-templates-list",
        "parameters": [
          {
            "name": "employer_id",
            "in": "path",
            "required": true,
            "description": "Идентификатор работодателя",
            "schema": {
              "type": "string"
            },
            "example": "12345"
          },
          {
            "$ref": "#/components/parameters/Locale/schema"
          },
          {
            "$ref": "#/components/parameters/Host/schema"
          },
          {
            "$ref": "#/components/parameters/HHUserAgent/schema"
          }
        ],
        "responses": {
          "200": {
            "description": "Успешный ответ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmployersVacancyBrandedTemplatesList"
                }
              }
            }
          },
          "403": {
            "description": "Если текущий пользователь не авторизован или не является работодателем",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonBadAuthorizationErrors"
                }
              }
            }
          },
          "404": {
            "description": "Если получение шаблонов по данной компании недоступно или компания не существует",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonNotFoundErrors"
                }
              }
            }
          }
        }
      }
    },
    "/employers/blacklisted": {
      "x-name": "/employers/blacklisted",
      "get": {
        "tags": [
          "Скрытые работодатели"
        ],
        "summary": "Список скрытых работодателей",
        "description": "Возвращает [подмножество работодателей](#tag/Rabotodatel/operation/search-employer), скрытых пользователем, а также один дополнительный параметр",
        "operationId": "get-blacklisted-employers",
        "parameters": [
          {
            "$ref": "#/components/parameters/Locale/schema"
          },
          {
            "$ref": "#/components/parameters/Host/schema"
          },
          {
            "$ref": "#/components/parameters/HHUserAgent/schema"
          }
        ],
        "responses": {
          "200": {
            "description": "Успешный ответ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmployersEmployersBlacklistedResponse"
                },
                "examples": {
                  "Пример ответа": {
                    "$ref": "#/components/examples/EmployersEmployersBlacklisted"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Текущий пользователь не является соискателем",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonBadAuthorizationErrors"
                }
              }
            }
          }
        }
      }
    },
    "/districts": {
      "x-name": "/districts",
      "get": {
        "tags": [
          "Общие справочники"
        ],
        "summary": "Список районов во всех городах",
        "operationId": "get-all-districts",
        "parameters": [
          {
            "$ref": "#/components/parameters/Locale/schema"
          },
          {
            "$ref": "#/components/parameters/Host/schema"
          },
          {
            "$ref": "#/components/parameters/HHUserAgent/schema"
          }
        ],
        "responses": {
          "200": {
            "description": "Успешный ответ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DictionariesDistrictsResponse"
                },
                "examples": {
                  "Пример ответа": {
                    "$ref": "#/components/examples/DistrictsDistricts"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/salary_statistics/paid/salary_evaluation/{area_id}": {
      "x-name": "/salary_statistics/paid/salary_evaluation/{area_id}",
      "get": {
        "tags": [
          "Банк данных о зарплатах",
          "Банк данных зарплатной статистики"
        ],
        "summary": "Оценка заработной платы без прогноза",
        "description": "Возвращает статистику зарплат в соответствии с указанными параметрами запроса. Пользователь должен иметь доступ к платным отчетам [банка зарплат](https://salary.hh.ru/).\n\nКак это работает:\n\n* Основным источником данных для статистики служит информация о зарплатах, предоставляемая участниками проекта [Банк данных заработных плат](https://salary.hh.ru/promo).\n* Все анкеты участников проходят проверку модераторами. Если заявленная участником зарплата сильно отличается от средней по рынку, она не будет включена в банк данных.\n* Если в банке недостаточно данных для построения статистики по запросу, сервис использует следующие приемы:\n\n    * Объединяет сведения из нескольких отраслей, если недостаточно данных по запрошенной отрасли.\n    * Объединяет сведения из нескольких близких специализаций, если недостаточно данных по запрошенной специализации.\n    * Объединяет сведения из нескольких городов, если недостаточно данных по запрошенному городу.\n    * Использует сведения по запрошенным специализациям из другого региона, если недостаточно данных по запрошенному региону. При этом вычисляется поправочный коэффициент, который отражает разницу в зарплатах между регионами.\n\n    Если эти приемы не позволяют получить достаточную выборку, сервис может использовать информацию о зарплатах из вакансий и резюме. Такая информация не проходит предварительную модерацию и считается менее надежной, поэтому используется только в крайнем случае. Чтобы использовать эту функцию, передайте в запросе параметр `extend_sources=true`\n",
        "operationId": "get-salary-evaluation",
        "parameters": [
          {
            "name": "area_id",
            "in": "path",
            "required": true,
            "description": "Код [региона](#tag/Spravochniki-Banka-dannyh-zarabotnyh-plat/operation/get-salary-salary-areas), по которому будет построена выборка для формирования отчета\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "exclude_area",
            "in": "query",
            "description": "Коды [регионов](#tag/Spravochniki-Banka-dannyh-zarabotnyh-plat/operation/get-salary-salary-areas), которые будут исключены из выборки для формирования отчета. Параметр позволяет получить оценку на региональном рынке за исключением определенных городов или областей\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "employee_level",
            "in": "query",
            "description": "Справочник [уровни компетенций](#tag/Spravochniki-Banka-dannyh-zarabotnyh-plat/operation/get-salary-employee-levels), которые будут включены в выборку для формирования отчета\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "industry",
            "in": "query",
            "description": "Справочник [Коды отраслей](#tag/Spravochniki-Banka-dannyh-zarabotnyh-plat/operation/get-salary-industries), по которым будет построена выборка для формирования отчета\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "speciality",
            "in": "query",
            "description": "Справочник [Коды профобластей и специализаций](#tag/Spravochniki-Banka-dannyh-zarabotnyh-plat/operation/get-salary-professional-areas), которые будут включены в выборку для формирования отчета\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "extend_sources",
            "in": "query",
            "description": "Использовать ли данные из резюме и вакансий, если по указанным параметрам не нашлось данных в банке зарплат. По умолчанию — `false`\n",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "position_name",
            "in": "query",
            "description": "Наименование должности. Если не переданы параметры `speciality` или `employee_level`, сервис самостоятельно определит возможные специализации и уровень специалиста по указанной должности и отрасли, и построит отчет по ним\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/Locale/schema"
          },
          {
            "$ref": "#/components/parameters/Host/schema"
          },
          {
            "$ref": "#/components/parameters/HHUserAgent/schema"
          }
        ],
        "responses": {
          "200": {
            "description": "Успешный ответ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalaryStatisticsEvaluationResponse"
                },
                "examples": {
                  "Пример ответа": {
                    "$ref": "#/components/examples/SalaryStatisticsEvaluation"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Ошибка в параметрах запроса",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonBadAuthorizationBadParameters"
                }
              }
            }
          },
          "403": {
            "description": "Пользователь не авторизован или не имеет доступа к платным отчетам банка зарплат",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonBadAuthorizationErrors"
                }
              }
            }
          },
          "404": {
            "description": "Для указанных параметров нет данных",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonNotFoundErrors"
                }
              }
            }
          }
        }
      }
    },
    "/metro": {
      "x-name": "/metro",
      "get": {
        "tags": [
          "Общие справочники"
        ],
        "summary": "Список станций метро во всех городах",
        "operationId": "get-metro-stations",
        "parameters": [
          {
            "$ref": "#/components/parameters/Locale/schema"
          },
          {
            "$ref": "#/components/parameters/Host/schema"
          },
          {
            "$ref": "#/components/parameters/HHUserAgent/schema"
          }
        ],
        "responses": {
          "200": {
            "description": "Успешный ответ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MetroMetroResponse"
                },
                "examples": {
                  "Пример ответа": {
                    "$ref": "#/components/examples/MetroMetro"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/metro/{city_id}": {
      "x-name": "/metro/{city_id}",
      "get": {
        "tags": [
          "Общие справочники"
        ],
        "summary": "Список станций метро в указанном городе",
        "operationId": "get-metro-stations-in-city",
        "parameters": [
          {
            "name": "city_id",
            "in": "path",
            "required": true,
            "description": "Идентификатор города",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/Locale/schema"
          },
          {
            "$ref": "#/components/parameters/Host/schema"
          },
          {
            "$ref": "#/components/parameters/HHUserAgent/schema"
          }
        ],
        "responses": {
          "200": {
            "description": "Успешный ответ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MetroCityMetroItem"
                },
                "examples": {
                  "Пример ответа": {
                    "$ref": "#/components/examples/MetroCityMetro"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Город с указанным идентификатором не существует",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonNotFoundErrors"
                }
              }
            }
          }
        }
      }
    },
    "/saved_searches/resumes/{saved_search_id}/managers/{manager_id}": {
      "x-name": "/saved_searches/resumes/{saved_search_id}/managers/{manager_id}",
      "put": {
        "tags": [
          "Сохраненные поиски резюме"
        ],
        "summary": "Передача сохраненного поиска резюме другому менеджеру",
        "operationId": "move-saved-resume-search",
        "parameters": [
          {
            "name": "saved_search_id",
            "in": "path",
            "required": true,
            "description": "Идентификатор из [списка сохраненных поисков](#tag/Sohranennye-poiski-rezyume/operation/get-saved-resume-searches)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "manager_id",
            "in": "path",
            "required": true,
            "description": "Идентификатор менеджера, которому надо передать автопоиск ([список менеджеров компании](#tag/Menedzhery-rabotodatelya/operation/get-employer-managers))",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/Locale/schema"
          },
          {
            "$ref": "#/components/parameters/Host/schema"
          },
          {
            "$ref": "#/components/parameters/HHUserAgent/schema"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/SuccessNoContent",
            "description": ""
          },
          "403": {
            "description": "Текущий пользователь не является работодателем",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsSavedSearchForbiddenErrors"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ErrorSavedSearchNotFound",
            "description": ""
          }
        }
      }
    },
    "/vacancies/{vacancy_id}/resumes_by_status": {
      "x-name": "/vacancies/{vacancy_id}/resumes_by_status",
      "get": {
        "tags": [
          "Резюме. Просмотр информации"
        ],
        "summary": "Резюме, сгруппированные по возможности отклика на данную вакансию",
        "description": "Возвращает резюме пользователя, сгруппированные в четыре списка в зависимости от возможности отклика на указанную вакансию",
        "operationId": "get-resumes-by-status",
        "parameters": [
          {
            "name": "vacancy_id",
            "in": "path",
            "required": true,
            "description": "Идентификатор вакансии",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/Locale/schema"
          },
          {
            "$ref": "#/components/parameters/Host/schema"
          },
          {
            "$ref": "#/components/parameters/HHUserAgent/schema"
          }
        ],
        "responses": {
          "200": {
            "description": "Успешный ответ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResumesByStatusResponse"
                },
                "examples": {
                  "Пример ответа": {
                    "$ref": "#/components/examples/ResumesByStatus"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Текущий пользователь не является соискателем",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonBadAuthorizationErrors"
                }
              }
            }
          }
        }
      }
    },
    "/resumes/{resume_id}/status": {
      "x-name": "/resumes/{resume_id}/status",
      "get": {
        "tags": [
          "Резюме. Просмотр информации"
        ],
        "summary": "Статус резюме и готовность к публикации",
        "description": "Возвращает информацию о статусе резюме, готовности резюме к публикации, а также замечания модератора по выбранному резюме\n",
        "operationId": "get-resume-status",
        "parameters": [
          {
            "name": "resume_id",
            "in": "path",
            "required": true,
            "description": "Идентификатор резюме",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/Locale/schema"
          },
          {
            "$ref": "#/components/parameters/Host/schema"
          },
          {
            "$ref": "#/components/parameters/HHUserAgent/schema"
          }
        ],
        "responses": {
          "200": {
            "description": "Успешный ответ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResumeStatusReadiness"
                },
                "examples": {
                  "Пример ответа": {
                    "$ref": "#/components/examples/ResumeStatusReadiness"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Текущий пользователь не является соискателем",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonBadAuthorizationErrors"
                }
              }
            }
          },
          "404": {
            "description": "Резюме не существует или недоступно для текущего пользователя",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonNotFoundErrors"
                }
              }
            }
          }
        }
      }
    },
    "/resumes/{resume_id}/negotiations_history": {
      "x-name": "/resumes/{resume_id}/negotiations_history",
      "get": {
        "tags": [
          "Отклики/приглашения работодателя",
          "Отклики/приглашения работодателя на уровне работодателя"
        ],
        "summary": "История откликов/приглашений по резюме",
        "description": "Возвращает последние действия с указанным резюме, ограниченные 30-ю вакансиями данного работодателя, и 10-ю изменениями состояний откликов/приглашений по каждой из этих вакансий.\n\nМетод требует наличия [платного доступа для работодателя](#tag/Uslugi-rabotodatelya/operation/get-payable-api-method-access)\n",
        "operationId": "get-resume-negotiations-history",
        "parameters": [
          {
            "name": "resume_id",
            "in": "path",
            "required": true,
            "description": "Идентификатор резюме",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/Locale/schema"
          },
          {
            "$ref": "#/components/parameters/Host/schema"
          },
          {
            "$ref": "#/components/parameters/HHUserAgent/schema"
          }
        ],
        "responses": {
          "200": {
            "description": "Успешный ответ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResumesResumeNegotiationsHistoryResponse"
                },
                "examples": {
                  "Пример ответа": {
                    "$ref": "#/components/examples/ResumesResumeNegotiationsHistory"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Текущий пользователь не является работодателем",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonBadAuthorizationErrors"
                }
              }
            }
          },
          "404": {
            "description": "Резюме не существует или недоступно для текущего пользователя",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonNotFoundErrors"
                }
              }
            }
          }
        }
      }
    },
    "/saved_searches/resumes/{id}": {
      "x-name": "/saved_searches/resumes/{id}",
      "get": {
        "tags": [
          "Сохраненные поиски резюме"
        ],
        "summary": "Получение единичного сохраненного поиска резюме",
        "description": "Внимание: счетчик `new_items.count` обновляется раз в час. Из-за этого реальное количество новых найденных резюме \nможет расходиться со значением этого счетчика\n",
        "operationId": "get-saved-resume-search",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Идентификатор сохраненного поиска из [списка](#tag/Sohranennye-poiski-rezyume/operation/get-saved-resume-searches)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/Locale/schema"
          },
          {
            "$ref": "#/components/parameters/Host/schema"
          },
          {
            "$ref": "#/components/parameters/HHUserAgent/schema"
          }
        ],
        "responses": {
          "200": {
            "description": "Успешный ответ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SavedSearchesSavedSearchItem"
                },
                "examples": {
                  "Пример ответа": {
                    "$ref": "#/components/examples/SavedSearchesSavedSearchResumeItem"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Текущий пользователь не является работодателем",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonBadAuthorizationErrors"
                }
              }
            }
          },
          "404": {
            "description": "Сохраненный поиск не найден",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonNotFoundErrors"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Сохраненные поиски резюме"
        ],
        "summary": "Обновление сохраненного поиска резюме",
        "description": "У сохраненного поиска можно изменить имя (`name`) и статус подписки (`subscription`). В одном запросе можно передать только один из параметров",
        "operationId": "update-saved-resume-search",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Идентификатор сохраненного поиска",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "Новое имя сохраненного поиска",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subscription",
            "in": "query",
            "description": "Статус подписки",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "$ref": "#/components/parameters/Locale/schema"
          },
          {
            "$ref": "#/components/parameters/Host/schema"
          },
          {
            "$ref": "#/components/parameters/HHUserAgent/schema"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/SuccessNoContent",
            "description": ""
          },
          "400": {
            "$ref": "#/components/responses/ErrorBadArgument",
            "description": ""
          },
          "403": {
            "$ref": "#/components/responses/ErrorBadAuthorization",
            "description": ""
          },
          "404": {
            "$ref": "#/components/responses/ErrorNotFound",
            "description": ""
          },
          "409": {
            "$ref": "#/components/responses/ErrorBothChangedConflict",
            "description": ""
          }
        }
      },
      "delete": {
        "tags": [
          "Сохраненные поиски резюме"
        ],
        "summary": "Удаление сохраненного поиска резюме",
        "operationId": "delete-saved-resume-search",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Идентификатор сохраненного поиска",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/Locale/schema"
          },
          {
            "$ref": "#/components/parameters/Host/schema"
          },
          {
            "$ref": "#/components/parameters/HHUserAgent/schema"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/SuccessNoContent",
            "description": ""
          },
          "403": {
            "$ref": "#/components/responses/ErrorBadAuthorization",
            "description": ""
          },
          "404": {
            "$ref": "#/components/responses/ErrorNotFound",
            "description": ""
          }
        }
      }
    },
    "/resumes": {
      "x-name": "/resumes",
      "post": {
        "tags": [
          "Резюме. Создание и обновление"
        ],
        "summary": "Создание резюме",
        "description": "Создает резюме с полями, переданными в теле запроса.\n\nЕсли передан параметр `source_resume_id`, новое резюме будет склонировано из указанного. Склонировать можно только собственное резюме\n",
        "operationId": "create-resume",
        "parameters": [
          {
            "name": "source_resume_id",
            "in": "query",
            "description": "Идентификатор исходного резюме для клонирования",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/Locale/schema"
          },
          {
            "$ref": "#/components/parameters/Host/schema"
          },
          {
            "$ref": "#/components/parameters/HHUserAgent/schema"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResumeAddResumeRequest"
              },
              "examples": {
                "Пример запроса": {
                  "$ref": "#/components/examples/ResumesCreateResume"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Успешно создано",
            "headers": {
              "Location": {
                "schema": {
                  "type": "string",
                  "description": "Путь к созданному резюме. Пример: `/resumes/123`, где `123` — `id` созданного резюме"
                }
              }
            },
            "content": {
              "text/html": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Ошибка в параметрах резюме или превышено допустимое количество резюме",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsResumeBadArgTooManyResumesErrors"
                }
              }
            }
          },
          "403": {
            "description": "Ошибка авторизации. Пользователь не является соискателем",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonBadAuthorizationErrors"
                }
              }
            }
          },
          "404": {
            "description": "Исходное резюме для клонирования не существует или не принадлежит текущему пользователю",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonNotFoundErrors"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Поиск резюме",
          "Поиск резюме на уровне работодателя"
        ],
        "summary": "Поиск резюме",
        "description": "Возвращает результаты поиска резюме.\n\nТребуется наличие [платного доступа](#tag/Uslugi-rabotodatelya/operation/get-payable-api-method-access).\n\nНекоторые параметры запроса могут принимать множественные значения: `key=value&key=value`. Если параметр может принимать несколько значений, об этом явно указано в его описании. Неизвестные параметры и параметры с ошибкой в названии игнорируются.\n\nПри указании параметров пагинации (`page`, `per_page`) работает ограничение: глубина возвращаемых результатов не может быть больше 2000. Например, возможен запрос `per_page=10&page=199` (выдача с 1991 по 2000 резюме), но запрос с `per_page=10&page=200` вернёт ошибку (выдача с 2001 до 2010 резюме)\n",
        "operationId": "search-for-resumes",
        "parameters": [
          {
            "name": "text",
            "in": "query",
            "description": "Поисковая фраза. Метод найдет резюме, в которых встречаются все слова заданной фразы.\n\nОсобенности:\n\n* Можно указать несколько значений. Каждое дополнительное значение уточняет поиск.\n* В качестве поисковой фразы можно использовать [язык поисковых запросов](http://hh.ru/article.xml?articleId=1175).\n* Специально для этого поля предусмотрено [автодополнение по подсказкам](#tag/Podskazki/operation/get-resume-search-keywords-suggests).\n* Для тонкой настройки по фразе можно использовать параметры `text.logic`, `text.field`, `text.period`. При использовании дополнительных `text.*` полей, необходимо указывать весь набор (триаду) параметров ([пример использования](#tag/Poisk-rezyume/Primery-poiskovyh-zaprosov))\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "text.logic",
            "in": "query",
            "description": "Описывает, как производится поиск. Возможные значения перечислены в поле `resume_search_logic` в [справочнике полей](#tag/Obshie-spravochniki/operation/get-dictionaries)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "text.field",
            "in": "query",
            "description": "Описывает, где должны встречаться слова из поисковой фразы `text`. Можно указать несколько значений через запятую, например `?text.field=education,keywords`. Возможные значения перечислены в поле `resume_search_fields` в [справочнике полей](#tag/Obshie-spravochniki/operation/get-dictionaries)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "text.period",
            "in": "query",
            "description": "Период опыта работы.\n\nПараметр имеет смысл только при `text.field` равным одному из значений: `experience`, `experience_company`, `experience_position`, `experience_description`, но указывать его необходимо всегда при указании других `text.*`. Если параметр не имеет смысла, то его значение можно оставить пустым\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "age_from",
            "in": "query",
            "description": "Нижняя граница возраста соискателя в годах.\n\nПо умолчанию в выдачу добавляются также резюме с неуказанным возрастом. Для выдачи резюме только с указанным возрастом передайте значение `only_with_age` в параметре `label`\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "age_to",
            "in": "query",
            "description": "Верхняя граница возраста соискателя в годах.\n\nПо умолчанию в выдачу добавляются также резюме с неуказанным возрастом. Для выдачи резюме только с указанным возрастом передайте значение `only_with_age` в параметре `label`\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "area",
            "in": "query",
            "description": "Регион. Возможные значения указаны в [справочнике регионов](https://github.com/hhru/api/blob/master/docs/areas.md). Можно указать несколько значений.\n\nПо умолчанию выбираются резюме, в которых соискатели живут в указанных регионах или готовы в них переехать. Поменять это поведение поиска можно, указав параметр `relocation`\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "relocation",
            "in": "query",
            "description": "Готовность к переезду. Возможные значения указаны в поле `resume_search_relocation` в [справочнике полей](#tag/Obshie-spravochniki/operation/get-dictionaries). Необходимо указывать вместе с параметром `area`\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "period",
            "in": "query",
            "description": "Поиск ведется по резюме, опубликованным за указанный период в днях. Если период не указан, поиск ведется без ограничений по дате публикации\n",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "date_from",
            "in": "query",
            "description": "Дата, от которой нужно начать поиск. Значение указывается в формате [ISO 8601](#date-format) — `YYYY-MM-DD` или с точностью до секунды `YYYY-MM-DDThh:mm:ss±hhmm`. Нельзя передавать вместе с параметром `period`\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "date_to",
            "in": "query",
            "description": "Дата, до которой нужно искать. Значение указывается в формате [ISO 8601](#date-format) — `YYYY-MM-DD` или с точность до секунды `YYYY-MM-DDThh:mm:ss±hhmm`. Можно передавать только в паре с параметром `date_from`. Нельзя передавать вместе с параметром `period`\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "education_level",
            "in": "query",
            "description": "Уровень образования. Возможные значения перечислены в поле `education_level` в [справочнике полей](#tag/Obshie-spravochniki/operation/get-dictionaries). Если параметр не указан, поиск ведется без ограничений на уровень образования\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "employment",
            "in": "query",
            "description": "Тип занятости. Возможные значения перечислены в поле `employment` в [справочнике полей](#tag/Obshie-spravochniki/operation/get-dictionaries). Можно указать несколько значений\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "experience",
            "in": "query",
            "description": "Опыт работы. Возможные значения перечислены в поле `experience` в [справочнике полей](#tag/Obshie-spravochniki/operation/get-dictionaries)\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skill",
            "in": "query",
            "description": "Ключевые навыки. Указывается один или несколько идентификаторов ключевых навыков. Значения можно получить из поля `id` в [подсказке по ключевым навыкам](#tag/Podskazki/operation/get-skill-set-suggests)\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "gender",
            "in": "query",
            "description": "Пол соискателя. Возможные значения перечислены в поле `gender` в [справочнике полей](#tag/Obshie-spravochniki/operation/get-dictionaries).\n\nПо умолчанию вне зависимости от значения параметра будут найдены резюме, в которых пол не указан, исключить из поисковой выдачи такие резюме можно с помощью параметра `label=only_with_gender`\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "label",
            "in": "query",
            "description": "Дополнительный фильтр. Возможные значения перечислены в поле `resume_search_label` в [справочнике полей](#tag/Obshie-spravochniki/operation/get-dictionaries). Можно указать несколько значений\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "language",
            "in": "query",
            "description": "Знание языка. Можно указать несколько значений.\n\nВозможные значения перечислены в [справочнике языков](#tag/Obshie-spravochniki/operation/get-languages)\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "language.level",
            "in": "query",
            "description": "Уровень знания языка. Можно указать несколько значений.\n\nВозможные значения перечислены в поле `language_level` в [справочнике полей](#tag/Obshie-spravochniki/operation/get-dictionaries)\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "metro",
            "in": "query",
            "description": "Линия, либо станция метро. Можно указать несколько значений.\n\nВозможные значения перечислены в [справочнике метро](#tag/Obshie-spravochniki/operation/get-metro-stations)\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "currency",
            "in": "query",
            "description": "Код валюты. Возможные значения перечислены в поле `currency.code` в [справочнике полей](#tag/Obshie-spravochniki/operation/get-dictionaries)\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "salary_from",
            "in": "query",
            "description": "Нижняя граница желаемой заработной платы (ЗП).\n\nПо умолчанию в выдачу добавляются также резюме с неуказанной ЗП. Для выдачи резюме только с указанной ЗП передайте параметр `label=only_with_salary`\n",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "salary_to",
            "in": "query",
            "description": "Верхняя граница желаемой заработной платы (ЗП).\n\nПо умолчанию в выдачу добавляются также резюме с неуказанной ЗП. Для выдачи резюме только с указанной ЗП передайте параметр `label=only_with_salary`\n",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "schedule",
            "in": "query",
            "description": "График работы. Возможные значения перечислены в поле `schedule` в [справочнике полей](#tag/Obshie-spravochniki/operation/get-dictionaries). Можно указать несколько значений\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "order_by",
            "in": "query",
            "description": "Сортировка списка резюме. Возможные значения перечислены в поле `resume_search_order` в [справочнике полей](#tag/Obshie-spravochniki/operation/get-dictionaries)\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "citizenship",
            "in": "query",
            "description": "Страна гражданства соискателя. Возможные значения перечислены в [справочнике стран](https://github.com/hhru/api/blob/master/docs/areas.md#countries). Можно указать несколько значений\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "work_ticket",
            "in": "query",
            "description": "Страна, в которой у соискателя есть разрешение на работу. Возможные значения перечислены в [справочнике стран](https://github.com/hhru/api/blob/master/docs/areas.md#countries). Можно указать несколько значений\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "educational_institution",
            "in": "query",
            "description": "Учебные заведения соискателя. В качестве параметров используются [подсказки по названиям университетов](#tag/Podskazki/operation/get-educational-institutions-suggests). Можно указать несколько значений\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search_in_responses",
            "in": "query",
            "description": "Если `true`, то поиск осуществляется только по резюме, которыми соискатели откликались на вакансии компании текущего пользователя, если `false` — поиск осуществляется по всем резюме. По умолчанию — `false`\n",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "by_text_prefix",
            "in": "query",
            "description": "Если `true`, включается поиск по префиксу. Для каждого параметра `text` будут находиться не только полные совпадения слов, но еще и слова, начинающиеся с `text`. По умолчанию — `false`\n",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "driver_license_types",
            "in": "query",
            "description": "Категории водительских прав соискателя. Возможные значения перечислены в поле `driver_license_types` в [справочнике полей](#tag/Obshie-spravochniki/operation/get-dictionaries)\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "vacancy_id",
            "in": "query",
            "description": "Идентификатор вакансии для поиска похожих резюме. Необходимо передавать идентификатор активной вакансии работодателя или вакансии работодателя в архиве\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Номер страницы (считается от 0, по умолчанию — 0)",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Количество элементов (по умолчанию — 20, максимальное значение — 100)",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "professional_role",
            "in": "query",
            "description": "Профессиональная роль. Элемент справочника [профессиональных ролей](#tag/Obshie-spravochniki/operation/get-professional-roles-dictionary). Можно указать несколько значений\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "folder",
            "in": "query",
            "description": "Один или несколько идентификаторов папок с отобранными резюме. Если данный параметр передан, поиск будет ограничен содержимым указанных папок. Можно передавать идентификаторы нескольких папок, например: `folder=111&folder=222&folder=333`\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "include_all_folders",
            "in": "query",
            "description": "Признак, указывающий, нужно ли вести поиск по всем папкам с отобранными резюме.\n\nЕсли у менеджера есть доступ к избранным папкам, то поиск проходит по умолчанию в избранных папках. Если передать параметр `false`, то поиск не будет ограничен папками. Если в одном запросе будут переданы параметры `folder` и `include_all_folders`, вернется ошибка `400 Bad Request`\n",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "job_search_status",
            "in": "query",
            "description": "Статус поиска работы.\n\nВозможные значения перечислены в поле `job_search_statuses_employer` в [справочнике полей](#tag/Obshie-spravochniki/operation/get-dictionaries). Можно указать несколько значений\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "resume",
            "in": "query",
            "description": "Идентификатор резюме для поиска похожих резюме\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter_exp_industry",
            "in": "query",
            "description": "Обрабатывается совместно с параметром `filter_exp_period`. Идентификатор отрасли, в которой у соискателя должен присутствовать опыт работы.\nВозможные значения перечислены в [справочнике отраслей](#tag/Obshie-spravochniki/operation/get-industries) (поле id). Можно указать несколько значений\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter_exp_period",
            "in": "query",
            "description": "Период, за который у соискателя должен присутствовать опыт работы в отрасли, указанной в параметре `filter_exp_industry`.\n\nВозможные значения: \n\n* `all_time` - за все время\n* `last_year` - за последний год\n* `last_three_years` - за последние 3 года\n* `last_six_years` - за последние 6 лет.\n\nПо умолчанию равен `all_time`\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "with_job_search_status",
            "in": "query",
            "description": "Параметр для просмотра в резюме статуса поиска кандидата\n",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "$ref": "#/components/parameters/Locale/schema"
          },
          {
            "$ref": "#/components/parameters/Host/schema"
          },
          {
            "$ref": "#/components/parameters/HHUserAgent/schema"
          }
        ],
        "responses": {
          "200": {
            "description": "Успешный ответ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResumesSearchForResumesResponse"
                },
                "examples": {
                  "Пример ответа": {
                    "$ref": "#/components/examples/ResumesSearchForResumes"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Ошибки в аргументах или в запросе",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonBadRequestBadArgumentBadRequestAndBadArgumentErrors"
                }
              }
            }
          },
          "403": {
            "description": "Текущий пользователь не является работодателем или не имеет доступа к методу",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonBadAuthorizationCommonAndPaymentMethodError"
                }
              }
            }
          }
        }
      }
    },
    "/resumes/mine": {
      "x-name": "/resumes/mine",
      "get": {
        "tags": [
          "Резюме. Просмотр информации"
        ],
        "summary": "Список резюме авторизованного пользователя",
        "operationId": "get-mine-resumes",
        "parameters": [
          {
            "$ref": "#/components/parameters/Locale/schema"
          },
          {
            "$ref": "#/components/parameters/Host/schema"
          },
          {
            "$ref": "#/components/parameters/HHUserAgent/schema"
          }
        ],
        "responses": {
          "200": {
            "description": "Успешный ответ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResumesMineResponse"
                },
                "examples": {
                  "Пример ответа": {
                    "$ref": "#/components/examples/ResumesMineResumes"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Текущий пользователь не является соискателем",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonBadAuthorizationErrors"
                }
              }
            }
          }
        }
      }
    },
    "/resumes/{resume_id}/publish": {
      "x-name": "/resumes/{resume_id}/publish",
      "post": {
        "tags": [
          "Резюме. Публикация"
        ],
        "summary": "Публикация резюме",
        "description": "При первой публикации резюме оно становится доступно для использования. При повторной публикации происходит обновление даты резюме.\n\nПовторная публикация означает обновление даты резюме. Ключ `next_publish_at` у [резюме](#tag/Rezyume.-Prosmotr-informacii/operation/get-mine-resumes) указывает время, когда можно обновить резюме\n",
        "operationId": "publish-resume",
        "parameters": [
          {
            "name": "resume_id",
            "in": "path",
            "required": true,
            "description": "Идентификатор резюме",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/Locale/schema"
          },
          {
            "$ref": "#/components/parameters/Host/schema"
          },
          {
            "$ref": "#/components/parameters/HHUserAgent/schema"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/SuccessNoContent",
            "description": ""
          },
          "400": {
            "description": "Публикация или продление невозможны",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsBadRequestPublishResumeErrors"
                }
              }
            }
          },
          "403": {
            "description": "Пользователь не является соискателем",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonBadAuthorizationErrors"
                }
              }
            }
          },
          "404": {
            "description": "Резюме не существует или недоступно для текущего пользователя",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonNotFoundErrors"
                }
              }
            }
          },
          "429": {
            "description": "Обновление резюме еще не доступно",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsResumeTooManyRequestsErrors"
                }
              }
            }
          }
        }
      }
    },
    "/resume_conditions": {
      "x-name": "/resume_conditions",
      "get": {
        "tags": [
          "Резюме. Условия заполнения полей"
        ],
        "summary": "Условия заполнения полей нового резюме",
        "description": "Возвращает список требований для полей при заполнении нового резюме",
        "operationId": "get-new-resume-conditions",
        "parameters": [
          {
            "$ref": "#/components/parameters/Locale/schema"
          },
          {
            "$ref": "#/components/parameters/Host/schema"
          },
          {
            "$ref": "#/components/parameters/HHUserAgent/schema"
          }
        ],
        "responses": {
          "200": {
            "description": "Успешный ответ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResumesResumeConditions"
                },
                "examples": {
                  "Пример ответа": {
                    "$ref": "#/components/examples/ResumesResumeConditions"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Текущий пользователь не является соискателем",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonBadAuthorizationErrors"
                }
              }
            }
          }
        }
      }
    },
    "/vacancies/{vacancy_id}/suitable_resumes": {
      "x-name": "/vacancies/{vacancy_id}/suitable_resumes",
      "get": {
        "tags": [
          "Резюме. Просмотр информации"
        ],
        "summary": "Список подходящих для отклика резюме",
        "description": "Возвращает список сокращенных представлений резюме соискателя, которыми он может откликнуться на указанную вакансию.\n\nВ качестве альтернативы данному методу можно использовать метод [resumes_by_status](#tag/Rezyume.-Prosmotr-informacii/operation/get-resumes-by-status)\n",
        "operationId": "get-suitable-resumes",
        "parameters": [
          {
            "name": "vacancy_id",
            "in": "path",
            "required": true,
            "description": "Идентификатор вакансии",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/Locale/schema"
          },
          {
            "$ref": "#/components/parameters/Host/schema"
          },
          {
            "$ref": "#/components/parameters/HHUserAgent/schema"
          }
        ],
        "responses": {
          "200": {
            "description": "Успешный ответ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResumesSuitableResumesResponse"
                },
                "examples": {
                  "Пример ответа": {
                    "$ref": "#/components/examples/ResumesSuitableResumes"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Текущий пользователь не является соискателем",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonBadAuthorizationErrors"
                }
              }
            }
          },
          "404": {
            "description": "Вакансия не найдена",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonNotFoundErrors"
                }
              }
            }
          }
        }
      }
    },
    "/resumes/{resume_id}/conditions": {
      "x-name": "/resumes/{resume_id}/conditions",
      "get": {
        "tags": [
          "Резюме. Условия заполнения полей"
        ],
        "summary": "Условия заполнения полей существующего резюме",
        "description": "Возвращает список требований для полей при заполнении указанного резюме",
        "operationId": "get-resume-conditions",
        "parameters": [
          {
            "name": "resume_id",
            "in": "path",
            "required": true,
            "description": "Идентификатор резюме",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/Locale/schema"
          },
          {
            "$ref": "#/components/parameters/Host/schema"
          },
          {
            "$ref": "#/components/parameters/HHUserAgent/schema"
          }
        ],
        "responses": {
          "200": {
            "description": "Успешный ответ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResumesResumeConditions"
                },
                "examples": {
                  "Пример ответа": {
                    "$ref": "#/components/examples/ResumesResumeConditions"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Текущий пользователь не является автором резюме",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonBadAuthorizationErrors"
                }
              }
            }
          },
          "404": {
            "description": "Резюме не существует",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonNotFoundErrors"
                }
              }
            }
          }
        }
      }
    },
    "/resumes/{resume_id}/views": {
      "x-name": "/resumes/{resume_id}/views",
      "get": {
        "tags": [
          "Резюме. Просмотр информации"
        ],
        "summary": "История просмотра резюме",
        "description": "Возвращает историю просмотров резюме.\n\nЭтот запрос обнуляет счетчик новых просмотров (поле `new_views`), который возвращается в запросах на просмотр [конкретного резюме](#tag/Prosmotr-rezyume/operation/get-resume) и [списка резюме](#tag/Rezyume.-Prosmotr-informacii/operation/get-mine-resumes)\n",
        "operationId": "get-resume-view-history",
        "parameters": [
          {
            "name": "resume_id",
            "in": "path",
            "required": true,
            "description": "Идентификатор резюме",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/Locale/schema"
          },
          {
            "$ref": "#/components/parameters/Host/schema"
          },
          {
            "$ref": "#/components/parameters/HHUserAgent/schema"
          }
        ],
        "responses": {
          "200": {
            "description": "Успешный ответ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResumesResumeViewHistoryResponse"
                },
                "examples": {
                  "Пример ответа": {
                    "$ref": "#/components/examples/ResumesResumeViewHistory"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Текущий пользователь не является соискателем",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonBadAuthorizationErrors"
                }
              }
            }
          },
          "404": {
            "description": "Резюме не существует или недоступно для текущего пользователя",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonNotFoundErrors"
                }
              }
            }
          }
        }
      }
    },
    "/resumes/{resume_id}": {
      "x-name": "/resumes/{resume_id}",
      "get": {
        "tags": [
          "Просмотр резюме",
          "Резюме. Просмотр информации",
          "Информация о резюме",
          "Просмотр резюме на уровне работодателя"
        ],
        "summary": "Просмотр резюме",
        "description": "Возвращает информацию об указанном резюме.\n\nОсобенности работы метода при запросе от работодателя:\n\n* Требуется наличие [платного доступа](#tag/Uslugi-rabotodatelya/operation/get-payable-api-method-access).\n* При просмотре резюме с контактами действуют [специальные правила](https://github.com/hhru/api/blob/master/docs/payable/resume.md#просмотр-резюме-с-контактами).\n* Если просмотр полных данных по резюме недоступен при текущей авторизации, в некоторых полях вернется `null`, а поле `can_view_full_info` будет иметь значение `false`.\n* Если у работодателя есть отклик/приглашение на это резюме, отклик будет считаться просмотренным\n",
        "operationId": "get-resume",
        "parameters": [
          {
            "name": "resume_id",
            "in": "path",
            "required": true,
            "description": "Идентификатор резюме",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "with_negotiations_history",
            "in": "query",
            "description": "В случае, если передан данный параметр, в ответе добавится поле negotiations_history.vacancies. \nЕго формат подробно описан в методе [полной истории откликов/приглашений по резюме](#tag/Otklikipriglasheniya-rabotodatelya/operation/get-resume-negotiations-history) и различается лишь тем, \nчто в данном случае список будет ограничен тремя вакансиями данного работодателя и последним изменением состояния отклика/приглашения по каждой из этих вакансий\n",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "with_creds",
            "in": "query",
            "description": "В случае, если передан данный параметр, в ответе добавится поле creds",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "with_job_search_status",
            "in": "query",
            "description": "Параметр для просмотра в резюме статуса поиска кандидата\n",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "$ref": "#/components/parameters/Locale/schema"
          },
          {
            "$ref": "#/components/parameters/Host/schema"
          },
          {
            "$ref": "#/components/parameters/HHUserAgent/schema"
          }
        ],
        "responses": {
          "200": {
            "description": "Успешный ответ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResumeResumeViewResponse"
                },
                "examples": {
                  "Пример ответа для соискателя": {
                    "$ref": "#/components/examples/ResumeResumeViewApplicant"
                  },
                  "Пример ответа для работодателя": {
                    "$ref": "#/components/examples/ResumeResumeViewEmployer"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Требуется авторизация пользователя",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonBadAuthorizationErrors"
                }
              }
            }
          },
          "404": {
            "description": "Резюме не существует или недоступно для текущего пользователя",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonNotFoundErrors"
                }
              }
            }
          },
          "429": {
            "description": "Для работодателя превышен лимит просмотров резюме в сутки",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsResumeTooManyRequestsErrors"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Резюме. Создание и обновление"
        ],
        "summary": "Удаление резюме",
        "description": "Резюме удаляется без возможности восстановления. Все связанные с ним отклики исчезают",
        "operationId": "delete-resume",
        "parameters": [
          {
            "name": "resume_id",
            "in": "path",
            "required": true,
            "description": "Идентификатор резюме",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/Locale/schema"
          },
          {
            "$ref": "#/components/parameters/Host/schema"
          },
          {
            "$ref": "#/components/parameters/HHUserAgent/schema"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/SuccessNoContent",
            "description": ""
          },
          "403": {
            "description": "Ошибка авторизации. Пользователь не является соискателем",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonBadAuthorizationErrors"
                }
              }
            }
          },
          "404": {
            "description": "Резюме не найдено или недоступно текущему пользователю",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonNotFoundErrors"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Резюме. Создание и обновление"
        ],
        "summary": "Обновление резюме",
        "description": "Обновляет переданные в теле запроса поля указанного резюме.\n\nЛюбой упомянутый в теле запроса массив полностью переопределит существующий. Чтобы добавить к существующему массиву новый элемент, перечислите также в запросе все элементы существующего массива. Так, в приведенном примере запроса к ранее указанному русскому языку добавляется английский.\n\nДополнительные правила заполнения резюме:\n\n* У соискателя не может быть несколько резюме с одинаковым `title`.\n* Специализации должны быть из одной профессиональной области.\n* Город проживания должен быть одним из элементов справочника `/areas`, и у этого элемента не должно быть потомков. Например, нельзя указать город проживания «Россия».\n* Ближайшая станция метро должна находиться в городе проживания.\n* Для специализаций из профессиональной области «Начало карьеры, студенты» (`id=15`) можно не указывать опыт работы и навыки. Для остальных профессиональных областей данные поля должны содержать хотя бы по одной записи\n",
        "operationId": "edit-resume",
        "parameters": [
          {
            "name": "resume_id",
            "in": "path",
            "required": true,
            "description": "Идентификатор резюме",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/Locale/schema"
          },
          {
            "$ref": "#/components/parameters/Host/schema"
          },
          {
            "$ref": "#/components/parameters/HHUserAgent/schema"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResumeEditResumeRequest"
              },
              "examples": {
                "Пример запроса": {
                  "$ref": "#/components/examples/ResumesEditResume"
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/SuccessNoContent",
            "description": ""
          },
          "400": {
            "description": "Ошибка в параметрах резюме",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsResumeBadArgumentResumeErrors"
                }
              }
            }
          },
          "403": {
            "description": "Ошибка авторизации. Пользователь не является соискателем",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonBadAuthorizationErrors"
                }
              }
            }
          },
          "404": {
            "description": "Резюме не существует или не принадлежит текущему пользователю",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonNotFoundErrors"
                }
              }
            }
          }
        }
      }
    },
    "/resumes/creation_availability": {
      "x-name": "/resumes/creation_availability",
      "get": {
        "tags": [
          "Резюме. Создание и обновление"
        ],
        "summary": "Проверка возможности создания резюме",
        "operationId": "get-resume-creation-availability",
        "parameters": [
          {
            "$ref": "#/components/parameters/Locale/schema"
          },
          {
            "$ref": "#/components/parameters/Host/schema"
          },
          {
            "$ref": "#/components/parameters/HHUserAgent/schema"
          }
        ],
        "responses": {
          "200": {
            "description": "Успешный ответ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResumesCreationAvailability"
                },
                "examples": {
                  "Пример ответа": {
                    "$ref": "#/components/examples/ResumesCreationAvailability"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Текущий пользователь не является соискателем",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonBadAuthorizationErrors"
                }
              }
            }
          }
        }
      }
    },
    "/saved_searches/resumes": {
      "x-name": "/saved_searches/resumes",
      "get": {
        "tags": [
          "Сохраненные поиски резюме"
        ],
        "summary": "Список сохраненных поисков резюме",
        "operationId": "get-saved-resume-searches",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Номер страницы (считается от 0, по умолчанию - 0)",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Количество элементов (по умолчанию - 5, максимальное значение - 10)",
            "schema": {
              "type": "number"
            }
          },
          {
            "$ref": "#/components/parameters/Locale/schema"
          },
          {
            "$ref": "#/components/parameters/Host/schema"
          },
          {
            "$ref": "#/components/parameters/HHUserAgent/schema"
          }
        ],
        "responses": {
          "200": {
            "description": "Успешный ответ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SavedSearchesSavedSearchResponse"
                },
                "examples": {
                  "Пример ответа": {
                    "$ref": "#/components/examples/SavedSearchesSavedSearchResumes"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Текущий пользователь не является работодателем",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonBadAuthorizationErrors"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Сохраненные поиски резюме"
        ],
        "summary": "Создание нового сохраненного поиска резюме",
        "description": "Некоторые параметры принимают множественные значения: `key=value&key=value`.\n\nПри указании параметров пагинации (`page`, `per_page`) работает ограничение: глубина возвращаемых результатов не может быть больше 2000. Например, возможен запрос `per_page=10&page=199` (выдача с 1991 по 2000 вакансию), но запрос с `per_page=10&page=200` вернёт ошибку (выдача с 2001 до 2010 вакансию)\n",
        "operationId": "create-saved-resume-search",
        "parameters": [
          {
            "name": "text",
            "in": "query",
            "description": "Поисковая фраза. Метод найдет резюме, в которых встречаются все слова заданной фразы.\n\nОсобенности:\n\n* Можно указать несколько значений. Каждое дополнительное значение уточняет поиск.\n* В качестве поисковой фразы можно использовать [язык поисковых запросов](http://hh.ru/article.xml?articleId=1175).\n* Специально для этого поля предусмотрено [автодополнение по подсказкам](#tag/Podskazki/operation/get-resume-search-keywords-suggests).\n* Для тонкой настройки по фразе можно использовать параметры `text.logic`, `text.field`, `text.period`. При использовании дополнительных `text.*` полей, необходимо указывать весь набор (триаду) параметров\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "text.logic",
            "in": "query",
            "description": "Описывает, как производится поиск. Возможные значения перечислены в поле `resume_search_logic` в [справочнике полей](#tag/Obshie-spravochniki/operation/get-dictionaries)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "text.field",
            "in": "query",
            "description": "Описывает, где должны встречаться слова из поисковой фразы `text`. Можно указать несколько значений через запятую, например `?text.field=education,keywords`. Возможные значения перечислены в поле `resume_search_fields` в [справочнике полей](#tag/Obshie-spravochniki/operation/get-dictionaries)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "text.period",
            "in": "query",
            "description": "Период опыта работы.\n\nПараметр имеет смысл только при `text.field` равным одному из значений: `experience`, `experience_company`, `experience_position`, `experience_description`, но указывать его необходимо всегда при указании других `text.*`. Если параметр не имеет смысла, то его значение можно оставить пустым\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "age_from",
            "in": "query",
            "description": "Нижняя граница возраста соискателя в годах.\n\nПо умолчанию в выдачу добавляются также резюме с неуказанным возрастом. Для выдачи резюме только с указанным возрастом передайте значение `only_with_age` в параметре `label`\n",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "age_to",
            "in": "query",
            "description": "Верхняя граница возраста соискателя в годах.\n\nПо умолчанию в выдачу добавляются также резюме с неуказанным возрастом. Для выдачи резюме только с указанным возрастом передайте значение `only_with_age` в параметре `label`\n",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "area",
            "in": "query",
            "description": "Регион. Возможные значения указаны в [справочнике регионов](#tag/Obshie-spravochniki/operation/get-areas). Можно указать несколько значений.\n\nПо умолчанию выбираются резюме, в которых соискатели живут в указанных регионах или готовы в них переехать. Поменять это поведение поиска можно, указав параметр `relocation`\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "relocation",
            "in": "query",
            "description": "Готовность к переезду. Возможные значения указаны в поле `resume_search_relocation` в [справочнике полей](#tag/Obshie-spravochniki/operation/get-dictionaries). Необходимо указывать вместе с параметром `area`\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "period",
            "in": "query",
            "description": "Поиск ведется по резюме, опубликованным за указанный период в днях. Если период не указан, поиск ведется без ограничений по дате публикации\n",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "date_from",
            "in": "query",
            "description": "Дата, от которой нужно начать поиск. Значение указывается в формате [ISO 8601](#date-format) — `YYYY-MM-DD` или с точностью до секунды `YYYY-MM-DDThh:mm:ss±hhmm`. Нельзя передавать вместе с параметром `period`\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "date_to",
            "in": "query",
            "description": "Дата, до которой нужно искать. Значение указывается в формате [ISO 8601](#date-format) — `YYYY-MM-DD` или с точность до секунды `YYYY-MM-DDThh:mm:ss±hhmm`. Можно передавать только в паре с параметром `date_from`. Нельзя передавать вместе с параметром `period`\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "education_level",
            "in": "query",
            "description": "Уровень образования. Возможные значения перечислены в поле `education_level` в [справочнике полей](#tag/Obshie-spravochniki/operation/get-dictionaries). Если параметр не указан, поиск ведется без ограничений на уровень образования\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "employment",
            "in": "query",
            "description": "Тип занятости. Возможные значения перечислены в поле `employment` в [справочнике полей](#tag/Obshie-spravochniki/operation/get-dictionaries). Можно указать несколько значений\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "experience",
            "in": "query",
            "description": "Опыт работы. Возможные значения перечислены в поле `experience` в [справочнике полей](#tag/Obshie-spravochniki/operation/get-dictionaries)\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skill",
            "in": "query",
            "description": "Ключевые навыки. Указывается один или несколько идентификаторов ключевых навыков. Значения можно получить из поля `id` в [подсказке по ключевым навыкам](#tag/Podskazki/operation/get-skill-set-suggests)\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "gender",
            "in": "query",
            "description": "Пол соискателя. Возможные значения перечислены в поле `gender` в [справочнике полей](#tag/Obshie-spravochniki/operation/get-dictionaries).\n\nПо умолчанию вне зависимости от значения параметра будут найдены резюме, в которых пол не указан, убрать такие резюме можно с помощью параметра `label=only_with_gender`\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "label",
            "in": "query",
            "description": "Дополнительный фильтр. Возможные значения перечислены в поле `resume_search_label` в [справочнике полей](#tag/Obshie-spravochniki/operation/get-dictionaries). Можно указать несколько значений\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "language",
            "in": "query",
            "description": "Знание языка. Можно указать несколько значений.\n\nВозможные значения перечислены в [справочнике языков](#tag/Obshie-spravochniki/operation/get-languages)\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "language.level",
            "in": "query",
            "description": "Уровень знания языка. Можно указать несколько значений.\n\nВозможные значения перечислены в поле `language_level` в [справочнике полей](#tag/Obshie-spravochniki/operation/get-dictionaries)\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "metro",
            "in": "query",
            "description": "Линия, либо станция метро. Возможные значения перечислены в [справочнике метро](#tag/Obshie-spravochniki/operation/get-metro-stations)\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "currency",
            "in": "query",
            "description": "Код валюты. Возможные значения перечислены в поле `currency.code` в [справочнике полей](#tag/Obshie-spravochniki/operation/get-dictionaries)\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "salary_from",
            "in": "query",
            "description": "Нижняя граница желаемой заработной платы (ЗП).\n\nПо умолчанию в выдачу добавляются также резюме с неуказанной ЗП. Для выдачи резюме только с указанной ЗП передайте параметр `label=only_with_salary`\n",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "salary_to",
            "in": "query",
            "description": "Верхняя граница желаемой заработной платы (ЗП).\n\nПо умолчанию в выдачу добавляются также резюме с неуказанной ЗП. Для выдачи резюме только с указанной ЗП передайте параметр `label=only_with_salary`\n",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "schedule",
            "in": "query",
            "description": "График работы. Возможные значения перечислены в поле `schedule` в [справочнике полей](#tag/Obshie-spravochniki/operation/get-dictionaries). Можно указать несколько значений\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "order_by",
            "in": "query",
            "description": "Сортировка списка резюме. Возможные значения перечислены в поле `resume_search_order` в [справочнике полей](#tag/Obshie-spravochniki/operation/get-dictionaries)\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "citizenship",
            "in": "query",
            "description": "Страна гражданства соискателя. Возможные значения перечислены в [справочнике стран](#tag/Obshie-spravochniki/operation/get-countries). Можно указать несколько значений\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "work_ticket",
            "in": "query",
            "description": "Страна, в которой у соискателя есть разрешение на работу. Возможные значения перечислены в [справочнике стран](#tag/Obshie-spravochniki/operation/get-countries). Можно указать несколько значений\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "educational_institution",
            "in": "query",
            "description": "Учебные заведения соискателя. В качестве параметров используются [подсказки по названиям университетов](#tag/Podskazki). Можно указать несколько значений\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search_in_responses",
            "in": "query",
            "description": "Если `true`, то поиск осуществляется только по резюме, которыми соискатели откликались на вакансии компании текущего пользователя, если `false` — поиск осуществляется по всем резюме. По умолчанию — `false`\n",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "by_text_prefix",
            "in": "query",
            "description": "Если `true`, включается поиск по префиксу. Для каждого параметра `text` будут находиться не только полные совпадения слов, но еще и слова, начинающиеся с `text`. По умолчанию — `false`\n",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "driver_license_types",
            "in": "query",
            "description": "Категории водительских прав соискателя. Возможные значения перечислены в поле `driver_license_types` в [справочнике полей](#tag/Obshie-spravochniki/operation/get-dictionaries)\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "vacancy_id",
            "in": "query",
            "description": "Идентификатор вакансии для поиска похожих резюме. Необходимо передавать идентификатор активной вакансии работодателя или вакансии работодателя в архиве\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Номер страницы (считается от 0, по умолчанию — 0)",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Количество элементов (по умолчанию — 10, максимальное значение — 50)",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "professional_role",
            "in": "query",
            "description": "Профессиональная роль. Элемент справочника [профессиональных ролей](#tag/Obshie-spravochniki/operation/get-professional-roles-dictionary). Можно указать несколько значений\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/Locale/schema"
          },
          {
            "$ref": "#/components/parameters/Host/schema"
          },
          {
            "$ref": "#/components/parameters/HHUserAgent/schema"
          }
        ],
        "responses": {
          "201": {
            "description": "Успешно создано",
            "headers": {
              "Location": {
                "schema": {
                  "type": "string",
                  "description": "Путь к созданному автопоиску. Пример: `/saved_searches/resumes/123`, где `123` — `id` созданного автопоиска"
                }
              }
            },
            "content": {
              "text/html": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Ошибки в аргументах",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonBadArgumentErrors"
                }
              }
            }
          },
          "403": {
            "description": "Текущий пользователь не является работодателем",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonBadAuthorizationErrors"
                }
              }
            }
          }
        }
      }
    },
    "/resumes/{resume_id}/access_types": {
      "x-name": "/resumes/{resume_id}/access_types",
      "get": {
        "tags": [
          "Резюме. Списки видимости"
        ],
        "summary": "Получение списка типов видимости резюме",
        "description": "Некоторые типы видимости, например `whitelist` и `blacklist`, подразумевают наличие списка работодателей, для которых резюме должно быть видимо или скрыто. См. [управление списками видимости резюме](#tag/Rezyume.-Spiski-vidimosti)",
        "operationId": "get-resume-access-types",
        "parameters": [
          {
            "name": "resume_id",
            "in": "path",
            "required": true,
            "description": "Идентификатор резюме",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/Locale/schema"
          },
          {
            "$ref": "#/components/parameters/Host/schema"
          },
          {
            "$ref": "#/components/parameters/HHUserAgent/schema"
          }
        ],
        "responses": {
          "200": {
            "description": "Успешный ответ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResumesAccessTypes"
                },
                "examples": {
                  "Пример ответа": {
                    "$ref": "#/components/examples/ResumesAccessTypes"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Текущий пользователь не является соискателем",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonBadAuthorizationErrors"
                }
              }
            }
          },
          "404": {
            "description": "Резюме не существует или недоступно для текущего пользователя",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonNotFoundErrors"
                }
              }
            }
          }
        }
      }
    },
    "/resumes/{resume_id}/{list_type}/search": {
      "x-name": "/resumes/{resume_id}/{list_type}/search",
      "get": {
        "tags": [
          "Резюме. Списки видимости"
        ],
        "summary": "Поиск работодателей для добавления в список видимости",
        "description": "Возвращает результаты поиска работодателей",
        "operationId": "get-resume-visibility-employers-list",
        "parameters": [
          {
            "name": "resume_id",
            "in": "path",
            "required": true,
            "description": "Идентификатор резюме",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "list_type",
            "in": "path",
            "required": true,
            "description": "Тип списка. Допустимые значения — `whitelist` или `blacklist`",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "text",
            "in": "query",
            "required": true,
            "description": "Строка для поиска. Переданное значение ищется в начале названия работодателя и в начале названия департаментов работодателя",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Количество элементов на странице выдачи. Поддерживаются [стандартные параметры пагинации](#section/Obshaya-informaciya/Paginaciya). Значение по умолчанию и максимальное значение per_page составляет 100\n",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Порядковый номер страницы в выдаче. Поддерживаются [стандартные параметры пагинации](#section/Obshaya-informaciya/Paginaciya). По умолчанию нумерация начинается с 0 страницы\n",
            "schema": {
              "type": "integer"
            }
          },
          {
            "$ref": "#/components/parameters/Locale/schema"
          },
          {
            "$ref": "#/components/parameters/Host/schema"
          },
          {
            "$ref": "#/components/parameters/HHUserAgent/schema"
          }
        ],
        "responses": {
          "200": {
            "description": "Успешный ответ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResumesResumeVisibilityListSearchResponse"
                },
                "examples": {
                  "Пример ответа": {
                    "$ref": "#/components/examples/ResumesResumeVisibilityListSearchResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Входные параметры переданы с ошибкой",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonBadArgumentErrors"
                }
              }
            }
          },
          "403": {
            "description": "Текущий пользователь не является соискателем",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonBadAuthorizationErrors"
                }
              }
            }
          },
          "404": {
            "description": "Резюме не существует или недоступно для текущего пользователя, либо передан неизвестный `list_type`",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonNotFoundErrors"
                }
              }
            }
          }
        }
      }
    },
    "/resumes/{resume_id}/{list_type}": {
      "x-name": "/resumes/{resume_id}/{list_type}",
      "get": {
        "tags": [
          "Резюме. Списки видимости"
        ],
        "summary": "Получение списка видимости резюме",
        "description": "Возвращает список работодателей, для которых резюме должно быть видимо или скрыто\n",
        "operationId": "get-resume-visibility-list",
        "parameters": [
          {
            "name": "resume_id",
            "in": "path",
            "required": true,
            "description": "Идентификатор резюме",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "list_type",
            "in": "path",
            "required": true,
            "description": "Тип списка. Допустимые значения — `whitelist` или `blacklist`",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/Locale/schema"
          },
          {
            "$ref": "#/components/parameters/Host/schema"
          },
          {
            "$ref": "#/components/parameters/HHUserAgent/schema"
          }
        ],
        "responses": {
          "200": {
            "description": "Успешный ответ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResumesGetResumeVisibilityListResponse"
                },
                "examples": {
                  "Пример ответа": {
                    "$ref": "#/components/examples/ResumesGetResumeVisibilityList"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Передано невалидное количество элементов на странице (максимум 100)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsResumeVisibilityErrors"
                }
              }
            }
          },
          "403": {
            "description": "Текущий пользователь не является соискателем",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonBadAuthorizationErrors"
                }
              }
            }
          },
          "404": {
            "description": "Резюме не существует или недоступно для текущего пользователя, либо передан неизвестный `list_type`",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonNotFoundErrors"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Резюме. Списки видимости"
        ],
        "summary": "Добавление работодателей в список видимости",
        "description": "Добавляет указанных работодателей в список видимости указанного типа.\n\nЗа один запрос можно добавить не больше 100 компаний.\n\nДобавление в список идемпотентно, то есть добавление работодателей, уже присутствующих в списке, игнорируется и не приводит к дублированию записей.\n\nМожно добавить в список заблокированного работодателя\n",
        "operationId": "add-resume-visibility-list",
        "parameters": [
          {
            "name": "resume_id",
            "in": "path",
            "required": true,
            "description": "Идентификатор резюме",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "list_type",
            "in": "path",
            "required": true,
            "description": "Тип списка. Допустимые значения — `whitelist` или `blacklist`",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/Locale/schema"
          },
          {
            "$ref": "#/components/parameters/Host/schema"
          },
          {
            "$ref": "#/components/parameters/HHUserAgent/schema"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResumesPostResumeVisibilityListBody"
              },
              "examples": {
                "Пример запроса": {
                  "$ref": "#/components/examples/ResumesPostResumeVisibilityListBody"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/SuccessNoContent",
            "description": "",
            "headers": {
              "Location": {
                "schema": {
                  "type": "string",
                  "description": "Список видимости: `/resumes/{resume_id}/{list_type}`"
                }
              }
            }
          },
          "400": {
            "description": "Передан невалидный JSON или JSON неправильного формата",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsResumeVisibilityErrorsBadRequest"
                }
              }
            }
          },
          "403": {
            "description": "Текущий пользователь не является соискателем",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonBadAuthorizationErrors"
                }
              }
            }
          },
          "404": {
            "description": "Резюме не существует или недоступно для текущего пользователя, либо передан неизвестный `list_type`",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonNotFoundErrors"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Резюме. Списки видимости"
        ],
        "summary": "Очистка списка видимости",
        "operationId": "delete-resume-visibility-list",
        "parameters": [
          {
            "name": "resume_id",
            "in": "path",
            "required": true,
            "description": "Идентификатор резюме",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "list_type",
            "in": "path",
            "required": true,
            "description": "Тип списка. Допустимые значения — `whitelist` или `blacklist`",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/Locale/schema"
          },
          {
            "$ref": "#/components/parameters/Host/schema"
          },
          {
            "$ref": "#/components/parameters/HHUserAgent/schema"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/SuccessNoContent",
            "description": ""
          },
          "403": {
            "description": "Текущий пользователь не является соискателем",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonBadAuthorizationErrors"
                }
              }
            }
          },
          "404": {
            "description": "Резюме не существует или недоступно для текущего пользователя, либо передан неизвестный `list_type`",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonNotFoundErrors"
                }
              }
            }
          }
        }
      }
    },
    "/resumes/{resume_id}/{list_type}/employer": {
      "x-name": "/resumes/{resume_id}/{list_type}/employer",
      "delete": {
        "tags": [
          "Резюме. Списки видимости"
        ],
        "summary": "Удаление работодателя из списка видимости",
        "description": "Удаление из списка идемпотентно, то есть удаление отсутствующих в списке или несуществующих работодателей игнорируется и не приводит к ошибкам.\n\nМожно удалить из списка заблокированного работодателя.\n\nЗа один запрос можно удалить не более 100 компаний\n",
        "operationId": "delete-employer-from-resume-visibility-list",
        "parameters": [
          {
            "name": "resume_id",
            "in": "path",
            "required": true,
            "description": "Идентификатор резюме",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "list_type",
            "in": "path",
            "required": true,
            "description": "Тип списка. Допустимые значения — `whitelist` или `blacklist`",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "required": true,
            "description": "Идентификатор работодателя. Множественный параметр",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/Locale/schema"
          },
          {
            "$ref": "#/components/parameters/Host/schema"
          },
          {
            "$ref": "#/components/parameters/HHUserAgent/schema"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/SuccessNoContent",
            "description": ""
          },
          "400": {
            "description": "Дополнительные ошибки с описанием причины",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsResumeVisibilityErrors"
                }
              }
            }
          },
          "403": {
            "description": "Текущий пользователь не является соискателем",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonBadAuthorizationErrors"
                }
              }
            }
          },
          "404": {
            "description": "Резюме не существует или недоступно для текущего пользователя, либо передан неизвестный `list_type`",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonNotFoundErrors"
                }
              }
            }
          }
        }
      }
    },
    "/applicant_comments/{applicant_id}/{comment_id}": {
      "x-name": "/applicant_comments/{applicant_id}/{comment_id}",
      "put": {
        "tags": [
          "Комментарии к соискателю",
          "Комментарии к соискателю на уровне работодателя"
        ],
        "summary": "Обновление комментария",
        "description": "Метод требует наличия [платного доступа для работодателя](#tag/Uslugi-rabotodatelya/operation/get-payable-api-method-access).\n\nАвтор комментария может изменить его текст и тип доступа. Если параметр не передан, то его значение останется прежним\n",
        "operationId": "update-applicant-comment",
        "parameters": [
          {
            "name": "applicant_id",
            "in": "path",
            "required": true,
            "description": "Идентификатор соискателя, который можно узнать из поля `owner` [в резюме](https://github.com/hhru/api/blob/master/docs/employer_resumes.md#owner-field)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "comment_id",
            "in": "path",
            "required": true,
            "description": "Идентификатор комментария, который можно узнать в [списке комментариев](#tag/Kommentarii-k-soiskatelyu/operation/get-applicant-comments-list)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/Locale/schema"
          },
          {
            "$ref": "#/components/parameters/Host/schema"
          },
          {
            "$ref": "#/components/parameters/HHUserAgent/schema"
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "text": {
                    "type": "string",
                    "description": "Текст комментария"
                  },
                  "access_type": {
                    "type": "string",
                    "description": "Тип доступа. Доступные значения перечислены [в справочнике](#tag/Obshie-spravochniki/operation/get-dictionaries) в поле `applicant_comment_access_type`"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Успешный ответ. Комментарий обновлен"
          },
          "400": {
            "description": "Ошибка в параметрах запроса. Дополнительно могут быть указаны названия параметров с ошибками",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonBadArgumentErrors"
                }
              }
            }
          },
          "403": {
            "description": "Изменение комментария недоступно для текущего пользователя",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonBadAuthorizationErrors"
                }
              }
            }
          },
          "404": {
            "description": "Указанный соискатель или комментарий не существует",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonNotFoundErrors"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Комментарии к соискателю",
          "Комментарии к соискателю на уровне работодателя"
        ],
        "summary": "Удаление комментария",
        "description": "Метод требует наличия [платного доступа для работодателя](#tag/Uslugi-rabotodatelya/operation/get-payable-api-method-access).\n\nУдалить комментарий может только его автор\n",
        "operationId": "delete-applicant-comment",
        "parameters": [
          {
            "name": "applicant_id",
            "in": "path",
            "required": true,
            "description": "Идентификатор соискателя, который можно узнать из поля `owner` [в резюме](https://github.com/hhru/api/blob/master/docs/employer_resumes.md#owner-field)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "comment_id",
            "in": "path",
            "required": true,
            "description": "Идентификатор комментария, который будет удален. Его можно узнать в [списке комментариев](#tag/Kommentarii-k-soiskatelyu/operation/get-applicant-comments-list)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/Locale/schema"
          },
          {
            "$ref": "#/components/parameters/Host/schema"
          },
          {
            "$ref": "#/components/parameters/HHUserAgent/schema"
          }
        ],
        "responses": {
          "204": {
            "description": "Успешный ответ. Комментарий удален"
          },
          "403": {
            "description": "Удаление комментария недоступно для текущего пользователя",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonBadAuthorizationErrors"
                }
              }
            }
          },
          "404": {
            "description": "Указанный соискатель не существует",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonNotFoundErrors"
                }
              }
            }
          }
        }
      }
    },
    "/applicant_comments/{applicant_id}": {
      "x-name": "/applicant_comments/{applicant_id}",
      "get": {
        "tags": [
          "Комментарии к соискателю",
          "Комментарии к соискателю на уровне работодателя"
        ],
        "summary": "Получение списка комментариев",
        "description": "Метод требует наличия [платного доступа для работодателя](#tag/Uslugi-rabotodatelya/operation/get-payable-api-method-access).\n\nСписок будет содержать комментарии текущего пользователя, а также комментарии других менеджеров компании, если они открыли доступ к ним при публикации\n",
        "operationId": "get-applicant-comments-list",
        "parameters": [
          {
            "name": "applicant_id",
            "in": "path",
            "required": true,
            "description": "Идентификатор соискателя, который можно узнать из поля `owner` [в резюме](https://github.com/hhru/api/blob/master/docs/employer_resumes.md#owner-field)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Номер страницы",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Результатов на странице",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "order_by",
            "in": "query",
            "description": "Сортировка комментариев. Доступные значения перечислены [в справочнике](#tag/Obshie-spravochniki/operation/get-dictionaries) в поле `applicant_comments_order`",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/Locale/schema"
          },
          {
            "$ref": "#/components/parameters/Host/schema"
          },
          {
            "$ref": "#/components/parameters/HHUserAgent/schema"
          }
        ],
        "responses": {
          "200": {
            "description": "Успешный ответ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicantCommentsApplicantCommentsList"
                },
                "examples": {
                  "Пример ответа": {
                    "$ref": "#/components/examples/ApplicantCommentsApplicantCommentsListExample"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Получение комментариев недоступно для текущего пользователя",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonBadAuthorizationErrors"
                }
              }
            }
          },
          "404": {
            "description": "Указанный соискатель не найден",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonNotFoundErrors"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Комментарии к соискателю",
          "Комментарии к соискателю на уровне работодателя"
        ],
        "summary": "Добавление комментария",
        "description": "Метод требует наличия [платного доступа для работодателя](#tag/Uslugi-rabotodatelya/operation/get-payable-api-method-access)",
        "operationId": "add-applicant-comment",
        "parameters": [
          {
            "name": "applicant_id",
            "in": "path",
            "required": true,
            "description": "Идентификатор соискателя, который можно узнать из поля `owner` [в резюме](https://github.com/hhru/api/blob/master/docs/employer_resumes.md#owner-field)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/Locale/schema"
          },
          {
            "$ref": "#/components/parameters/Host/schema"
          },
          {
            "$ref": "#/components/parameters/HHUserAgent/schema"
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "required": [
                  "text",
                  "access_type"
                ],
                "properties": {
                  "text": {
                    "type": "string",
                    "description": "Текст комментария"
                  },
                  "access_type": {
                    "type": "string",
                    "description": "Тип доступа. Доступные значения перечислены [в справочнике](#tag/Obshie-spravochniki/operation/get-dictionaries) в поле `applicant_comment_access_type`"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Комментарий добавлен",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicantCommentsApplicantCommentItem"
                },
                "examples": {
                  "Пример ответа": {
                    "$ref": "#/components/examples/ApplicantCommentsAddApplicantCommentExample"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Ошибка в параметрах запроса",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonBadArgumentErrors"
                }
              }
            }
          },
          "403": {
            "description": "Получение комментариев недоступно для текущего пользователя",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonBadAuthorizationErrors"
                }
              }
            }
          },
          "404": {
            "description": "Указанный соискатель не найден",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonNotFoundErrors"
                }
              }
            }
          }
        }
      }
    },
    "/employers/{employer_id}/mail_templates/{template_id}": {
      "x-name": "/employers/{employer_id}/mail_templates/{template_id}",
      "put": {
        "tags": [
          "Отклики/приглашения работодателя",
          "Отклики/приглашения работодателя на уровне работодателя"
        ],
        "summary": "Изменение шаблона ответа соискателю",
        "description": "Изменение шаблона ответа для [переписки](https://github.com/hhru/api/blob/master/docs/employer_negotiations.md)\n",
        "operationId": "put-mail-templates-item",
        "parameters": [
          {
            "name": "employer_id",
            "in": "path",
            "required": true,
            "description": "Идентификатор работодателя, который можно узнать [в информации о текущем пользователе](#tag/Informaciya-o-menedzhere/operation/get-current-user-info)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "template_id",
            "in": "path",
            "required": true,
            "description": "Идентификатор шаблона для изменения из [списка доступных шаблонов ответов соискателю](#tag/Otklikipriglasheniya-rabotodatelya/operation/get-mail-templates)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/Locale/schema"
          },
          {
            "$ref": "#/components/parameters/Host/schema"
          },
          {
            "$ref": "#/components/parameters/HHUserAgent/schema"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MailTemplatesMailTemplateInput"
              },
              "examples": {
                "Пример запроса": {
                  "$ref": "#/components/examples/MailTemplatesMailTemplateInput"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/SuccessNoContent",
            "description": ""
          },
          "400": {
            "description": "Текст шаблона слишком длинный или содержит неправильную переменную, reason (too_long, wrong_variable)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonBadJsonDataErrors"
                }
              }
            }
          },
          "403": {
            "description": "Неподходящая авторизация",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonBadAuthorizationErrors"
                }
              }
            }
          },
          "404": {
            "description": "Указанный работодатель или шаблон не существует",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonNotFoundErrors"
                }
              }
            }
          }
        }
      }
    },
    "/employers/{employer_id}/mail_templates": {
      "x-name": "/employers/{employer_id}/mail_templates",
      "get": {
        "tags": [
          "Отклики/приглашения работодателя",
          "Отклики/приглашения работодателя на уровне работодателя"
        ],
        "summary": "Список доступных шаблонов ответов соискателю",
        "description": "Возвращает список возможных значений шаблонов ответов для [переписки](https://github.com/hhru/api/blob/master/docs/employer_negotiations.md)\n",
        "operationId": "get-mail-templates",
        "parameters": [
          {
            "name": "employer_id",
            "in": "path",
            "required": true,
            "description": "Идентификатор работодателя, который можно узнать [в информации о текущем пользователе](#tag/Informaciya-o-menedzhere/operation/get-current-user-info)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/Locale/schema"
          },
          {
            "$ref": "#/components/parameters/Host/schema"
          },
          {
            "$ref": "#/components/parameters/HHUserAgent/schema"
          }
        ],
        "responses": {
          "200": {
            "description": "Успешный ответ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MailTemplatesMailTemplates"
                },
                "examples": {
                  "Пример ответа": {
                    "$ref": "#/components/examples/MailTemplatesMailTemplates"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Неподходящая авторизация",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonBadAuthorizationErrors"
                }
              }
            }
          },
          "404": {
            "description": "Указанный работодатель не существует",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsCommonNotFoundErrors"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ErrorsVacancyBlacklistedNotFoundErrors": {
        "title": "Не найдено",
        "description": "Информация о возникших ошибках",
        "allOf": [
          {
            "$ref": "#/components/schemas/ErrorsCommonErrorRequestId"
          },
          {
            "type": "object",
            "required": [
              "errors"
            ],
            "properties": {
              "errors": {
                "type": "array",
                "description": "Массив с данными ошибок",
                "minItems": 1,
                "items": {
                  "$ref": "#/components/schemas/ErrorsVacancyBlacklistedNotFoundError"
                }
              }
            }
          }
        ]
      },
      "ErrorsVacancyBlacklistedNotFoundError": {
        "title": "Ошибка",
        "type": "object",
        "additionalProperties": false,
        "required": [
          "type",
          "value"
        ],
        "properties": {
          "type": {
            "type": "string",
            "description": "Текстовый идентификатор типа ошибки",
            "example": "vacancies_blacklist",
            "enum": [
              "vacancies_blacklist"
            ]
          },
          "value": {
            "type": "string",
            "description": "Название поля с ошибкой. Возможные значения:\n* `not_found` — вакансия для добавления в список не найдена\n",
            "example": "not_found",
            "enum": [
              "not_found"
            ]
          }
        }
      },
      "ErrorsCommonErrorRequestId": {
        "title": "Поле ошибки с request_id",
        "type": "object",
        "description": "В теле выдается request_id для упрощения решения проблем при обращении в поддержку hh.ru (api@hh.ru)",
        "required": [
          "request_id"
        ],
        "properties": {
          "request_id": {
            "type": "string",
            "description": "Идентификатор запроса",
            "example": "q1ww2e2r4ty"
          }
        }
      },
      "EmployersEmployerInfo": {
        "title": "Работодатель",
        "type": "object",
        "required": [
          "name",
          "id",
          "site_url",
          "vacancies_url",
          "trusted",
          "alternate_url",
          "insider_interviews",
          "area",
          "relations",
          "industries"
        ],
        "properties": {
          "accredited_it_employer": {
            "type": "boolean",
            "description": "Флаг, показывающий, прошел ли работодатель [IT аккредитацию](https://feedback.hh.ru/knowledge-base/article/что-означает-значок-«аккредитована-как-ит-компания»)"
          },
          "alternate_url": {
            "type": "string",
            "description": "Ссылка на описание работодателя на сайте"
          },
          "applicant_services": {
            "$ref": "#/components/schemas/_IncludesEmployerApplicantServices"
          },
          "area": {
            "description": "Информация о регионе работодателя",
            "allOf": [
              {
                "$ref": "#/components/schemas/_IncludesArea"
              },
              {
                "type": "object"
              }
            ]
          },
          "branded_description": {
            "type": "string",
            "description": "Строка с кодом HTML (возможно наличие `<script/>` и `<style/>`), которая является альтернативой стандартному описанию работодателя. HTML адаптирован для мобильных устройств и корректно отображается без поддержки Javascript. \n\nПри этом:\n\n- Контент тянется по ширине на 100% ширины контейнера и умещается без прокрутки в 300px.\n- Контент рассчитан на то, что он будет вставлен в обвязку, в которую входит название, логотип, сайт и ссылка на вакансии работодателя.\n- Изображения, которые могут встретиться в таком описании, адаптированы под retina-дисплеи.\n- Размер шрифта не меньше 12px, размер межстрочного интервала не меньше 16px.\n\nЗначение может быть `null`, если у работодателя отсутствует индивидуальное описание\n",
            "deprecated": true,
            "nullable": true
          },
          "branding": {
            "type": "object",
            "description": "Значение может быть `null`, если у работодателя отсутствует брендирование страницы",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              },
              {
                "$ref": "#/components/schemas/EmployersBrandingEmployerBranding"
              }
            ]
          },
          "description": {
            "type": "string",
            "description": "Описание работодателя в виде строки с кодом HTML (без `<script/>` и `<style/>`)",
            "nullable": true
          },
          "id": {
            "type": "string",
            "description": "Идентификатор работодателя"
          },
          "industries": {
            "type": "array",
            "description": "Список отраслей работодателя. Элементы [справочника индустрий](https://api.hh.ru/openapi/redoc#tag/Obshie-spravochniki/operation/get-industries)",
            "items": {
              "$ref": "#/components/schemas/_IncludesIdName"
            }
          },
          "insider_interviews": {
            "type": "array",
            "description": "Список интервью",
            "items": {
              "$ref": "#/components/schemas/EmployersInsiderInterviews"
            }
          },
          "logo_urls": {
            "type": "object",
            "description": "Ссылки на изображения логотипов работодателя разных размеров. `original` — это необработанный логотип, который может быть большого размера. Если изначально загруженный компанией логотип меньше, чем 240px и/или 90px по меньшей стороне, то в соответствующих ключах будут ссылки на изображения оригинального размера. Объект может быть `null`, если компания не загрузила логотип. Клиент должен предусмотреть возможность отсутствия логотипа по указанной ссылке (ответ с кодом `404 Not Found`). Если информация о работодателе используется для описания вакансии, у которой есть брендированный логотип, все ссылки ведут на него. Логотипы 90 и 240 присутствуют не во всех компаниях",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/_IncludesLogoUrls"
              },
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              }
            ]
          },
          "name": {
            "type": "string",
            "description": "Название работодателя"
          },
          "open_vacancies": {
            "type": "number",
            "description": "Количество открытых вакансий у работодателя",
            "nullable": true
          },
          "relations": {
            "type": "array",
            "description": "Если работодатель добавлен в черный список, то вернется `['blacklisted']`, иначе `[]`",
            "items": {
              "type": "string",
              "nullable": true,
              "enum": [
                "blacklisted",
                null
              ]
            }
          },
          "site_url": {
            "type": "string",
            "description": "Адрес сайта работодателя"
          },
          "trusted": {
            "type": "boolean",
            "description": "Флаг, показывающий, прошел ли работодатель [проверку на сайте](https://feedback.hh.ru/article/details/id/5951)"
          },
          "type": {
            "type": "string",
            "description": "Тип работодателя (прямой работодатель, кадровое агентство и т.п.). Возможные значения описаны в [справочнике](#tag/Obshie-spravochniki/operation/get-dictionaries) в поле `employer_type`. Возвращает `null`, если тип работодателя скрыт",
            "nullable": true
          },
          "vacancies_url": {
            "type": "string",
            "description": "URL для получения поисковой выдачи с вакансиями данного работодателя"
          }
        }
      },
      "_IncludesArea": {
        "title": "Регион",
        "type": "object",
        "required": [
          "id",
          "name",
          "url"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "Идентификатор региона из [справочника](#tag/Obshie-spravochniki/operation/get-areas)"
          },
          "name": {
            "type": "string",
            "description": "Название региона"
          },
          "url": {
            "type": "string",
            "description": "Ссылка на информацию о регионе"
          }
        }
      },
      "_IncludesNullableObject": {
        "title": "Null-объект",
        "type": "string",
        "description": "Объект, значение которого null",
        "nullable": true,
        "enum": [
          null
        ]
      },
      "_IncludesIdName": {
        "title": "Объект с идентификатором и названием",
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/_IncludesId"
          },
          {
            "type": "object",
            "required": [
              "name"
            ],
            "properties": {
              "name": {
                "type": "string",
                "description": "Название"
              }
            }
          }
        ]
      },
      "_IncludesId": {
        "title": "Объект с идентификатором",
        "type": "object",
        "required": [
          "id"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "Идентификатор"
          }
        }
      },
      "EmployersInsiderInterviews": {
        "title": "Интервью",
        "type": "object",
        "required": [
          "url",
          "id",
          "title"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "Идентификатор интервью"
          },
          "title": {
            "type": "string",
            "description": "Заголовок интервью"
          },
          "url": {
            "type": "string",
            "description": "Адрес страницы, содержащей интервью"
          }
        }
      },
      "_IncludesLogoUrls": {
        "title": "Ссылка на логотип",
        "type": "object",
        "required": [
          "original"
        ],
        "properties": {
          "90": {
            "type": "string",
            "description": "URL логотипа с размером менее 90px по меньшей стороне"
          },
          "240": {
            "type": "string",
            "description": "URL логотипа с размером менее 240px по меньшей стороне"
          },
          "original": {
            "type": "string",
            "description": "URL необработанного логотипа"
          }
        }
      },
      "_IncludesEmployerApplicantServices": {
        "title": "Услуги соискателя",
        "type": "object",
        "description": "Информация о подключенных услугах соискателя, относящихся к данному работодателю",
        "properties": {
          "target_employer": {
            "type": "object",
            "description": "Услуга \\\"Хочу тут работать\\\"",
            "properties": {
              "count": {
                "type": "number",
                "description": "Количество резюме текущего соискателя, к которым подключена услуга \\\"Хочу тут работать\\\""
              }
            }
          }
        }
      },
      "EmployersBrandingEmployerBranding": {
        "title": "Параметры брендирования",
        "type": "object",
        "description": "Дополнительные параметры брендирования",
        "allOf": [
          {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "description": "Тип брендирования\n  * constructor - Брендирование типом конструктор       \n  * makeup      - Брендирование типом makeup (хамелеон)\n",
                "enum": [
                  "makeup",
                  "constructor"
                ]
              }
            }
          },
          {
            "oneOf": [
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              },
              {
                "$ref": "#/components/schemas/EmployersBrandingConstructor"
              },
              {
                "$ref": "#/components/schemas/EmployersBrandingMakeup"
              }
            ]
          }
        ]
      },
      "EmployersBrandingMakeup": {
        "title": "Полностью кастомный вид бренд страниц",
        "type": "object",
        "required": [
          "type",
          "template_code",
          "template_version_id",
          "makeup"
        ],
        "properties": {
          "makeup": {
            "type": "object",
            "required": [
              "url"
            ],
            "properties": {
              "url": {
                "type": "string",
                "description": "Ссылка на webview версию бренд страницы"
              }
            }
          },
          "template_code": {
            "type": "string",
            "description": "Уникальный код активного бренд шаблона страницы в формате \"makeup:\\d+\"",
            "example": "makeup:123"
          },
          "template_version_id": {
            "type": "string",
            "description": "Идентификатор активной версии бренд шаблона страницы"
          }
        }
      },
      "EmployersBrandingConstructor": {
        "title": "Бренд страница сделанная с помощью конструктора бренд страниц",
        "type": "object",
        "required": [
          "type",
          "constructor"
        ],
        "properties": {
          "constructor": {
            "type": "object",
            "required": [
              "url",
              "header_picture",
              "widgets"
            ],
            "properties": {
              "header_picture": {
                "type": "object",
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/EmployersBrandingConstructorHeaderPicture"
                  },
                  {
                    "$ref": "#/components/schemas/_IncludesNullableObject"
                  }
                ]
              },
              "url": {
                "type": "string",
                "description": "Ссылка на webview версию бренд страницы"
              },
              "widgets": {
                "type": "array",
                "description": "Список виджетов на странице",
                "items": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/EmployersBrandingConstructorGalleryWidget"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "EmployersBrandingConstructorGalleryWidget": {
        "title": "Виджет галереи",
        "type": "object",
        "description": "Виджет галереи",
        "required": [
          "type",
          "items"
        ],
        "properties": {
          "items": {
            "type": "array",
            "description": "Список изображений в галерее",
            "items": {
              "type": "object",
              "required": [
                "picture_id",
                "resized_path"
              ],
              "properties": {
                "picture_id": {
                  "type": "number",
                  "description": "Идентификатор изображения"
                },
                "resized_path": {
                  "type": "string",
                  "description": "Путь к изображению на cdn хранилище"
                }
              }
            }
          },
          "type": {
            "type": "string",
            "description": "Для галереи это значение равно 'gallery'",
            "enum": [
              "gallery"
            ]
          }
        }
      },
      "EmployersBrandingConstructorHeaderPicture": {
        "title": "Изображение из шапки бренд страницы",
        "type": "object",
        "description": "Изображение из шапки бренд страницы",
        "required": [
          "resized_path"
        ],
        "properties": {
          "resized_path": {
            "type": "string",
            "description": "Путь к изображению на cdn хранилище"
          }
        }
      },
      "ErrorsVacancyAddEditBadAuthForbiddenErrors": {
        "title": "Ошибки",
        "anyOf": [
          {
            "$ref": "#/components/schemas/ErrorsCommonBadAuthorizationErrors"
          },
          {
            "$ref": "#/components/schemas/ErrorsVacancyAddEditForbiddenErrors"
          }
        ]
      },
      "ErrorsCommonBadAuthorizationErrors": {
        "title": "Общие ошибки авторизации",
        "description": "Информация о возникших ошибках",
        "allOf": [
          {
            "$ref": "#/components/schemas/ErrorsCommonErrorRequestId"
          },
          {
            "type": "object",
            "required": [
              "errors"
            ],
            "properties": {
              "description": {
                "type": "string",
                "description": "Описание ошибки",
                "example": "Forbidden"
              },
              "errors": {
                "type": "array",
                "description": "Массив с данными ошибок",
                "minItems": 1,
                "items": {
                  "$ref": "#/components/schemas/ErrorsCommonBadAuthorizationCommonAndEmployerError"
                }
              },
              "oauth_error": {
                "type": "string",
                "description": "Ошибки авторизации:\n  * `token-revoked` — Токен отозван пользователем, приложению необходимо [запросить новую авторизацию](#tag/Avtorizaciya-rabotodatelya/operation/authorize)\n  * `token-expired` — Время жизни `access_token` завершилось, необходимо [получить `refresh_token`](#tag/Avtorizaciya-rabotodatelya/operation/authorize)\n",
                "example": "token-revoked",
                "enum": [
                  "token-revoked",
                  "token-expired"
                ]
              }
            }
          }
        ]
      },
      "ErrorsCommonBadAuthorizationCommonAndEmployerError": {
        "title": "Обычная ошибка и ошибка авторизации работодателя",
        "anyOf": [
          {
            "$ref": "#/components/schemas/ErrorsCommonBadAuthorizationError"
          },
          {
            "$ref": "#/components/schemas/ErrorsCommonBadAuthorizationEmployerError"
          },
          {
            "$ref": "#/components/schemas/ErrorsCommonCaptchaError"
          }
        ]
      },
      "ErrorsCommonCaptchaError": {
        "title": "Необходимо пройти CAPTCHA",
        "type": "object",
        "additionalProperties": false,
        "required": [
          "type",
          "value"
        ],
        "properties": {
          "captcha_url": {
            "type": "string",
            "description": "Адрес веб-страницы, на которой можно пройти капчу. \nПосле прохождения капчи аналогичный запрос в API должен выполниться успешно. \nПриложение должно добавить в captcha_url обязательный параметр backurl,на который произойдет редирект \n после прохождения капчи. \nBackurl должен обязательно содержать схему, например, https:// или схему приложения\n",
            "example": "https://hh.ru/account/captcha?state=..."
          },
          "fallback_url": {
            "type": "string",
            "description": "Адрес веб-страницы, на котором можно капчу. Аналогично параметру captcha_url",
            "example": "https://hh.ru/auth/employer?captcha=true&backurl=..."
          },
          "type": {
            "type": "string",
            "description": "Текстовый идентификатор типа ошибки",
            "example": "captcha_required",
            "enum": [
              "captcha_required",
              "employer_registration_change_email",
              "employer_resume_view"
            ]
          },
          "value": {
            "type": "string",
            "description": "Необходимо пройти капчу - `captcha_required`\n",
            "example": "captcha_required",
            "enum": [
              "captcha_required"
            ]
          }
        }
      },
      "ErrorsCommonBadAuthorizationEmployerError": {
        "title": "Ошибка авторизации работодателя",
        "type": "object",
        "additionalProperties": false,
        "required": [
          "type"
        ],
        "properties": {
          "allowed_accounts": {
            "type": "array",
            "description": "Список доступных для токена аккаунтов менеджера в случае, если используемый рабочий аккаунт заблокирован.\nАктуально только в случае авторизации работодателя\n",
            "minItems": 1,
            "items": {
              "$ref": "#/components/schemas/ManagerAccount"
            }
          },
          "type": {
            "type": "string",
            "description": "Текстовый идентификатор типа ошибки",
            "example": "oauth",
            "enum": [
              "forbidden",
              "oauth",
              "manager_extra_accounts",
              "manager_accounts"
            ]
          },
          "value": {
            "type": "string",
            "description": "Общие ошибки:\n  * `bad_authorization` — Токен авторизации не существует или не валидный\n  * `token_expired` — Время жизни access_token завершилось, необходимо [выполнить обновление access_token](#refresh_token)\n  * `token_revoked` — Токен отозван пользователем, приложению необходимо [запросить новую авторизацию](#section/Tipy-avtorizacij)\n  * `application_not_found` — Ваше приложение было удалено\n  * `used_manager_account_forbidden` — [Рабочий аккаунт заблокирован](https://github.com/hhru/api/blob/master/docs/errors.md#manager-accounts-blocked)\n  * `manager_extra_account_not_found` — В заголовке передан некорректный id аккаунта\n  * `user_auth_expected` — Передана авторизация приложения, метод требует [авторизации пользователя](#get-auth)\n  * `application_auth_expected` — Передана авторизация пользователя, метод требует [авторизации приложения](#get-client-auth)\n",
            "example": "bad_authorization",
            "enum": [
              "bad_authorization",
              "token_expired",
              "token_revoked",
              "application_not_found",
              "manager_extra_account_not_found",
              "used_manager_account_forbidden",
              "user_auth_expected",
              "application_auth_expected"
            ]
          }
        }
      },
      "ManagerAccount": {
        "title": "Рабочий аккаунт менеджера",
        "type": "object",
        "description": "Информация о рабочем аккаунте менеджера",
        "additionalProperties": false,
        "required": [
          "id",
          "employer"
        ],
        "properties": {
          "employer": {
            "$ref": "#/components/schemas/ManagerAccountCompany"
          },
          "id": {
            "type": "string",
            "description": "Идентификатор рабочего аккаунта менеджера",
            "example": "12345678"
          }
        }
      },
      "ManagerAccountCompany": {
        "title": "Компания",
        "type": "object",
        "description": "Информация о компании, к которой прикреплен рабочий аккаунт менеджера",
        "additionalProperties": false,
        "required": [
          "id",
          "name"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "Идентификатор компании",
            "example": "1455"
          },
          "name": {
            "type": "string",
            "description": "Название компании",
            "example": "HeadHunter"
          }
        }
      },
      "ErrorsCommonBadAuthorizationError": {
        "title": "Общая ошибка авторизации",
        "type": "object",
        "additionalProperties": false,
        "required": [
          "type"
        ],
        "properties": {
          "type": {
            "type": "string",
            "description": "Текстовый идентификатор типа ошибки",
            "example": "oauth",
            "enum": [
              "forbidden",
              "oauth"
            ]
          },
          "value": {
            "type": "string",
            "description": "Общие ошибки:\n  * `bad_authorization` — Токен авторизации не существует или не валидный\n  * `token_expired` — Время жизни access_token завершилось, необходимо [выполнить обновление access_token](#section/Avtorizaciya/Obnovlenie-pary-access-i-refresh-tokenov)\n  * `token_revoked` — Токен отозван пользователем, приложению необходимо [запросить новую авторизацию](#section/Tipy-avtorizacij)\n  * `application_not_found` — Ваше приложение было удалено\n  * `user_auth_expected` — Передана авторизация приложения, метод требует [авторизации пользователя](#get-auth)\n  * `application_auth_expected` — Передана авторизация пользователя, метод требует [авторизации приложения](#get-client-auth)\n  * `used_manager_account_forbidden` — [Рабочий аккаунт заблокирован](https://github.com/hhru/api/blob/master/docs/errors.md#manager-accounts-blocked)\n  * `manager_extra_account_not_found` — В заголовке передан некорректный id аккаунта\n  * `user_auth_expected` — Передана авторизация приложения, метод требует [авторизации пользователя](#section/Avtorizaciya/Avtorizaciya-polzovatelya)\n  * `application_auth_expected` — Передана авторизация пользователя, метод требует [авторизации приложения](##section/Avtorizaciya/Avtorizaciya-prilozheniya)\n",
            "example": "bad_authorization",
            "enum": [
              "bad_authorization",
              "token_expired",
              "token_revoked",
              "application_not_found",
              "user_auth_expected",
              "application_auth_expected"
            ]
          }
        }
      },
      "ErrorsVacancyAddEditForbiddenErrors": {
        "title": "Ошибки при публикации и редактировании вакансии",
        "description": "Информация о возникших ошибках",
        "allOf": [
          {
            "$ref": "#/components/schemas/ErrorsCommonErrorRequestId"
          },
          {
            "type": "object",
            "required": [
              "errors"
            ],
            "properties": {
              "description": {
                "type": "string",
                "description": "Описание ошибки",
                "example": "Forbidden"
              },
              "errors": {
                "type": "array",
                "description": "Массив с данными ошибок",
                "minItems": 1,
                "items": {
                  "$ref": "#/components/schemas/ErrorsVacancyAddEditForbiddenError"
                }
              }
            }
          }
        ]
      },
      "ErrorsVacancyAddEditForbiddenError": {
        "title": "Ошибка запрещено при публикации и редактировании вакансии",
        "type": "object",
        "additionalProperties": false,
        "required": [
          "type",
          "value"
        ],
        "properties": {
          "found": {
            "type": "number",
            "description": "Общее количество дубликатов вакансии. Возвращается только для `\"value\": \"duplicate\"`\n",
            "nullable": true,
            "example": "2"
          },
          "items": {
            "type": "array",
            "description": "Ограниченное количество записей с информацией о дубликатах. Не гарантирует выдачу всех дубликатов. Возвращается только для `\"value\": \"duplicate\"`\n",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/_IncludesNumericId"
            }
          },
          "type": {
            "type": "string",
            "description": "Текстовый идентификатор типа ошибки",
            "example": "vacancies",
            "enum": [
              "vacancies"
            ]
          },
          "value": {
            "type": "string",
            "description": "Ошибки при публикации и редактировании вакансии:\n  * `not_enough_purchased_services` — купленных услуг недостаточно для публикации или обновления данного типа вакансии\n  * `quota_exceeded` — квота менеджера на публикацию данного типа вакансии закончилась\n  * `duplicate` — аналогичная вакансия уже опубликована. В ответе передается информация по дубликатам вакансии. Данную ошибку можно форсировано отключить параметром `?ignore_duplicates=true`\n  * `creation_forbidden` — публикация вакансий недоступна текущему менеджеру\n  * `unavailable_for_archived` — редактирование недоступно для архивной вакансии\n  * `conflict_changes` — [конфликтные изменения](https://github.com/hhru/api/blob/master/docs/employer_vacancies.md#%D1%81%D0%BC%D0%B5%D0%BD%D0%B0-%D0%B1%D0%B8%D0%BB%D0%BB%D0%B8%D0%BD%D0%B3-%D1%82%D0%B8%D0%BF%D0%B0-%D0%BC%D0%B5%D0%BD%D0%B5%D0%B4%D0%B6%D0%B5%D1%80%D0%B0-%D0%B2%D0%B0%D0%BA%D0%B0%D0%BD%D1%81%D0%B8%D0%B8) данных вакансии\n",
            "example": "not_enough_purchased_services",
            "enum": [
              "not_enough_purchased_services",
              "quota_exceeded",
              "duplicate",
              "creation_forbidden",
              "unavailable_for_archived",
              "conflict_changes"
            ]
          }
        }
      },
      "_IncludesNumericId": {
        "title": "Числовой идентификатор",
        "type": "object",
        "required": [
          "id"
        ],
        "properties": {
          "id": {
            "type": "number",
            "description": "Идентификатор"
          }
        }
      },
      "EmployerAddressesEmployerAddressesResponse": {
        "title": "Успешный ответ",
        "example": {
          "$ref": "#/components/examples/EmployerAddresses/value"
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/EmployerAddressesEmployerAddressItems"
          },
          {
            "$ref": "#/components/schemas/_IncludesPagination"
          }
        ]
      },
      "_IncludesPagination": {
        "title": "Пагинация",
        "type": "object",
        "required": [
          "found",
          "page",
          "pages",
          "per_page"
        ],
        "properties": {
          "found": {
            "type": "number",
            "description": "Найдено результатов",
            "example": "6"
          },
          "page": {
            "type": "number",
            "description": "Номер страницы",
            "example": "1"
          },
          "pages": {
            "type": "number",
            "description": "Всего страниц",
            "example": "2"
          },
          "per_page": {
            "type": "number",
            "description": "Результатов на странице",
            "example": "5"
          }
        }
      },
      "EmployerAddressesEmployerAddressItems": {
        "title": "JSON c параметрами адреса",
        "required": [
          "items"
        ],
        "properties": {
          "items": {
            "type": "array",
            "description": "Список адресов работодателя",
            "items": {
              "$ref": "#/components/schemas/EmployerAddressesEmployerAddressItem"
            }
          }
        }
      },
      "EmployerAddressesEmployerAddressItem": {
        "title": "Адрес",
        "required": [
          "city",
          "lat",
          "lng"
        ],
        "properties": {
          "building": {
            "type": "string",
            "description": "Номер дома",
            "nullable": true
          },
          "can_edit": {
            "type": "boolean",
            "description": "Имеет ли текущий пользователь право редактировать этот адрес"
          },
          "city": {
            "type": "string",
            "description": "Город",
            "nullable": true
          },
          "deleted": {
            "type": "boolean",
            "description": "Удалён ли адрес"
          },
          "description": {
            "type": "string",
            "description": "Дополнительная информация об адресе",
            "nullable": true
          },
          "id": {
            "type": "string",
            "description": "Идентификатор адреса"
          },
          "lat": {
            "type": "number",
            "description": "Географическая широта",
            "nullable": true
          },
          "lng": {
            "type": "number",
            "description": "Географическая долгота",
            "nullable": true
          },
          "manager": {
            "type": "object",
            "description": "Информация о менеджере создавшем адрес",
            "nullable": true,
            "properties": {
              "full_name": {
                "type": "string",
                "description": "Полное имя менеджера"
              },
              "id": {
                "type": "string",
                "description": "Идентификатор менеджера"
              }
            }
          },
          "metro_stations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/_IncludesMetroStation"
            }
          },
          "raw": {
            "type": "string",
            "description": "Полный адрес",
            "nullable": true
          },
          "street": {
            "type": "string",
            "description": "Улица",
            "nullable": true
          }
        }
      },
      "_IncludesMetroStation": {
        "title": "Станция метро",
        "type": "object",
        "required": [
          "station_id",
          "station_name",
          "line_id",
          "line_name",
          "lat",
          "lng"
        ],
        "properties": {
          "lat": {
            "type": "number",
            "description": "Широта",
            "nullable": true
          },
          "line_id": {
            "type": "string",
            "description": "Идентификатор линии метро"
          },
          "line_name": {
            "type": "string",
            "description": "Названии линии метро"
          },
          "lng": {
            "type": "number",
            "description": "Долгота",
            "nullable": true
          },
          "station_id": {
            "type": "string",
            "description": "Идентификатор станции метро"
          },
          "station_name": {
            "type": "string",
            "description": "Название станции метро"
          }
        }
      },
      "VacancyDraftVacancyDraftFull": {
        "title": "Объект черновика вакансии",
        "allOf": [
          {
            "$ref": "#/components/schemas/VacancyDraftVacancyDraftCommon"
          },
          {
            "type": "object",
            "required": [
              "meta_info",
              "areas",
              "address",
              "contacts",
              "employer",
              "with_zp"
            ],
            "properties": {
              "address": {
                "$ref": "#/components/schemas/VacancyDraftAddressOutput"
              },
              "areas": {
                "type": "array",
                "description": "Коды и названия регионов (фед. округа, субъекты федерации, города)",
                "minItems": 1,
                "items": {
                  "$ref": "#/components/schemas/VacancyAreaOutput"
                }
              },
              "assigned_manager": {
                "$ref": "#/components/schemas/VacancyDraftAssignedManager"
              },
              "branded_template": {
                "$ref": "#/components/schemas/VacancyBrandedTemplate"
              },
              "contacts": {
                "$ref": "#/components/schemas/VacancyDraftContactsWithFullPhone"
              },
              "custom_employer_name": {
                "$ref": "#/components/schemas/VacancyCustomEmployerName"
              },
              "employer": {
                "$ref": "#/components/schemas/VacancyDraftEmployer"
              },
              "meta_info": {
                "$ref": "#/components/schemas/VacancyDraftVacancyDraftBase"
              },
              "with_zp": {
                "$ref": "#/components/schemas/VacancyDraftWithZp"
              }
            }
          }
        ]
      },
      "VacancyDraftContactsWithFullPhone": {
        "title": "Контакты",
        "type": "object",
        "description": "Контактная информация",
        "required": [
          "phones",
          "name",
          "email"
        ],
        "properties": {
          "email": {
            "type": "string",
            "description": "Email",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Имя менеджера",
            "nullable": true
          },
          "phones": {
            "type": "array",
            "description": "Список телефонов для связи",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/VacancyDraftPhoneItemWithFullPhone"
            }
          }
        }
      },
      "VacancyDraftPhoneItemWithFullPhone": {
        "title": "Объект телефона для связи",
        "type": "object",
        "properties": {
          "comment": {
            "type": "string",
            "description": "Комментарий (удобное время для звонка по этому номеру)",
            "nullable": true
          },
          "formatted": {
            "type": "string",
            "description": "Телефонный номер",
            "pattern": "^\\+?\\d{1,3} [(]\\d{1,5}[)] [\\d -]{4,10}$"
          }
        }
      },
      "VacancyDraftAssignedManager": {
        "title": "Менеджер, к которому перейдет вакансия после публикации",
        "type": "object",
        "nullable": true,
        "properties": {
          "full_name": {
            "type": "string",
            "description": "ФИО"
          },
          "id": {
            "type": "string",
            "description": "Идентификатор рабочего аккаунта менеджера, которому перейдет вакансия после публикации"
          }
        }
      },
      "VacancyDraftWithZp": {
        "title": "Разместить на Зарплата.ру",
        "type": "boolean",
        "description": "Вашу вакансию увидят больше людей. Мы разместим ее дополнительно на сервисе Зарплата.ру"
      },
      "VacancyDraftVacancyDraftBase": {
        "title": "Черновик",
        "type": "object",
        "required": [
          "completed_fields_percentage",
          "draft_id",
          "publication_ready",
          "scheduled_at"
        ],
        "properties": {
          "auto_publication": {
            "type": "object",
            "description": "Состояние автопубликации. Объект при активной автопубликации, иначе null",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/VacancyDraftAutoPublicationState"
              },
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              }
            ]
          },
          "completed_fields_percentage": {
            "type": "number",
            "description": "Процент заполнения черновика"
          },
          "draft_id": {
            "type": "string",
            "description": "Идентификатор черновика",
            "minLength": 1
          },
          "insufficient_publications": {
            "type": "array",
            "description": "Массив объектов с информацией о том, каких публикаций не хватает на счету для публикации вакансии из данного черновика",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/VacancyDraftPublications"
            }
          },
          "insufficient_quotas": {
            "type": "array",
            "description": "Массив объектов с информацией о том, какие квоты превышены",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/VacancyDraftPublications"
            }
          },
          "last_change_time": {
            "type": "string",
            "description": "Время изменения черновика (в формате [ISO 8601](https://ru.wikipedia.org/wiki/ISO_8601) с точностью до секунды `YYYY-MM-DDThh:mm:ss±hhmm`)",
            "nullable": true
          },
          "publication_ready": {
            "type": "boolean",
            "description": "Готовность черновика к публикации"
          },
          "required_publications": {
            "type": "array",
            "description": "Массив объектов с информацией о необходимых публикациях на счету",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/VacancyDraftPublications"
            }
          },
          "scheduled_at": {
            "type": "string",
            "description": "Время запланированной публикации вакансии (в формате [ISO 8601](http://en.wikipedia.org/wiki/ISO_8601) с точностью до секунды: `YYYY-MM-DDThh:mm:ss±hhmm`",
            "pattern": "^\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d(?:\\.\\d+)?((\\+|-)[0-1][0-9]{3})?$",
            "nullable": true
          }
        }
      },
      "VacancyDraftPublications": {
        "title": "Публикация",
        "required": [
          "publication_type",
          "billing_type",
          "vacancy_type",
          "count"
        ],
        "properties": {
          "billing_type": {
            "description": "Биллинговый тип [из справочника vacancy_billing_type](#tag/Obshie-spravochniki/operation/get-dictionaries)",
            "$ref": "#/components/schemas/VacancyBillingTypeOutput"
          },
          "count": {
            "type": "number",
            "description": "Количество публикаций"
          },
          "publication_type": {
            "type": "string",
            "description": "Тип публикации (справочник [vacancy_billing_type](#tag/Obshie-spravochniki/operation/get-dictionaries))",
            "deprecated": true
          },
          "vacancy_type": {
            "type": "string",
            "description": "Тип вакансии (справочник [vacancy_type](#tag/Obshie-spravochniki/operation/get-dictionaries))"
          }
        }
      },
      "VacancyBillingTypeOutput": {
        "title": "Биллинговый тип вакансии",
        "type": "object",
        "description": "Биллинговый тип [из справочника vacancy_billing_type](#tag/Obshie-spravochniki/operation/get-dictionaries)",
        "nullable": true,
        "allOf": [
          {
            "$ref": "#/components/schemas/VacancyBillingType"
          },
          {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "Название биллингового типа вакансии"
              }
            }
          }
        ]
      },
      "VacancyBillingType": {
        "title": "Биллинговый тип",
        "type": "object",
        "required": [
          "id"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "Биллинговый тип [из справочника vacancy_billing_type](#tag/Obshie-spravochniki/operation/get-dictionaries)"
          }
        }
      },
      "VacancyDraftAutoPublicationState": {
        "title": "Состояние публикации",
        "type": "object",
        "required": [
          "bill_uid",
          "cart_id"
        ],
        "properties": {
          "bill_uid": {
            "type": "string",
            "description": "Номер счета"
          },
          "cart_id": {
            "type": "string",
            "description": "Идентификатор заказа"
          }
        }
      },
      "VacancyAreaOutput": {
        "title": "Регион",
        "type": "object",
        "required": [
          "id",
          "name"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "Идентификатор региона из [справочника](#tag/Obshie-spravochniki/operation/get-areas)"
          },
          "name": {
            "type": "string",
            "description": "Название региона"
          }
        }
      },
      "VacancyBrandedTemplate": {
        "title": "Брендированный шаблон",
        "type": "object",
        "description": "Брендированный шаблон вакансий работодателя из [списка доступных](#tag/Informaciya-o-rabotodatele/operation/get-vacancy-branded-templates-list), либо `null`, если не используется у компании\n",
        "nullable": true,
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "description": "Идентификатор брендированного шаблона вакансий",
            "minLength": 1,
            "nullable": true,
            "example": "default"
          },
          "name": {
            "type": "string",
            "description": "Название брендированного шаблона вакансий",
            "nullable": true,
            "example": "Стандартный шаблон"
          }
        }
      },
      "VacancyDraftAddressOutput": {
        "title": "Адрес",
        "allOf": [
          {
            "$ref": "#/components/schemas/VacancyAddressOutput"
          },
          {
            "$ref": "#/components/schemas/VacancyAddress"
          }
        ]
      },
      "VacancyAddressOutput": {
        "title": "Адрес",
        "type": "object",
        "description": "Адрес",
        "nullable": true,
        "allOf": [
          {
            "$ref": "#/components/schemas/GeocoderAddress"
          },
          {
            "$ref": "#/components/schemas/VacancyDescriptionAddress"
          },
          {
            "type": "object",
            "properties": {
              "metro_stations": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/_IncludesMetroStation"
                }
              }
            }
          }
        ]
      },
      "VacancyDescriptionAddress": {
        "title": "Описание адреса",
        "type": "object",
        "nullable": true,
        "properties": {
          "description": {
            "type": "string",
            "description": "Описание",
            "nullable": true
          }
        }
      },
      "GeocoderAddress": {
        "title": "Адрес для геокодера",
        "type": "object",
        "description": "Адрес",
        "nullable": true,
        "properties": {
          "building": {
            "type": "string",
            "description": "Дом",
            "nullable": true
          },
          "city": {
            "type": "string",
            "description": "Город",
            "nullable": true
          },
          "lat": {
            "type": "number",
            "description": "Широта",
            "nullable": true
          },
          "lng": {
            "type": "number",
            "description": "Долгота",
            "nullable": true
          },
          "street": {
            "type": "string",
            "description": "Улица",
            "nullable": true
          }
        }
      },
      "VacancyAddress": {
        "title": "Адрес",
        "type": "object",
        "description": "Адрес",
        "nullable": true,
        "properties": {
          "id": {
            "type": "string",
            "description": "Адрес из [списка доступных адресов работодателя](#tag/Adresa-rabotodatelya/operation/get-employer-addresses)",
            "nullable": true
          },
          "show_metro_only": {
            "type": "boolean",
            "description": "Показывать только метро для указанного адреса",
            "nullable": true
          }
        }
      },
      "VacancyDraftVacancyDraftCommon": {
        "title": "Поля черновика",
        "type": "object",
        "required": [
          "name",
          "description",
          "key_skills",
          "schedule",
          "accept_handicapped",
          "accept_kids",
          "experience",
          "response_letter_required",
          "type",
          "billing_type",
          "allow_messages",
          "driver_license_types",
          "accept_incomplete_resumes",
          "professional_roles",
          "manager",
          "languages",
          "response_notifications",
          "has_test"
        ],
        "properties": {
          "accept_handicapped": {
            "$ref": "#/components/schemas/VacancyAcceptHandicapped"
          },
          "accept_incomplete_resumes": {
            "$ref": "#/components/schemas/VacancyAcceptIncompleteResumes"
          },
          "accept_kids": {
            "$ref": "#/components/schemas/VacancyAcceptKids"
          },
          "accept_temporary": {
            "$ref": "#/components/schemas/VacancyAcceptTemporary"
          },
          "allow_messages": {
            "$ref": "#/components/schemas/VacancyAllowMessages"
          },
          "billing_type": {
            "$ref": "#/components/schemas/VacancyBillingTypeOutput"
          },
          "code": {
            "$ref": "#/components/schemas/VacancyCode"
          },
          "department": {
            "$ref": "#/components/schemas/VacancyDepartmentOutput"
          },
          "description": {
            "$ref": "#/components/schemas/VacancyDescription"
          },
          "driver_license_types": {
            "$ref": "#/components/schemas/VacancyDriverLicenseTypes"
          },
          "employment": {
            "$ref": "#/components/schemas/VacancyEmploymentOutput"
          },
          "experience": {
            "$ref": "#/components/schemas/VacancyExperienceOutput"
          },
          "has_test": {
            "type": "boolean",
            "description": "Информация о наличии прикрепленного тестового задании к вакансии"
          },
          "key_skills": {
            "$ref": "#/components/schemas/VacancyKeySkills"
          },
          "languages": {
            "$ref": "#/components/schemas/VacancyLanguagesOutput"
          },
          "manager": {
            "$ref": "#/components/schemas/VacancyManager"
          },
          "name": {
            "$ref": "#/components/schemas/VacancyName"
          },
          "professional_roles": {
            "$ref": "#/components/schemas/VacancyProfessionalRolesOutput"
          },
          "response_letter_required": {
            "$ref": "#/components/schemas/VacancyResponseLetterRequired"
          },
          "response_notifications": {
            "$ref": "#/components/schemas/VacancyResponseNotifications"
          },
          "response_url": {
            "$ref": "#/components/schemas/VacancyResponseUrl"
          },
          "salary": {
            "$ref": "#/components/schemas/VacancySalary"
          },
          "schedule": {
            "$ref": "#/components/schemas/VacancyScheduleOutput"
          },
          "test": {
            "$ref": "#/components/schemas/VacancyDraftTest"
          },
          "type": {
            "$ref": "#/components/schemas/VacancyTypeOutput"
          },
          "working_days": {
            "$ref": "#/components/schemas/VacancyWorkingDaysOutput"
          },
          "working_time_intervals": {
            "$ref": "#/components/schemas/VacancyWorkingTimeIntervalsOutput"
          },
          "working_time_modes": {
            "$ref": "#/components/schemas/VacancyWorkingTimeModesOutput"
          }
        }
      },
      "VacancyEmploymentOutput": {
        "title": "Тип занятости",
        "type": "object",
        "nullable": true,
        "allOf": [
          {
            "$ref": "#/components/schemas/VacancyEmployment"
          },
          {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "Название типа занятости"
              }
            }
          }
        ]
      },
      "VacancyEmployment": {
        "title": "Тип занятости",
        "type": "object",
        "nullable": true,
        "properties": {
          "id": {
            "type": "string",
            "description": "Тип занятости из [справочника employment](#tag/Obshie-spravochniki/operation/get-dictionaries)",
            "nullable": true
          }
        }
      },
      "VacancyAcceptHandicapped": {
        "title": "Соискатель с инвалидностью",
        "type": "boolean",
        "description": "Указание, что вакансия доступна для соискателей с инвалидностью"
      },
      "VacancyAcceptKids": {
        "title": "Соискатель старше 14 лет",
        "type": "boolean",
        "description": "Указание, что вакансия доступна для соискателей старше 14 лет [подробнее](https://github.com/hhru/api/blob/master/docs/employer_vacancies_accept_kids.md#accept-kids)"
      },
      "VacancyDepartmentOutput": {
        "title": "Департамент",
        "type": "object",
        "nullable": true,
        "allOf": [
          {
            "$ref": "#/components/schemas/VacancyDepartment"
          },
          {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "Название департамента работодателя"
              }
            }
          }
        ]
      },
      "VacancyDepartment": {
        "title": "Департамент",
        "type": "object",
        "nullable": true,
        "properties": {
          "id": {
            "type": "string",
            "description": "Департамент [из справочника](https://api.hh.ru/openapi/redoc#tag/Informaciya-o-rabotodatele/operation/get-employer-departments), от имени которого размещается вакансия (если данная возможность доступна для компании)"
          }
        }
      },
      "VacancyWorkingDaysOutput": {
        "title": "Список рабочих дней",
        "type": "array",
        "description": "Список рабочих дней",
        "nullable": true,
        "items": {
          "$ref": "#/components/schemas/VacancyWorkingDayItemOutput"
        }
      },
      "VacancyWorkingDayItemOutput": {
        "title": "Список рабочих дней",
        "type": "object",
        "nullable": true,
        "allOf": [
          {
            "$ref": "#/components/schemas/VacancyWorkingDayItem"
          },
          {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "Название рабочего дня"
              }
            }
          }
        ]
      },
      "VacancyWorkingDayItem": {
        "title": "Рабочий день",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Рабочие дни из [справочника working_days](#tag/Obshie-spravochniki/operation/get-dictionaries)"
          }
        }
      },
      "VacancyName": {
        "title": "Название",
        "type": "string",
        "description": "Название"
      },
      "VacancyExperienceOutput": {
        "title": "Опыт работы",
        "type": "object",
        "nullable": true,
        "allOf": [
          {
            "$ref": "#/components/schemas/VacancyExperience"
          },
          {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "Название опыта работы"
              }
            }
          }
        ]
      },
      "VacancyExperience": {
        "title": "Опыт работы",
        "type": "object",
        "nullable": true,
        "properties": {
          "id": {
            "type": "string",
            "description": "Требуемый опыт работы из [справочника experience](#tag/Obshie-spravochniki/operation/get-dictionaries)"
          }
        }
      },
      "VacancyWorkingTimeModesOutput": {
        "title": "Режимы работы",
        "type": "array",
        "description": "Список режимов времени работы",
        "nullable": true,
        "items": {
          "$ref": "#/components/schemas/VacancyWorkingTimeModeItemOutput"
        }
      },
      "VacancyWorkingTimeModeItemOutput": {
        "title": "Название интервала работы",
        "type": "object",
        "nullable": true,
        "allOf": [
          {
            "$ref": "#/components/schemas/VacancyWorkingTimeModeItem"
          },
          {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "Название интервала работы"
              }
            }
          }
        ]
      },
      "VacancyWorkingTimeModeItem": {
        "title": "Режимы времени работы",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Режимы времени работы из [справочника working_time_modes](#tag/Obshie-spravochniki/operation/get-dictionaries)"
          }
        }
      },
      "VacancyWorkingTimeIntervalsOutput": {
        "title": "Интервалы работы",
        "type": "array",
        "description": "Список с временными интервалами работы",
        "nullable": true,
        "items": {
          "$ref": "#/components/schemas/VacancyWorkingTimeIntervalItemOutput"
        }
      },
      "VacancyWorkingTimeIntervalItemOutput": {
        "title": "Название интервала работы",
        "type": "object",
        "nullable": true,
        "allOf": [
          {
            "$ref": "#/components/schemas/VacancyWorkingTimeIntervalItem"
          },
          {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "Название интервала работы"
              }
            }
          }
        ]
      },
      "VacancyWorkingTimeIntervalItem": {
        "title": "Временной интервал работы",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Временной интервал работы из [справочника working_time_intervals](#tag/Obshie-spravochniki/operation/get-dictionaries)"
          }
        }
      },
      "VacancyAcceptTemporary": {
        "title": "Временное трудоустройство",
        "type": "boolean",
        "description": "Указание, что вакансия доступна с временным трудоустройством",
        "nullable": true
      },
      "VacancyResponseLetterRequired": {
        "title": "Сопроводительное письмо",
        "type": "boolean",
        "description": "Обязательно ли заполнять сообщение при отклике на вакансию"
      },
      "VacancyDescription": {
        "title": "Описание",
        "type": "string",
        "description": "Описание в html, не менее 200 символов"
      },
      "VacancySalary": {
        "title": "Зарплата",
        "type": "object",
        "description": "Зарплата",
        "nullable": true,
        "properties": {
          "currency": {
            "type": "string",
            "description": "Код валюты из [справочника currency](#tag/Obshie-spravochniki/operation/get-dictionaries)",
            "nullable": true
          },
          "from": {
            "type": "integer",
            "description": "Нижняя граница зарплаты",
            "nullable": true
          },
          "gross": {
            "type": "boolean",
            "description": "Признак что границы зарплаты указаны до вычета налогов",
            "nullable": true
          },
          "to": {
            "type": "integer",
            "description": "Верхняя граница зарплаты",
            "nullable": true
          }
        }
      },
      "VacancyAllowMessages": {
        "title": "Разрешение сообщений",
        "type": "boolean",
        "description": "Возможность [переписки с кандидатами](https://inboxemp.hh.ru/) по данной вакансии"
      },
      "VacancyTypeOutput": {
        "title": "Тип вакансии",
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/VacancyType"
          },
          {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "Название типа вакансии"
              }
            }
          }
        ]
      },
      "VacancyType": {
        "title": "Тип вакансии",
        "type": "object",
        "description": "Тип вакансии",
        "required": [
          "id"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "Тип из [справочника vacancy_type](#tag/Obshie-spravochniki/operation/get-dictionaries)"
          }
        }
      },
      "VacancyResponseUrl": {
        "title": "URL",
        "type": "string",
        "description": "URL отклика для прямых вакансий (`type.id=direct`)",
        "nullable": true
      },
      "VacancyDriverLicenseTypes": {
        "title": "Категория водительских прав",
        "type": "array",
        "description": "Список требуемых категорий водительских прав",
        "items": {
          "$ref": "#/components/schemas/VacancyDriverLicenceTypeItem"
        }
      },
      "VacancyDriverLicenceTypeItem": {
        "title": "Категория водительских прав",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Категория водительских прав. элемент справочника [driver_license_types](#tag/Obshie-spravochniki/operation/get-dictionaries)"
          }
        }
      },
      "VacancyKeySkills": {
        "title": "Ключевые навыки",
        "type": "array",
        "description": "Список ключевых навыков, не более 30",
        "items": {
          "$ref": "#/components/schemas/VacancyKeySkillItem"
        }
      },
      "VacancyKeySkillItem": {
        "title": "Объект ключевых навыков",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Название ключевого навыка (максимальная длина - 100 символов)"
          }
        }
      },
      "VacancyLanguagesOutput": {
        "title": "Языки вакансии",
        "type": "array",
        "description": "Список языков вакансии. Значения из справочника [/languages](#tag/Obshie-spravochniki/operation/get-dictionaries)",
        "items": {
          "$ref": "#/components/schemas/VacancyLanguageOutput"
        }
      },
      "VacancyLanguageOutput": {
        "title": "Язык",
        "allOf": [
          {
            "$ref": "#/components/schemas/VacancyLanguage"
          },
          {
            "type": "object",
            "required": [
              "name"
            ],
            "properties": {
              "level": {
                "type": "object",
                "required": [
                  "id",
                  "name"
                ],
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "Идентификатор уровня владения языком"
                  },
                  "name": {
                    "type": "string",
                    "description": "Название уровня владения языком"
                  }
                }
              },
              "name": {
                "type": "string",
                "description": "Название языка"
              }
            }
          }
        ]
      },
      "VacancyLanguage": {
        "title": "Объект языка",
        "type": "object",
        "nullable": true,
        "required": [
          "id",
          "level"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "Идентификатор языка. Значения из справочника [/languages](#tag/Obshie-spravochniki/operation/get-dictionaries)"
          },
          "level": {
            "type": "object",
            "required": [
              "id"
            ],
            "properties": {
              "id": {
                "type": "string",
                "description": "Идентификатор уровня владения языком. Значения из справочника [/dictionaries поле `language_level`](#tag/Obshie-spravochniki/operation/get-dictionaries)"
              }
            }
          }
        }
      },
      "VacancyCode": {
        "title": "Код вакансии",
        "type": "string",
        "description": "Внутренний код вакансии",
        "nullable": true
      },
      "VacancyDraftTest": {
        "title": "Тест",
        "type": "object",
        "description": "Объект - [тест](#tag/Informaciya-o-rabotodatele/operation/get-tests-dictionary) для вакансии",
        "nullable": true,
        "properties": {
          "id": {
            "type": "string",
            "description": "Тест, который будет добавлен в вакансию",
            "pattern": "^\\d+$",
            "nullable": true
          },
          "required": {
            "type": "boolean",
            "description": "Флаг обязательности прохождения теста при отклике на вакансию",
            "nullable": true
          }
        }
      },
      "VacancyManager": {
        "title": "Менеджер",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Контактное лицо (менеджер) по размещаемой вакансии, по умолчанию текущий пользователь. Значение из [списка менеджеров компании](#tag/Menedzhery-rabotodatelya/operation/get-employer-managers)",
            "nullable": true
          }
        }
      },
      "VacancyAcceptIncompleteResumes": {
        "title": "Неполное резюме",
        "type": "boolean",
        "description": "Разрешен ли отклик на вакансию неполным резюме"
      },
      "VacancyResponseNotifications": {
        "title": "Новые отклики",
        "type": "boolean",
        "description": "Уведомлять ли менеджера о новых откликах"
      },
      "VacancyScheduleOutput": {
        "title": "График работы",
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/VacancySchedule"
          },
          {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "Название графика работы"
              }
            }
          }
        ]
      },
      "VacancySchedule": {
        "title": "График работы",
        "type": "object",
        "nullable": true,
        "properties": {
          "id": {
            "type": "string",
            "description": "График работы из [справочника schedule](#tag/Obshie-spravochniki/operation/get-dictionaries)",
            "nullable": true
          }
        }
      },
      "VacancyProfessionalRolesOutput": {
        "title": "Профессиональные роли",
        "type": "array",
        "description": "Список профессиональных ролей",
        "items": {
          "$ref": "#/components/schemas/VacancyProfessionalRoleItemOutput"
        }
      },
      "VacancyProfessionalRoleItemOutput": {
        "title": "Название профессиональной роли",
        "allOf": [
          {
            "$ref": "#/components/schemas/VacancyProfessionalRoleItem"
          },
          {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "Название профессиональной роли"
              }
            }
          }
        ]
      },
      "VacancyProfessionalRoleItem": {
        "title": "Объект профессиональной роли",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Идентификатор профессиональной роли. Элемент справочника [professional_roles](#tag/Obshie-spravochniki/operation/get-professional-roles-dictionary)"
          }
        }
      },
      "VacancyDraftEmployer": {
        "title": "Работодатель",
        "type": "object",
        "required": [
          "id",
          "name",
          "logo_urls",
          "alternate_url",
          "url"
        ],
        "properties": {
          "alternate_url": {
            "type": "string",
            "description": "Url для просмотра работодателя на сайте"
          },
          "id": {
            "type": "string",
            "description": "Идентификатор работодателя"
          },
          "logo_urls": {
            "type": "object",
            "description": "Ссылки на логотипы работодателя разных размеров",
            "required": [
              "90",
              "240"
            ],
            "properties": {
              "90": {
                "type": "string"
              },
              "240": {
                "type": "string"
              },
              "original": {
                "type": "string"
              }
            }
          },
          "name": {
            "type": "string",
            "description": "Название работодателя"
          },
          "url": {
            "type": "string",
            "description": "Url для просмотра работодателя"
          }
        }
      },
      "VacancyCustomEmployerName": {
        "title": "Название",
        "type": "string",
        "description": "Название компании для анонимных вакансий (`type.id=anonymous`), например \"крупный российский банк\". Поле становится обязательным при публикации вакансии **анонимного** типа",
        "nullable": true
      },
      "ArtifactsArtifactUploadBody": {
        "title": "Загрузка изображения",
        "required": [
          "type",
          "file"
        ],
        "properties": {
          "description": {
            "type": "string",
            "description": "Текстовое описание. Имеет смысл для `portfolio`",
            "nullable": true
          },
          "file": {
            "type": "string",
            "description": "Файл изображения",
            "format": "binary"
          },
          "type": {
            "type": "string",
            "description": "Тип артефакта: `photo` или `portfolio`"
          }
        }
      },
      "VacanciesVacancyProlongate": {
        "title": "Инфо о пролонгации вакансии",
        "type": "object",
        "required": [
          "id",
          "expires_at",
          "actions"
        ],
        "properties": {
          "actions": {
            "type": "array",
            "description": "Список действий, которые можно предпринять для продления вакансии",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/VacanciesVacancyProlongateAvailableActions"
                },
                {
                  "$ref": "#/components/schemas/VacanciesVacancyProlongateUnavailableActions"
                }
              ]
            }
          },
          "expires_at": {
            "type": "string",
            "description": "Дата окончания публикации вакансии"
          },
          "id": {
            "type": "string",
            "description": "Идентификатор вакансии"
          }
        }
      },
      "VacanciesVacancyProlongateUnavailableActions": {
        "title": "Продление невозможно",
        "type": "object",
        "required": [
          "id",
          "enabled",
          "disable_reason"
        ],
        "properties": {
          "disable_reason": {
            "allOf": [
              {
                "type": "object",
                "description": "Причина, по которой совершить действие невозможно. Элемент `vacancy_not_prolonged_reason` в [справочнике полей](#tag/Obshie-spravochniki/operation/get-dictionaries)"
              },
              {
                "$ref": "#/components/schemas/_IncludesIdName"
              }
            ]
          },
          "enabled": {
            "type": "boolean",
            "description": "Возможно ли выполнить действие"
          },
          "id": {
            "type": "string",
            "description": "Идентификатор действия"
          }
        }
      },
      "VacanciesVacancyProlongateAvailableActions": {
        "title": "Продление возможно",
        "type": "object",
        "required": [
          "id",
          "enabled",
          "url",
          "method"
        ],
        "properties": {
          "enabled": {
            "type": "boolean",
            "description": "Возможно ли выполнить действие"
          },
          "id": {
            "type": "string",
            "description": "Идентификатор действия"
          },
          "method": {
            "type": "string",
            "description": "HTTP-метод запроса для выполнения действия"
          },
          "url": {
            "type": "string",
            "description": "URL запроса для выполнения действия"
          }
        }
      },
      "EmployerManagersResponse": {
        "title": "Успешный ответ",
        "required": [
          "items",
          "found",
          "page",
          "pages",
          "per_page"
        ],
        "properties": {
          "found": {
            "title": "Найдено результатов",
            "type": "number"
          },
          "items": {
            "title": "Список менеджеров работодателя",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EmployerManagersEmployerManagerItem"
            }
          },
          "page": {
            "title": "Номер страницы",
            "type": "number"
          },
          "pages": {
            "title": "Всего страниц",
            "type": "number"
          },
          "per_page": {
            "title": "Результатов на странице",
            "type": "number"
          }
        }
      },
      "EmployerManagersEmployerManagerItem": {
        "title": "Менеджер",
        "required": [
          "id",
          "email",
          "position",
          "area"
        ],
        "properties": {
          "additional_phone": {
            "description": "Дополнительный телефон менеджера",
            "allOf": [
              {
                "$ref": "#/components/schemas/EmployerManagersPhone"
              },
              {
                "type": "object"
              }
            ]
          },
          "area": {
            "$ref": "#/components/schemas/EmployerManagersArea"
          },
          "email": {
            "type": "string",
            "description": "Адрес электронной почты менеджера"
          },
          "first_name": {
            "type": "string",
            "description": "Имя менеджера"
          },
          "full_name": {
            "type": "string",
            "description": "Полное имя менеджера"
          },
          "id": {
            "type": "string",
            "description": "Идентификатор менеджера"
          },
          "is_main_contact_person": {
            "type": "boolean",
            "description": "Является ли менеджер основным контактным лицом"
          },
          "last_name": {
            "type": "string",
            "description": "Фамилия менеджера"
          },
          "middle_name": {
            "type": "string",
            "description": "Отчество менеджера"
          },
          "name": {
            "type": "string",
            "description": "Полное имя менеджера",
            "deprecated": true
          },
          "phone": {
            "description": "Основной телефон менеджера",
            "allOf": [
              {
                "$ref": "#/components/schemas/EmployerManagersPhone"
              },
              {
                "type": "object"
              }
            ]
          },
          "position": {
            "type": "string",
            "description": "Должность менеджера"
          },
          "vacancies_count": {
            "type": "number",
            "description": "Количество опубликованных (активных) вакансий у данного менеджера. `null` — если у пользователя нет прав на просмотр вакансий этого менеджера",
            "nullable": true
          }
        }
      },
      "EmployerManagersPhone": {
        "title": "Телефон",
        "required": [
          "country",
          "city",
          "number"
        ],
        "properties": {
          "city": {
            "type": "string",
            "description": "Код города"
          },
          "comment": {
            "type": "string",
            "description": "Комментарий"
          },
          "country": {
            "type": "string",
            "description": "Код страны"
          },
          "formatted": {
            "type": "string",
            "description": "Номер телефона отформатированный"
          },
          "number": {
            "type": "string",
            "description": "Номер"
          }
        }
      },
      "EmployerManagersArea": {
        "title": "Регион",
        "required": [
          "id",
          "name",
          "url"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "Идентификатор региона из [справочника](#tag/Obshie-spravochniki/operation/get-areas)"
          },
          "name": {
            "type": "string",
            "description": "Название региона"
          },
          "url": {
            "type": "string",
            "description": "Ссылка на информацию о регионе"
          }
        }
      },
      "EmployersVacancyBrandedTemplatesList": {
        "title": "Успешный ответ",
        "type": "object",
        "required": [
          "items"
        ],
        "properties": {
          "items": {
            "type": "array",
            "description": "Список доступных брендированных шаблонов вакансий",
            "items": {
              "type": "object",
              "required": [
                "id",
                "version_id",
                "name"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Идентификатор брендированного шаблона вакансий",
                  "minLength": 1
                },
                "name": {
                  "type": "string",
                  "description": "Название брендированного шаблона вакансий"
                },
                "version_id": {
                  "type": "string",
                  "description": "Идентификатор активной версии брендированного шаблона. \nРавен null в случае шаблонов-конструкторов\n",
                  "nullable": true
                }
              }
            }
          }
        }
      },
      "NegotiationsMessageSent": {
        "title": "Подтверждение отправки",
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/NegotiationsMessage"
          },
          {
            "type": "object",
            "properties": {
              "address": {
                "type": "object",
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/VacancyAddressOutput"
                  },
                  {
                    "$ref": "#/components/schemas/_IncludesNullableObject"
                  }
                ]
              }
            }
          }
        ]
      },
      "NegotiationsMessage": {
        "title": "Сообщение в отклике",
        "type": "object",
        "description": "Сообщение в отклике",
        "required": [
          "id",
          "viewed_by_me",
          "viewed_by_opponent",
          "editable",
          "created_at",
          "text",
          "state",
          "author",
          "address"
        ],
        "properties": {
          "author": {
            "$ref": "#/components/schemas/NegotiationsAuthor"
          },
          "created_at": {
            "type": "string",
            "description": "Дата и время создания сообщения"
          },
          "editable": {
            "type": "boolean",
            "description": "Можно ли редактировать текст сообщения"
          },
          "id": {
            "type": "string",
            "description": "Идентификатор сообщения"
          },
          "read": {
            "type": "boolean",
            "description": "Можно ли прочитать сообщение"
          },
          "state": {
            "type": "object",
            "description": "Состояние сообщения",
            "allOf": [
              {
                "$ref": "#/components/schemas/_IncludesIdName"
              }
            ]
          },
          "text": {
            "type": "string",
            "description": "Текст сообщения",
            "nullable": true
          },
          "viewed_by_me": {
            "type": "boolean",
            "description": "Прочитано ли сообщение смотрящим (для сообщений отправленных соискателем - всегда true)"
          },
          "viewed_by_opponent": {
            "type": "boolean",
            "description": "Прочитано ли сообщение работодателем (для сообщений работодателя - true)"
          }
        }
      },
      "NegotiationsAuthor": {
        "title": "Автор сообщения",
        "type": "object",
        "description": "Автор сообщения",
        "required": [
          "participant_type"
        ],
        "properties": {
          "participant_type": {
            "type": "string",
            "description": "Тип собеседника: `applicant` или `employer`"
          }
        }
      },
      "ErrorsVacancyFavoritedCombinedBadAuthErrors": {
        "title": "Ошибки",
        "anyOf": [
          {
            "$ref": "#/components/schemas/ErrorsCommonBadAuthorizationErrors"
          },
          {
            "$ref": "#/components/schemas/ErrorsVacancyFavoritedBadAuthErrors"
          }
        ]
      },
      "ErrorsVacancyFavoritedBadAuthErrors": {
        "title": "Ошибки добавления вакансии в отобранное",
        "description": "Информация о возникших ошибках",
        "allOf": [
          {
            "$ref": "#/components/schemas/ErrorsCommonErrorRequestId"
          },
          {
            "type": "object",
            "required": [
              "errors"
            ],
            "properties": {
              "description": {
                "type": "string",
                "description": "Описание ошибки",
                "example": "Forbidden"
              },
              "errors": {
                "type": "array",
                "description": "Массив с данными ошибок",
                "minItems": 1,
                "items": {
                  "$ref": "#/components/schemas/ErrorsVacancyFavoritedBadAuthError"
                }
              }
            }
          }
        ]
      },
      "ErrorsVacancyFavoritedBadAuthError": {
        "title": "Ошибка добавления вакансии в отобранные",
        "type": "object",
        "additionalProperties": false,
        "required": [
          "type",
          "value"
        ],
        "properties": {
          "type": {
            "type": "string",
            "description": "Текстовый идентификатор типа ошибки",
            "example": "vacancies_favorited",
            "enum": [
              "vacancies_favorited"
            ]
          },
          "value": {
            "type": "string",
            "description": "Возможные ошибки:\n  * `vacancy_archived` — Вакансия уже в архиве и не может быть добавлена в отобранное\n  * `limit_exceeded` — Превышен лимит количества отобранных вакансий\n",
            "example": "vacancy_archived",
            "enum": [
              "vacancy_archived",
              "limit_exceeded"
            ]
          }
        }
      },
      "VacancyEdit": {
        "title": "Редактируемые поля вакансии",
        "type": "object",
        "anyOf": [
          {
            "$ref": "#/components/schemas/VacancyEditCommon"
          },
          {
            "$ref": "#/components/schemas/VacancyEditBillingType"
          },
          {
            "$ref": "#/components/schemas/VacancyEditManager"
          }
        ]
      },
      "VacancyEditBillingType": {
        "title": "Смена биллингового типа",
        "type": "object",
        "description": "Поле, передаваемое в запросе при смене биллингового типа вакансии. Биллинговый тип можно только улучшать",
        "required": [
          "billing_type"
        ],
        "properties": {
          "billing_type": {
            "nullable": true,
            "$ref": "#/components/schemas/VacancyBillingType"
          }
        }
      },
      "VacancyEditCommon": {
        "title": "Поля вакансии, которые можно отредактировать одновременно",
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/VacancyCommonFields"
          },
          {
            "$ref": "#/components/schemas/VacancyEditFields"
          }
        ]
      },
      "VacancyCommonFields": {
        "title": "Поля, передаваемые в запросах на создание и редактирование вакансии",
        "type": "object",
        "description": "Поля, передаваемые в запросах на создание и редактирование вакансии",
        "properties": {
          "accept_handicapped": {
            "type": "boolean",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/VacancyAcceptHandicapped"
              },
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              }
            ]
          },
          "accept_incomplete_resumes": {
            "type": "boolean",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/VacancyAcceptIncompleteResumes"
              },
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              }
            ]
          },
          "accept_kids": {
            "type": "boolean",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/VacancyAcceptKids"
              },
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              }
            ]
          },
          "accept_temporary": {
            "$ref": "#/components/schemas/VacancyAcceptTemporary"
          },
          "address": {
            "$ref": "#/components/schemas/VacancyAddress"
          },
          "allow_messages": {
            "type": "boolean",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/VacancyAllowMessages"
              },
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              }
            ]
          },
          "branded_template": {
            "$ref": "#/components/schemas/VacancyBrandedTemplate"
          },
          "code": {
            "$ref": "#/components/schemas/VacancyCode"
          },
          "contacts": {
            "$ref": "#/components/schemas/VacancyContacts"
          },
          "custom_employer_name": {
            "$ref": "#/components/schemas/VacancyCustomEmployerName"
          },
          "department": {
            "$ref": "#/components/schemas/VacancyDepartment"
          },
          "driver_license_types": {
            "type": "array",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/VacancyDriverLicenseTypes"
              },
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              }
            ]
          },
          "employment": {
            "$ref": "#/components/schemas/VacancyEmployment"
          },
          "experience": {
            "$ref": "#/components/schemas/VacancyExperience"
          },
          "key_skills": {
            "type": "array",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/VacancyKeySkills"
              },
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              }
            ]
          },
          "languages": {
            "type": "array",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/VacancyLanguages"
              },
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              }
            ]
          },
          "professional_roles": {
            "$ref": "#/components/schemas/VacancyProfessionalRoles"
          },
          "response_letter_required": {
            "type": "boolean",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/VacancyResponseLetterRequired"
              },
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              }
            ]
          },
          "response_notifications": {
            "type": "boolean",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/VacancyResponseNotifications"
              },
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              }
            ]
          },
          "response_url": {
            "$ref": "#/components/schemas/VacancyResponseUrl"
          },
          "salary": {
            "$ref": "#/components/schemas/VacancySalary"
          },
          "schedule": {
            "$ref": "#/components/schemas/VacancySchedule"
          },
          "test": {
            "$ref": "#/components/schemas/VacancyDraftTest"
          },
          "working_days": {
            "$ref": "#/components/schemas/VacancyWorkingDays"
          },
          "working_time_intervals": {
            "$ref": "#/components/schemas/VacancyWorkingTimeIntervals"
          },
          "working_time_modes": {
            "$ref": "#/components/schemas/VacancyWorkingTimeModes"
          }
        }
      },
      "VacancyWorkingTimeIntervals": {
        "title": "Интервалы работы",
        "type": "array",
        "description": "Список с временными интервалами работы",
        "nullable": true,
        "items": {
          "$ref": "#/components/schemas/VacancyWorkingTimeIntervalItem"
        }
      },
      "VacancyLanguages": {
        "title": "Языки вакансии",
        "type": "array",
        "description": "Список языков вакансии",
        "items": {
          "$ref": "#/components/schemas/VacancyLanguage"
        }
      },
      "VacancyProfessionalRoles": {
        "title": "Список профессиональных ролей",
        "type": "array",
        "description": "Список профессиональных ролей",
        "items": {
          "$ref": "#/components/schemas/VacancyProfessionalRoleItem"
        }
      },
      "VacancyWorkingDays": {
        "title": "Список рабочих дней",
        "type": "array",
        "description": "Список рабочих дней",
        "nullable": true,
        "items": {
          "$ref": "#/components/schemas/VacancyWorkingDayItem"
        }
      },
      "VacancyContacts": {
        "title": "Контактная информация",
        "type": "object",
        "description": "Контактная информация. В случае, если параметр используется, необходимо наличие атрибута phones или email",
        "nullable": true,
        "required": [
          "name"
        ],
        "properties": {
          "email": {
            "type": "string",
            "description": "Электронная почта. Значение поля должно соответствовать формату email",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Имя контакта",
            "nullable": false
          },
          "phones": {
            "type": "array",
            "description": "Список телефонов для связи",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/VacancyPhoneItem"
            }
          }
        }
      },
      "VacancyPhoneItem": {
        "title": "Объект телефона для связи",
        "type": "object",
        "properties": {
          "city": {
            "type": "string",
            "description": "Код города"
          },
          "comment": {
            "type": "string",
            "description": "Комментарий (удобное время для звонка по этому номеру)",
            "nullable": true
          },
          "country": {
            "type": "string",
            "description": "Код страны"
          },
          "formatted": {
            "type": "string",
            "description": "Телефонный номер"
          },
          "number": {
            "type": "string",
            "description": "Телефон"
          }
        }
      },
      "VacancyWorkingTimeModes": {
        "title": "Режимы работы",
        "type": "array",
        "description": "Список режимов времени работы",
        "nullable": true,
        "items": {
          "$ref": "#/components/schemas/VacancyWorkingTimeModeItem"
        }
      },
      "VacancyEditFields": {
        "title": "Поля для редактирование вакансии",
        "type": "object",
        "description": "Поля, передаваемые в запросе на редактирование вакансии",
        "properties": {
          "description": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/VacancyDescription"
              },
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              }
            ]
          },
          "name": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/VacancyName"
              },
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              }
            ]
          }
        }
      },
      "VacancyEditManager": {
        "title": "Смена менеджера вакансии",
        "type": "object",
        "description": "Поле, передаваемое в запросе при смене менеджера вакансии",
        "required": [
          "manager"
        ],
        "properties": {
          "manager": {
            "description": "Идентификатор менеджера, которому надо передать автопоиск из ([списка менеджеров компании](#tag/Menedzhery-rabotodatelya/operation/get-employer-managers))",
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/_IncludesId"
              }
            ]
          }
        }
      },
      "DictionariesFacultiesResponse": {
        "title": "Список факультетов",
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/_IncludesIdName"
        }
      },
      "ResumesSuitableResumesResponse": {
        "title": "Информация о резюме, которыми можно откликнуться на вакансию",
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/_IncludesPagination"
          },
          {
            "$ref": "#/components/schemas/ResumesSuitableResumeItems"
          },
          {
            "type": "object",
            "required": [
              "overall"
            ],
            "properties": {
              "overall": {
                "$ref": "#/components/schemas/ResumesSuitableResumeOverall"
              }
            }
          }
        ]
      },
      "ResumesSuitableResumeOverall": {
        "title": "Общее количество резюме",
        "type": "object",
        "description": "Содержит информацию об общем количестве резюме у соискателя",
        "required": [
          "not_published",
          "already_applied",
          "unavailable"
        ],
        "properties": {
          "already_applied": {
            "type": "number",
            "description": "Количество резюме, которыми пользователь уже откликался на эту вакансию"
          },
          "not_published": {
            "type": "number",
            "description": "Количество неопубликованных резюме"
          },
          "unavailable": {
            "type": "number",
            "description": "Количество резюме, которыми невозможно откликнуться на данную вакансию по другим причинам (конфликтующие настройки видимости резюме и т.п.)"
          }
        }
      },
      "ResumesSuitableResumeItems": {
        "title": "Список резюме, которыми можно откликнуться на вакансию",
        "type": "object",
        "required": [
          "items"
        ],
        "properties": {
          "items": {
            "type": "array",
            "description": "Список резюме, которыми можно откликнуться на вакансию",
            "items": {
              "$ref": "#/components/schemas/ResumesSuitableResumeItem"
            }
          }
        }
      },
      "ResumesSuitableResumeItem": {
        "title": "Резюме, подходящее для отклика",
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/ResumeResumeShortForOwner"
          },
          {
            "type": "object",
            "required": [
              "requires_completion",
              "finished",
              "status",
              "access"
            ],
            "properties": {
              "access": {
                "$ref": "#/components/schemas/ResumeObjectsAccess"
              },
              "finished": {
                "type": "boolean",
                "description": "Заполнено ли резюме"
              },
              "requires_completion": {
                "type": "boolean",
                "description": "Принимает значение `true`, если резюме является неполным. Применимо только для вакансий, у которых не установлен флаг «принимать неполные резюме». \n\nПри получении `true` в данном поле, соискатель должен заполнить обязательные поля (доступны в [выдаче полного резюме](#tag/Prosmotr-rezyume/operation/get-resume)) перед откликом на данную вакансию\n"
              },
              "status": {
                "description": "Статус [резюме](#tag/Rezyume.-Prosmotr-informacii/Status-rezyume)\n",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/_IncludesIdName"
                  }
                ]
              }
            }
          }
        ]
      },
      "ResumeResumeShortForOwner": {
        "title": "Сокращенное представление резюме при запросе от владельца",
        "type": "object",
        "required": [
          "id",
          "url",
          "alternate_url",
          "created_at",
          "updated_at",
          "certificate",
          "education",
          "experience",
          "download",
          "hidden_fields",
          "actions",
          "marked"
        ],
        "properties": {
          "actions": {
            "type": "object",
            "description": "Дополнительные действия",
            "allOf": [
              {
                "$ref": "#/components/schemas/ResumeObjectsActionsForOwner"
              }
            ]
          },
          "age": {
            "type": "number",
            "description": "Возраст",
            "nullable": true
          },
          "alternate_url": {
            "type": "string",
            "description": "URL резюме на сайте"
          },
          "area": {
            "type": "object",
            "description": "Город проживания. Элемент справочника [areas](#tag/Obshie-spravochniki/operation/get-areas)",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/_IncludesIdNameUrl"
              },
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              }
            ]
          },
          "auto_hide_time": {
            "$ref": "#/components/schemas/ResumeObjectsAutoHideTime"
          },
          "can_view_full_info": {
            "type": "boolean",
            "description": "Доступен ли просмотр контактной информации в резюме текущему работодателю",
            "nullable": true
          },
          "certificate": {
            "type": "array",
            "description": "Список сертификатов соискателя",
            "items": {
              "$ref": "#/components/schemas/ResumeObjectsCertificate"
            }
          },
          "created_at": {
            "type": "string",
            "description": "Дата и время создания резюме"
          },
          "download": {
            "type": "object",
            "description": "Ссылки для скачивания резюме в разных форматах",
            "allOf": [
              {
                "$ref": "#/components/schemas/ResumeObjectsDownload"
              }
            ]
          },
          "education": {
            "type": "object",
            "description": "Образование соискателя. \n\nОсобенности сохранения образования:\n\n* Если передать и высшее и среднее образование и уровень образования \"средний\", то сохранится только среднее образование.\n* Если передать и высшее и среднее образование и уровень образования \"высшее\", то сохранится только высшее образование\n",
            "allOf": [
              {
                "$ref": "#/components/schemas/ResumeObjectsEducation"
              }
            ]
          },
          "experience": {
            "type": "array",
            "description": "Опыт работы",
            "items": {
              "$ref": "#/components/schemas/ResumeObjectsExperienceForOwner"
            }
          },
          "first_name": {
            "type": "string",
            "description": "Имя",
            "nullable": true
          },
          "gender": {
            "type": "object",
            "description": "Пол соискателя. Возможные значения перечислены в поле `gender` [справочника полей](#tag/Obshie-spravochniki/operation/get-dictionaries)",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/_IncludesIdName"
              },
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              }
            ]
          },
          "hidden_fields": {
            "type": "array",
            "description": "Документация [Список скрытых полей](https://github.com/hhru/api/blob/master/docs/employer_resumes.md#hidden-fields). Возможные значения элементов приведены в поле `resume_hidden_fields` [справочника полей](#tag/Obshie-spravochniki/operation/get-dictionaries)",
            "items": {
              "$ref": "#/components/schemas/_IncludesIdName"
            }
          },
          "id": {
            "type": "string",
            "description": "Идентификатор резюме"
          },
          "last_name": {
            "type": "string",
            "description": "Фамилия",
            "nullable": true
          },
          "marked": {
            "type": "boolean",
            "description": "Выделено ли резюме в поиске"
          },
          "middle_name": {
            "type": "string",
            "description": "Отчество",
            "nullable": true
          },
          "photo": {
            "type": "object",
            "description": "Фотография пользователя",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              },
              {
                "$ref": "#/components/schemas/ProfilePhoto"
              }
            ]
          },
          "platform": {
            "type": "object",
            "description": "Ресурс, на котором было размещено резюме",
            "allOf": [
              {
                "$ref": "#/components/schemas/_IncludesId"
              }
            ]
          },
          "salary": {
            "description": "Желаемая зарплата",
            "$ref": "#/components/schemas/ResumeObjectsSalaryProperties"
          },
          "title": {
            "type": "string",
            "description": "Желаемая должность",
            "nullable": true
          },
          "total_experience": {
            "description": "Общий опыт работы",
            "$ref": "#/components/schemas/ResumeObjectsTotalExperience"
          },
          "updated_at": {
            "type": "string",
            "description": "Дата и время обновления резюме"
          },
          "url": {
            "type": "string",
            "description": "URL резюме на сайте"
          }
        }
      },
      "ResumeObjectsExperienceForOwner": {
        "title": "Опыт работы в организации",
        "type": "object",
        "required": [
          "industries",
          "position",
          "start"
        ],
        "properties": {
          "area": {
            "type": "object",
            "description": "Регион расположения организации. Элемент [справочника регионов](#tag/Obshie-spravochniki/operation/get-areas)",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/_IncludesIdNameUrl"
              },
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              }
            ]
          },
          "company": {
            "type": "string",
            "description": "Название организации",
            "nullable": true
          },
          "company_id": {
            "type": "string",
            "description": "Уникальный идентификатор организации",
            "nullable": true
          },
          "company_url": {
            "type": "string",
            "description": "Сайт компании",
            "nullable": true
          },
          "employer": {
            "type": "object",
            "description": "Работодатель",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/EmployersEmployerInfoShort"
              },
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              }
            ]
          },
          "end": {
            "type": "string",
            "description": "Окончание работы (дата в формате `ГГГГ-ММ-ДД`)",
            "nullable": true
          },
          "industries": {
            "type": "array",
            "description": "Список отраслей компании. Возможные значения приведены в [справочнике индустрий](#tag/Obshie-spravochniki/operation/get-industries)",
            "items": {
              "$ref": "#/components/schemas/_IncludesIdName"
            }
          },
          "industry": {
            "type": "object",
            "description": "Отрасль компании",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ResumeObjectsIndustry"
              },
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              }
            ]
          },
          "position": {
            "type": "string",
            "description": "Должность"
          },
          "start": {
            "type": "string",
            "description": "Начало работы (дата в формате `ГГГГ-ММ-ДД`)"
          }
        }
      },
      "EmployersEmployerInfoShort": {
        "title": "Работодатель",
        "type": "object",
        "required": [
          "id",
          "name",
          "url",
          "alternate_url"
        ],
        "properties": {
          "alternate_url": {
            "type": "string",
            "description": "Ссылка на описание работодателя на сайте"
          },
          "id": {
            "type": "string",
            "description": "Идентификатор работодателя"
          },
          "logo_urls": {
            "type": "object",
            "description": "Ссылки на изображения логотипов работодателя разных размеров. `original` — это необработанный логотип, который может быть большого размера. Если изначально загруженный компанией логотип меньше, чем 240px и/или 90px по меньшей стороне, то в соответствующих ключах будут ссылки на изображения оригинального размера. Объект может быть `null`, если компания не загрузила логотип. Клиент должен предусмотреть возможность отсутствия логотипа по указанной ссылке (ответ с кодом `404 Not Found`). Логотипы 90 и 240 присутствуют не во всех компаниях",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/_IncludesLogoUrls"
              },
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              }
            ]
          },
          "name": {
            "type": "string",
            "description": "Название работодателя"
          },
          "url": {
            "type": "string",
            "description": "URL для получения полного описания работодателя"
          }
        }
      },
      "_IncludesIdNameUrl": {
        "title": "Объект с идентификатором, названием и ссылкой",
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/_IncludesIdName"
          },
          {
            "type": "object",
            "required": [
              "url"
            ],
            "properties": {
              "url": {
                "type": "string",
                "description": "URL получения информации о поле"
              }
            }
          }
        ]
      },
      "ResumeObjectsIndustry": {
        "title": "Отрасль",
        "type": "object",
        "deprecated": true,
        "required": [
          "id",
          "name"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "Идентификатор поля"
          },
          "name": {
            "type": "string",
            "description": "Название поля"
          }
        }
      },
      "ResumeObjectsSalaryProperties": {
        "title": "Зарплата",
        "type": "object",
        "nullable": true,
        "properties": {
          "amount": {
            "type": "number",
            "description": "Сумма",
            "nullable": true
          },
          "currency": {
            "type": "string",
            "description": "Идентификатор валюты. Возможные значения перечислены в массиве `currency` [справочника полей](#tag/Obshie-spravochniki/operation/get-dictionaries)",
            "nullable": true
          }
        }
      },
      "ResumeObjectsActionsForOwner": {
        "title": "Действия с резюме от имени владельца",
        "type": "object",
        "required": [
          "download"
        ],
        "properties": {
          "download": {
            "type": "object",
            "description": "Ссылки для скачивания резюме в нескольких форматах ([подробнее](#tag/Prosmotr-rezyume/operation/get-resume)) (атрибут 'actions')\n",
            "allOf": [
              {
                "$ref": "#/components/schemas/ResumeObjectsDownload"
              }
            ]
          }
        }
      },
      "ResumeObjectsDownload": {
        "title": "Загрузка резюме",
        "type": "object",
        "required": [
          "pdf",
          "rtf"
        ],
        "properties": {
          "pdf": {
            "type": "object",
            "description": "PDF-версия резюме",
            "allOf": [
              {
                "$ref": "#/components/schemas/ResumeObjectsDownloadPdfRtf"
              }
            ]
          },
          "rtf": {
            "type": "object",
            "description": "RTF-версия резюме",
            "allOf": [
              {
                "$ref": "#/components/schemas/ResumeObjectsDownloadPdfRtf"
              }
            ]
          }
        }
      },
      "ResumeObjectsDownloadPdfRtf": {
        "title": "PDF/RTF-версия резюме",
        "type": "object",
        "required": [
          "url"
        ],
        "properties": {
          "url": {
            "type": "string",
            "description": "Ссылка для получения PDF/RTF-версии резюме"
          }
        }
      },
      "ResumeObjectsEducation": {
        "title": "Образование",
        "type": "object",
        "required": [
          "level"
        ],
        "properties": {
          "additional": {
            "type": "array",
            "description": "Список куров повышения квалификации",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ResumeObjectsEducationAdditional"
            }
          },
          "attestation": {
            "type": "array",
            "description": "Список пройденных тестов или экзаменов",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ResumeObjectsEducationAdditional"
            }
          },
          "elementary": {
            "type": "array",
            "description": "Среднее образование. Обычно заполняется только при отсутствии высшего образования",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ResumeObjectsEducationElementary"
            }
          },
          "level": {
            "type": "object",
            "description": "Уровень образования. Возможные значения приведены в поле `education_level` [справочника полей](#tag/Obshie-spravochniki/operation/get-dictionaries)",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/_IncludesIdName"
              },
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              }
            ]
          },
          "primary": {
            "type": "array",
            "description": "Список образований выше среднего",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ResumeObjectsEducationPrimary"
            }
          }
        }
      },
      "ResumeObjectsEducationElementary": {
        "title": "Среднее образование",
        "type": "object",
        "required": [
          "year",
          "name"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "Название учебного заведения"
          },
          "year": {
            "type": "number",
            "description": "Год окончания"
          }
        }
      },
      "ResumeObjectsEducationPrimary": {
        "title": "Высшее образование",
        "type": "object",
        "required": [
          "name",
          "year"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "Название учебного заведения"
          },
          "name_id": {
            "type": "string",
            "description": "Идентификатор учебного заведения",
            "nullable": true
          },
          "organization": {
            "type": "string",
            "description": "Факультет",
            "nullable": true
          },
          "organization_id": {
            "type": "string",
            "description": "Идентификатор факультета",
            "nullable": true
          },
          "result": {
            "type": "string",
            "description": "Специальность / специализация",
            "nullable": true
          },
          "result_id": {
            "type": "string",
            "description": "Идентификатор специальности / специализации",
            "nullable": true
          },
          "year": {
            "type": "number",
            "description": "Год окончания"
          }
        }
      },
      "ResumeObjectsEducationAdditional": {
        "title": "Дополнительное образование",
        "type": "object",
        "required": [
          "organization",
          "name",
          "year"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "Название курса / теста"
          },
          "organization": {
            "type": "string",
            "description": "Организация, проводившая курс / тест"
          },
          "result": {
            "type": "string",
            "description": "Специальность / специализация",
            "nullable": true
          },
          "year": {
            "type": "number",
            "description": "Год окончания / сдачи"
          }
        }
      },
      "ResumeObjectsAutoHideTime": {
        "title": "Время автоскрытия резюме при неактивности пользователя",
        "type": "object",
        "description": "Время автоскрытия резюме при неактивности пользователя. \n\nОпределяет период, по истечение которого резюме будет скрыто, если пользователь не совершал никаких действий\nВозможные значения перечислены при запросе [типов видимости резюме](#tag/Rezyume.-Spiski-vidimosti/operation/get-resume-access-types)\n\nПоле доступно для просмотра и редактирования только для пользователей rabota.by\n",
        "nullable": true,
        "oneOf": [
          {
            "$ref": "#/components/schemas/_IncludesIdName"
          },
          {
            "$ref": "#/components/schemas/_IncludesNullableObject"
          }
        ]
      },
      "ProfilePhoto": {
        "title": "Фотография пользователя",
        "type": "object",
        "description": "Фотография пользователя (см. [Артефакты](#tag/Rabota-s-artefaktami))",
        "required": [
          "id",
          "small",
          "medium"
        ],
        "properties": {
          "40": {
            "type": "string",
            "deprecated": true
          },
          "100": {
            "type": "string",
            "deprecated": true
          },
          "500": {
            "type": "string",
            "deprecated": true
          },
          "id": {
            "type": "string",
            "description": "Уникальный идентификатор изображения"
          },
          "medium": {
            "type": "string",
            "description": "URL среднего по размеру изображения. Изображение по данному url доступно ограниченное время, после получения ответа. Приложение должно быть готово к тому, что на запрос изображения вернётся `404 Not Found`\n"
          },
          "small": {
            "type": "string",
            "description": "URL уменьшенного изображения. Изображение по данному url доступно ограниченное время, после получения ответа. Приложение должно быть готово к тому, что на запрос изображения вернётся `404 Not Found`\n"
          }
        }
      },
      "ResumeObjectsCertificate": {
        "title": "Сертификат",
        "type": "object",
        "properties": {
          "achieved_at": {
            "type": "string",
            "description": "Дата получения (в формате `ГГГГ-ММ-ДД`)"
          },
          "owner": {
            "type": "string",
            "description": "На кого выдан сертификат. Возвращается только для сертификатов с `type = microsoft`",
            "nullable": true
          },
          "title": {
            "type": "string",
            "description": "Название сертификата"
          },
          "type": {
            "type": "string",
            "description": "Тип сертификата. Доступные значения:\n\n* `custom`;\n* `microsoft`\n"
          },
          "url": {
            "type": "string",
            "description": "Ссылка на страницу с описанием сертификата",
            "nullable": true
          }
        }
      },
      "ResumeObjectsTotalExperience": {
        "title": "Опыт работы",
        "type": "object",
        "nullable": true,
        "properties": {
          "months": {
            "type": "number",
            "description": "Общий опыт работы в месяцах, с округлением до месяца",
            "nullable": true
          }
        }
      },
      "ResumeObjectsAccess": {
        "title": "Тип видимости",
        "type": "object",
        "description": "Тип видимости резюме",
        "required": [
          "type"
        ],
        "properties": {
          "type": {
            "type": "object",
            "description": "Определяет, кому будет доступно резюме в поиске и по прямой ссылке.\n\nУстановить значение параметра можно при [создании](#tag/Rezyume.-Sozdanie-i-obnovlenie/operation/create-resume) или [редактировании](#tag/Rezyume.-Sozdanie-i-obnovlenie/operation/edit-resume) резюме. Возможные значения приведены в поле `resume_access_type` [справочника полей](#tag/Obshie-spravochniki/operation/get-dictionaries).\n\nС 1 сентября 2021 года тип видимости `everyone` стал недоступен для сохранения из-за законодательных ограничений.\n\nЧтобы управлять списком работодателей, которые могут просматривать резюме, воспользуйтесь группой методов [Резюме. Списки видимости](#tag/Rezyume.-Spiski-vidimosti)\n",
            "allOf": [
              {
                "$ref": "#/components/schemas/_IncludesIdName"
              }
            ]
          }
        }
      },
      "NegotiationsNegotiationGetResponse": {
        "title": "Успешный ответ",
        "type": "object",
        "anyOf": [
          {
            "$ref": "#/components/schemas/NegotiationsApplicantNegotiation"
          },
          {
            "$ref": "#/components/schemas/NegotiationsEmployerNegotiation"
          }
        ]
      },
      "NegotiationsApplicantNegotiation": {
        "title": "Информация об отклике/приглашении (соискатель)",
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/NegotiationsObjectsTopicItem"
          },
          {
            "type": "object",
            "required": [
              "url"
            ],
            "properties": {
              "resume": {
                "type": "object",
                "description": "Короткое представление резюме",
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/NegotiationsObjectsTopicResume"
                  },
                  {
                    "$ref": "#/components/schemas/_IncludesNullableObject"
                  }
                ]
              },
              "url": {
                "type": "string",
                "description": "Ссылка на полную версию отклика"
              }
            }
          }
        ]
      },
      "NegotiationsObjectsTopicResume": {
        "title": "Сокращенное представление резюме",
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/ResumeResumeNanoWithUrl"
          },
          {
            "type": "object",
            "required": [
              "created_at",
              "updated_at"
            ],
            "properties": {
              "created_at": {
                "type": "string",
                "description": "Дата и время создания резюме"
              },
              "updated_at": {
                "type": "string",
                "description": "Дата и время обновления резюме"
              }
            }
          }
        ]
      },
      "ResumeResumeNanoWithUrl": {
        "title": "Сокращенное представление резюме",
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/ResumeResumeNano"
          },
          {
            "$ref": "#/components/schemas/_IncludesUrl"
          }
        ]
      },
      "ResumeResumeNano": {
        "title": "Сокращенное представление резюме",
        "type": "object",
        "required": [
          "id",
          "title",
          "alternate_url"
        ],
        "properties": {
          "alternate_url": {
            "type": "string",
            "description": "URL резюме на сайте"
          },
          "id": {
            "type": "string",
            "description": "Идентификатор резюме"
          },
          "title": {
            "type": "string",
            "description": "Желаемая должность",
            "nullable": true
          }
        }
      },
      "_IncludesUrl": {
        "title": "URL",
        "type": "object",
        "required": [
          "url"
        ],
        "properties": {
          "url": {
            "type": "string",
            "description": "Ссылка на получение элементов"
          }
        }
      },
      "NegotiationsObjectsTopicItem": {
        "title": "Отклик",
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/NegotiationsObjectsTopicItemCommon"
          },
          {
            "type": "object",
            "required": [
              "hidden",
              "decline_allowed"
            ],
            "properties": {
              "decline_allowed": {
                "type": "boolean",
                "description": "Можно ли [скрыть отклик](#tag/Perepiska-(otklikipriglasheniya)-dlya-soiskatelya/operation/hide-active-response) вместе с сообщением работодателю об отказе"
              },
              "hidden": {
                "type": "boolean",
                "description": "Скрыт ли текущий отклик от соискателя"
              },
              "job_search_status": {
                "type": "object",
                "description": "Статус поиска работы кандидатом. Для получения данных передайте параметр `with_job_search_status=true`",
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/_IncludesIdName"
                  },
                  {
                    "$ref": "#/components/schemas/_IncludesNullableObject"
                  }
                ]
              },
              "phone_calls": {
                "type": "object",
                "description": "Представление истории звонков по вакансии",
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/NegotiationsPhoneCalls"
                  },
                  {
                    "$ref": "#/components/schemas/_IncludesNullableObject"
                  }
                ]
              },
              "vacancy": {
                "type": "object",
                "description": "Короткое представление вакансии",
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/_IncludesNullableObject"
                  },
                  {
                    "$ref": "#/components/schemas/VacanciesNegotiationsVacancyShort"
                  }
                ]
              }
            }
          }
        ]
      },
      "NegotiationsObjectsTopicItemCommon": {
        "title": "Общая информация об отклике/приглашении",
        "type": "object",
        "required": [
          "id",
          "state",
          "created_at",
          "updated_at",
          "has_updates",
          "viewed_by_opponent",
          "messaging_status"
        ],
        "properties": {
          "counters": {
            "$ref": "#/components/schemas/NegotiationsObjectsCounters"
          },
          "created_at": {
            "type": "string",
            "description": "Дата и время создания отклика/приглашения"
          },
          "has_updates": {
            "$ref": "#/components/schemas/VacancyHasUpdates"
          },
          "id": {
            "type": "string",
            "description": "Идентификатор отклика/приглашения"
          },
          "messages_url": {
            "type": "string",
            "description": "URL, на который необходимо делать GET-запрос для получения [списка сообщений в отклике/приглашении](#tag/Perepiska-(otklikipriglasheniya)-dlya-soiskatelya/operation/get-negotiation-messages). Если `can_edit` равно `false`, значение поля должно игнорироваться",
            "deprecated": true
          },
          "messaging_status": {
            "type": "string",
            "description": "Текущий статус переписки.\n\nВозможные значения приведены в поле `messaging_status` [справочника полей](#tag/Obshie-spravochniki/operation/get-dictionaries)\n"
          },
          "professional_roles": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VacancyProfessionalRoles"
              },
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              }
            ]
          },
          "source": {
            "type": "string",
            "description": "Источник отклика/приглашения",
            "enum": [
              "NEGOTIATION",
              "PHONE_CALL",
              "CHAT",
              "VR",
              "AUTO_INVITE"
            ]
          },
          "state": {
            "type": "object",
            "description": "Текущее состояние отклика/приглашения.\n\nВозможные значения приведены в поле `negotiations_state` [справочника полей](#tag/Obshie-spravochniki/operation/get-dictionaries)\n",
            "allOf": [
              {
                "$ref": "#/components/schemas/_IncludesIdName"
              }
            ]
          },
          "updated_at": {
            "type": "string",
            "description": "Дата и время последнего обновления отклика/приглашения"
          },
          "viewed_by_opponent": {
            "type": "boolean",
            "description": "Был ли отклик просмотрен работодателем"
          }
        }
      },
      "NegotiationsObjectsCounters": {
        "title": "Счетчики",
        "type": "object",
        "properties": {
          "messages": {
            "type": "number",
            "description": "Общее количество сообщений"
          },
          "unread_messages": {
            "type": "number",
            "description": "Количество непрочитанных работодателем сообщений"
          }
        }
      },
      "VacancyHasUpdates": {
        "title": "Обновление по данной вакансии",
        "type": "boolean",
        "description": "Есть ли в откликах/приглашениях по данной вакансии обновления, требующие внимания"
      },
      "NegotiationsPhoneCalls": {
        "title": "История звонков",
        "type": "object",
        "required": [
          "picked_up_phone_by_opponent",
          "items"
        ],
        "properties": {
          "items": {
            "type": "array",
            "description": "Список звонков",
            "items": {
              "$ref": "#/components/schemas/NegotiationsPhoneCallItem"
            }
          },
          "picked_up_phone_by_opponent": {
            "type": "boolean",
            "description": "Ответил ли абонент соискателю хотя бы один раз"
          }
        }
      },
      "NegotiationsPhoneCallItem": {
        "title": "Звонок",
        "type": "object",
        "required": [
          "id",
          "status",
          "creation_time"
        ],
        "properties": {
          "creation_time": {
            "type": "string",
            "description": "Дата и время создания звонка"
          },
          "duration_seconds": {
            "type": "number",
            "description": "Длительность звонка в секундах",
            "nullable": true
          },
          "id": {
            "type": "number",
            "description": "Идентификатор звонка"
          },
          "last_change_time": {
            "type": "string",
            "description": "Дата и время обновления звонка",
            "nullable": true
          },
          "status": {
            "type": "string",
            "description": "Статус звонка.\n\nВозможные значения перечислены в разделе `phone_call_status` [справочника полей](#tag/Obshie-spravochniki/operation/get-dictionaries)\n"
          }
        }
      },
      "VacanciesNegotiationsVacancyShort": {
        "title": "Сокращенное представление вакансии",
        "type": "object",
        "required": [
          "id",
          "premium",
          "name",
          "department",
          "response_letter_required",
          "area",
          "salary",
          "type",
          "published_at",
          "archived",
          "apply_alternate_url",
          "url",
          "alternate_url",
          "employer",
          "has_test"
        ],
        "properties": {
          "address": {
            "$ref": "#/components/schemas/VacancyAddressRawOutput"
          },
          "alternate_url": {
            "type": "string",
            "description": "Ссылка на представление вакансии на сайте"
          },
          "apply_alternate_url": {
            "type": "string",
            "description": "Ссылка на отклик на вакансию на сайте"
          },
          "archived": {
            "type": "boolean",
            "description": "Находится ли данная вакансия в архиве"
          },
          "area": {
            "$ref": "#/components/schemas/_IncludesArea"
          },
          "created_at": {
            "type": "string",
            "description": "Дата и время публикации вакансии"
          },
          "department": {
            "$ref": "#/components/schemas/VacanciesObjectsDepartment"
          },
          "employer": {
            "$ref": "#/components/schemas/VacanciesObjectsEmployer"
          },
          "has_test": {
            "type": "boolean",
            "description": "Информация о наличии прикрепленного тестового задании к вакансии"
          },
          "id": {
            "type": "string",
            "description": "Идентификатор вакансии"
          },
          "insider_interview": {
            "$ref": "#/components/schemas/VacanciesObjectsInsiderInterview"
          },
          "name": {
            "type": "string",
            "description": "Название вакансии"
          },
          "premium": {
            "type": "boolean",
            "description": "Является ли данная вакансия премиум-вакансией"
          },
          "professional_roles": {
            "$ref": "#/components/schemas/VacancyProfessionalRolesOutput"
          },
          "published_at": {
            "type": "string",
            "description": "Дата и время публикации вакансии"
          },
          "response_letter_required": {
            "type": "boolean",
            "description": "Обязательно ли заполнять сообщение при отклике на вакансию"
          },
          "response_url": {
            "type": "string",
            "description": "URL отклика для прямых вакансий (`type.id=direct`)",
            "nullable": true
          },
          "salary": {
            "$ref": "#/components/schemas/VacancySalary"
          },
          "show_logo_in_search": {
            "type": "boolean",
            "description": "Отображать ли лого для вакансии в поисковой выдаче",
            "nullable": true
          },
          "sort_point_distance": {
            "type": "number",
            "description": "Расстояние в метрах между центром сортировки (заданной параметрами `sort_point_lat`, `sort_point_lng`) и указанным в вакансии адресом. В случае, если в адресе указаны только станции метро, выдается расстояние между центром сортировки и средней геометрической точкой указанных станций.\nЗначение `sort_point_distance` выдается только в случае, если заданы параметры `sort_point_lat`, `sort_point_lng`, `order_by=distance`\n",
            "nullable": true
          },
          "type": {
            "$ref": "#/components/schemas/VacancyTypeOutput"
          },
          "url": {
            "type": "string",
            "description": "URL вакансии"
          }
        }
      },
      "VacanciesObjectsEmployer": {
        "title": "Объект",
        "type": "object",
        "description": "Информация о компании работодателя",
        "nullable": true,
        "oneOf": [
          {
            "$ref": "#/components/schemas/VacanciesEmployerPublic"
          },
          {
            "$ref": "#/components/schemas/_IncludesNullableObject"
          }
        ]
      },
      "VacanciesEmployerPublic": {
        "title": "Информация о компании работодателя",
        "type": "object",
        "required": [
          "name",
          "trusted"
        ],
        "properties": {
          "accredited_it_employer": {
            "type": "boolean",
            "description": "Флаг, показывающий, прошла ли компания IT аккредитацию"
          },
          "alternate_url": {
            "type": "string",
            "description": "Ссылка на представление компании на сайте",
            "nullable": true,
            "example": "https://hh.ru/employer/1455"
          },
          "id": {
            "type": "string",
            "description": "Идентификатор компании",
            "nullable": true,
            "example": "1455"
          },
          "logo_urls": {
            "type": "object",
            "description": "Ссылки на логотипы работодателя разных размеров",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/_IncludesLogoUrls"
              },
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              }
            ]
          },
          "name": {
            "type": "string",
            "description": "Название компании",
            "example": "HeadHunter"
          },
          "trusted": {
            "type": "boolean",
            "description": "Флаг, показывающий, прошла ли компания проверку на сайте"
          },
          "url": {
            "type": "string",
            "description": "URL, на который нужно сделать GET-запрос, чтобы получить информацию о компании",
            "nullable": true,
            "example": "https://api.hh.ru/employers/1455"
          },
          "vacancies_url": {
            "type": "string",
            "description": "Ссылка на поисковую выдачу вакансий данной компании",
            "nullable": true,
            "example": "https://api.hh.ru/vacancies?employer_id=1455"
          }
        }
      },
      "VacancyAddressRawOutput": {
        "title": "Адрес",
        "type": "object",
        "description": "Адрес",
        "nullable": true,
        "properties": {
          "building": {
            "type": "string",
            "description": "Дом",
            "nullable": true
          },
          "city": {
            "type": "string",
            "description": "Город",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "Описание",
            "nullable": true
          },
          "id": {
            "type": "string",
            "description": "Адрес из [списка доступных адресов работодателя](https://api.hh.ru/openapi/redoc#tag/Adresa-rabotodatelya/operation/get-employer-addresses)",
            "nullable": true
          },
          "lat": {
            "type": "number",
            "description": "Широта",
            "nullable": true
          },
          "lng": {
            "type": "number",
            "description": "Долгота",
            "nullable": true
          },
          "metro": {
            "type": "object",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              },
              {
                "$ref": "#/components/schemas/_IncludesMetroStation"
              }
            ]
          },
          "metro_stations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/_IncludesMetroStation"
            }
          },
          "raw": {
            "type": "string",
            "description": "Полный адрес",
            "nullable": true
          },
          "street": {
            "type": "string",
            "description": "Улица",
            "nullable": true
          }
        }
      },
      "VacanciesObjectsDepartment": {
        "title": "Объект",
        "type": "object",
        "description": "Департамент",
        "nullable": true,
        "oneOf": [
          {
            "$ref": "#/components/schemas/VacancyDepartmentOutput"
          },
          {
            "$ref": "#/components/schemas/_IncludesNullableObject"
          }
        ]
      },
      "VacanciesObjectsInsiderInterview": {
        "title": "Объект",
        "type": "object",
        "description": "Объект с информацией об интервью о жизни в компании",
        "nullable": true,
        "oneOf": [
          {
            "$ref": "#/components/schemas/VacancyInsiderInterview"
          },
          {
            "$ref": "#/components/schemas/_IncludesNullableObject"
          }
        ]
      },
      "VacancyInsiderInterview": {
        "title": "Объект с информацией об интервью о жизни в компании",
        "type": "object",
        "required": [
          "id",
          "url"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "Идентификатор интервью"
          },
          "url": {
            "type": "string",
            "description": "Адрес страницы, содержащей интервью"
          }
        }
      },
      "NegotiationsEmployerNegotiation": {
        "title": "Информация об отклике/приглашении (работодатель)",
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/NegotiationsObjectsTopicItemCommon"
          },
          {
            "$ref": "#/components/schemas/NegotiationsNegotiationCommonFields"
          },
          {
            "type": "object",
            "properties": {
              "resume": {
                "type": "object",
                "description": "Короткое представление резюме",
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/_IncludesNullableObject"
                  },
                  {
                    "$ref": "#/components/schemas/NegotiationsObjectsEmployerTopicResume"
                  }
                ]
              },
              "vacancy": {
                "type": "object",
                "description": "Короткое представление вакансии",
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/VacanciesNegotiationsVacancyShort"
                  },
                  {
                    "$ref": "#/components/schemas/_IncludesNullableObject"
                  }
                ]
              }
            }
          }
        ]
      },
      "NegotiationsNegotiationCommonFields": {
        "title": "Общие поля отклика/приглашения",
        "type": "object",
        "properties": {
          "actions": {
            "type": "array",
            "description": "Возможные [действия по отклику/приглашению](https://github.com/hhru/api/blob/master/docs/employer_negotiations.md#actions-info)\n",
            "items": {
              "$ref": "#/components/schemas/VacancyNegotiationActions"
            }
          },
          "employer_state": {
            "$ref": "#/components/schemas/EmployersEmployersState"
          },
          "templates": {
            "type": "array",
            "description": "Шаблоны писем",
            "items": {
              "$ref": "#/components/schemas/VacancyTemplates"
            }
          },
          "test_result": {
            "type": "object",
            "description": "Результат выполнения [теста](#tag/Otklikipriglasheniya-rabotodatelya/operation/get-negotiation-test-results), прикрепленного к вакансии\n",
            "nullable": true,
            "anyOf": [
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              },
              {
                "$ref": "#/components/schemas/SkillVerificationsTestResultWithUrl"
              }
            ]
          }
        }
      },
      "VacancyNegotiationActions": {
        "title": "Действия по отклику/приглашению",
        "type": "object",
        "required": [
          "id",
          "name",
          "enabled",
          "method",
          "url",
          "templates",
          "arguments"
        ],
        "properties": {
          "arguments": {
            "type": "array",
            "description": "Обязательные и дополнительные аргументы для запроса",
            "items": {
              "$ref": "#/components/schemas/VacancyArguments"
            }
          },
          "enabled": {
            "type": "boolean",
            "description": "Возможно ли совершить действие"
          },
          "id": {
            "type": "string",
            "description": "Идентификатор действия"
          },
          "method": {
            "type": "string",
            "description": "HTTP метод, который необходимо выполнить"
          },
          "name": {
            "type": "string",
            "description": "Название действия"
          },
          "resulting_employer_state": {
            "type": "object",
            "description": "Документация [Работодательское состояние](https://github.com/hhru/api/blob/master/docs/employer_negotiations.md#term-employer-state) по отклику/приглашению, которое будет установлено после совершения действия. Если действие не меняет состояние — `null`",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/_IncludesIdName"
              },
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              }
            ]
          },
          "templates": {
            "type": "array",
            "description": "Шаблоны писем",
            "items": {
              "$ref": "#/components/schemas/VacancyTemplates"
            }
          },
          "url": {
            "type": "string",
            "description": "URL, на который необходимо выполнить запрос"
          }
        }
      },
      "VacancyTemplates": {
        "title": "Шаблон",
        "type": "object",
        "required": [
          "id",
          "name",
          "quick",
          "url"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "Идентификатор шаблона"
          },
          "name": {
            "type": "string",
            "description": "Название шаблона"
          },
          "url": {
            "type": "string",
            "description": "Ссылка на шаблон"
          }
        }
      },
      "VacancyArguments": {
        "title": "Аргумент для запроса",
        "type": "object",
        "required": [
          "id",
          "required",
          "required_arguments"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "Идентификатор аргумента. Возможные значения:\n\n* `resume_id` — идентификатор резюме.\n* `vacancy_id` — идентификатор вакансии.\n* `message` — сообщение, которое будет отправлено соискателю на электронную почту. Используйте [шаблоны](#tag/Otklikipriglasheniya-rabotodatelya/operation/get-mail-templates) для получения текстов.\n* `send_sms` — уведомлять ли соискателя о приглашении с помощью SMS. Значение по умолчанию — `false`. Обратите внимание: в SMS-сообщении используется стандартный текст, изменить его нельзя\n* `address_id` — идентификатор [адреса](#tag/Adresa-rabotodatelya), который будет указан в приглашении\n",
            "enum": [
              "resume_id",
              "vacancy_id",
              "message",
              "send_sms",
              "address_id"
            ]
          },
          "required": {
            "type": "boolean",
            "description": "Обязательность аргумента"
          },
          "required_arguments": {
            "type": "array",
            "description": "Идентификаторы аргументов, которые необходимо приложить, если указан данный аргумент. Например, адрес является необязательным, но при его указании необходимо указать также и сообщение",
            "items": {
              "$ref": "#/components/schemas/_IncludesId"
            }
          }
        }
      },
      "SkillVerificationsTestResultWithUrl": {
        "title": "Информация о результате теста со ссылками",
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/SkillVerificationsTestResultNano"
          },
          {
            "type": "object",
            "required": [
              "url",
              "alternate_url"
            ],
            "properties": {
              "alternate_url": {
                "type": "string",
                "description": "Ссылка на результат теста на сайте"
              },
              "url": {
                "type": "string",
                "description": "Ссылка на результат теста"
              }
            }
          }
        ]
      },
      "SkillVerificationsTestResultNano": {
        "title": "Краткая информация о результате теста",
        "type": "object",
        "description": "Краткая информация о результате теста",
        "required": [
          "score",
          "type"
        ],
        "properties": {
          "mark": {
            "type": "string",
            "description": "Дифференцированная оценка за тест:\n\n* `UNFAIR` — от 0 до 14 баллов;\n* `FAIR` — от 15 до 44 баллов;\n* `GOOD` — от 45 до 79 баллов;\n* `EXCELLENT` — от 80 до 100 баллов\n",
            "enum": [
              "UNFAIR",
              "FAIR",
              "GOOD",
              "EXCELLENT"
            ]
          },
          "score": {
            "type": "integer",
            "description": "Результат прохождения теста в баллах (от 0 до 100)"
          }
        }
      },
      "EmployersEmployersState": {
        "title": "Информация о состоянии",
        "type": "object",
        "required": [
          "id",
          "name"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "Идентификатор состояния отклика"
          },
          "name": {
            "type": "string",
            "description": "Название состояния"
          }
        }
      },
      "NegotiationsObjectsEmployerTopicResume": {
        "title": "Короткое представление резюме",
        "allOf": [
          {
            "$ref": "#/components/schemas/ResumeResumeShort"
          },
          {
            "$ref": "#/components/schemas/_IncludesUrl"
          },
          {
            "type": "object",
            "properties": {
              "job_search_status": {
                "description": "Для получения данных нужно передать параметр `with_job_search_status=true`. \nВозможные значения перечислены в поле `job_search_statuses_employer` в [справочнике полей](#tag/Obshie-spravochniki/operation/get-dictionaries)\n",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/_IncludesIdNameLastChangeTime"
                  }
                ]
              }
            }
          }
        ]
      },
      "_IncludesIdNameLastChangeTime": {
        "title": "Объект с идентификатором, названием и временем последнего изменения",
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/_IncludesIdName"
          },
          {
            "type": "object",
            "properties": {
              "last_change_time": {
                "type": "string",
                "description": "Время последнего изменения"
              }
            }
          }
        ]
      },
      "ResumeResumeShort": {
        "title": "Сокращенное представление резюме",
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/ResumeResumeProfile"
          },
          {
            "$ref": "#/components/schemas/ResumeResumeShortAdditionalFields"
          }
        ]
      },
      "ResumeResumeShortAdditionalFields": {
        "title": "Дополнительные поля сокращенного представления резюме",
        "type": "object",
        "required": [
          "owner",
          "negotiations_history",
          "favorited",
          "viewed",
          "actions"
        ],
        "properties": {
          "actions": {
            "type": "object",
            "description": "Дополнительные действия",
            "allOf": [
              {
                "$ref": "#/components/schemas/ResumeObjectsActions"
              }
            ]
          },
          "favorited": {
            "type": "boolean",
            "description": "Добавлено ли резюме в избранные"
          },
          "marked": {
            "type": "boolean",
            "description": "Выделено ли резюме в поиске"
          },
          "negotiations_history": {
            "type": "object",
            "description": "Краткая история откликов/приглашений по резюме",
            "allOf": [
              {
                "$ref": "#/components/schemas/ResumeObjectsNegotiationsHistoryUrl"
              }
            ]
          },
          "owner": {
            "type": "object",
            "description": "Информация о владельце резюме",
            "allOf": [
              {
                "$ref": "#/components/schemas/ResumeObjectsOwner"
              }
            ]
          },
          "photo": {
            "type": "object",
            "description": "Фотография пользователя",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ResumeObjectsPhoto"
              },
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              }
            ]
          },
          "tags": {
            "type": "array",
            "description": "Теги к резюме",
            "items": {
              "$ref": "#/components/schemas/_IncludesId"
            }
          },
          "viewed": {
            "type": "boolean",
            "description": "Было ли резюме уже просмотрено работодателем"
          }
        }
      },
      "ResumeObjectsNegotiationsHistoryUrl": {
        "title": "История откликов/приглашений",
        "type": "object",
        "required": [
          "url"
        ],
        "properties": {
          "url": {
            "type": "string",
            "description": "URL, на который необходимо сделать GET-запрос, чтобы получить [подробную историю откликов/приглашений](#tag/Otklikipriglasheniya-rabotodatelya/operation/get-resume-negotiations-history) по данному резюме"
          }
        }
      },
      "ResumeObjectsPhoto": {
        "title": "Фотография",
        "type": "object",
        "description": "Значение может быть `null`, если у работодателя отсутствует брендирование страницы",
        "nullable": true,
        "allOf": [
          {
            "$ref": "#/components/schemas/ResumeObjectsPhotoNoId"
          },
          {
            "$ref": "#/components/schemas/_IncludesId"
          }
        ]
      },
      "ResumeObjectsPhotoNoId": {
        "title": "Фотография пользователя",
        "type": "object",
        "required": [
          "small",
          "medium"
        ],
        "properties": {
          "40": {
            "type": "string",
            "description": "URL изображения размером 40x40 пикселей. Изображение по данному URL доступно ограниченное время после получения ответа. Приложение должно быть готово к тому, что на запрос изображения вернется ошибка `404 Not Found`",
            "deprecated": true,
            "nullable": true
          },
          "100": {
            "type": "string",
            "description": "URL изображения размером 100x100 пикселей. Изображение по данному URL доступно ограниченное время после получения ответа. Приложение должно быть готово к тому, что на запрос изображения вернется ошибка `404 Not Found`",
            "deprecated": true,
            "nullable": true
          },
          "500": {
            "type": "string",
            "description": "URL изображения размером 500x500 пикселей. Изображение по данному URL доступно ограниченное время после получения ответа. Приложение должно быть готово к тому, что на запрос изображения вернется ошибка `404 Not Found`",
            "deprecated": true,
            "nullable": true
          },
          "medium": {
            "type": "string",
            "description": "URL среднего по размеру изображения. Изображение по данному URL доступно ограниченное время после получения ответа. Приложение должно быть готово к тому, что на запрос изображения вернется ошибка `404 Not Found`"
          },
          "small": {
            "type": "string",
            "description": "URL уменьшенного изображения. Изображение по данному URL доступно ограниченное время после получения ответа. Приложение должно быть готово к тому, что на запрос изображения вернется ошибка `404 Not Found`"
          }
        }
      },
      "ResumeObjectsActions": {
        "title": "Действия с резюме",
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/ResumeObjectsActionsForOwner"
          },
          {
            "type": "object",
            "properties": {
              "download_with_contact": {
                "$ref": "#/components/schemas/ResumeObjectsOneOfDownloadOrNullableObject"
              },
              "get_with_contact": {
                "$ref": "#/components/schemas/ResumeObjectsOneOfUrlOrNullableObject"
              }
            }
          }
        ]
      },
      "ResumeObjectsOneOfUrlOrNullableObject": {
        "title": "Ссылка для получения резюме с контактами",
        "type": "object",
        "description": "Ссылка для получения резюме с контактами (происходит трата услуги). По ссылке возвращается объект аналогичный [просмотру резюме](#tag/Prosmotr-rezyume/operation/get-resume). Отображается, если у работодателя есть подходящая оплаченная услуга открытия контактов и контакты резюме еще не открыты\n",
        "nullable": true,
        "oneOf": [
          {
            "$ref": "#/components/schemas/_IncludesUrl"
          },
          {
            "$ref": "#/components/schemas/_IncludesNullableObject"
          }
        ]
      },
      "ResumeObjectsOneOfDownloadOrNullableObject": {
        "title": "Ссылки для скачивания резюме с контактами",
        "type": "object",
        "description": "Ссылки для скачивания резюме с контактами (происходит трата услуги) в нескольких форматах ([подробнее](https://github.com/hhru/api/blob/master/docs/employer_resumes.md#download-links)). Отображаются, если у работодателя есть подходящая оплаченная услуга открытия контактов и контакты резюме еще не открыты\n",
        "nullable": true,
        "oneOf": [
          {
            "$ref": "#/components/schemas/ResumeObjectsDownload"
          },
          {
            "$ref": "#/components/schemas/_IncludesNullableObject"
          }
        ]
      },
      "ResumeObjectsOwner": {
        "title": "Владелец резюме",
        "type": "object",
        "required": [
          "id",
          "comments"
        ],
        "properties": {
          "comments": {
            "type": "object",
            "description": "Раздел [Комментарии к владельцу резюме](#tag/Kommentarii-k-soiskatelyu/operation/get-applicant-comments-list)",
            "allOf": [
              {
                "$ref": "#/components/schemas/ResumeObjectsOwnerComments"
              }
            ]
          },
          "id": {
            "type": "string",
            "description": "Идентификатор владельца резюме"
          }
        }
      },
      "ResumeObjectsOwnerComments": {
        "title": "Комментарии о владельце резюме",
        "type": "object",
        "required": [
          "url",
          "counters"
        ],
        "properties": {
          "counters": {
            "type": "object",
            "description": "Информация о количестве комментариев",
            "allOf": [
              {
                "$ref": "#/components/schemas/ResumeObjectsOwnerCommentsCounters"
              }
            ]
          },
          "url": {
            "type": "string",
            "description": "URL, на который нужно сделать GET-запрос, чтобы получить список комментариев"
          }
        }
      },
      "ResumeObjectsOwnerCommentsCounters": {
        "title": "Количество комментариев",
        "type": "object",
        "required": [
          "total"
        ],
        "properties": {
          "total": {
            "type": "number",
            "description": "Общее количество комментариев"
          }
        }
      },
      "ResumeResumeProfile": {
        "title": "Сокращенное представление резюме",
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/ResumeResumeNano"
          },
          {
            "type": "object",
            "required": [
              "created_at",
              "updated_at",
              "certificate",
              "education",
              "experience",
              "download",
              "hidden_fields"
            ],
            "properties": {
              "age": {
                "type": "number",
                "description": "Возраст",
                "nullable": true
              },
              "area": {
                "$ref": "#/components/schemas/ResumeObjectsArea"
              },
              "can_view_full_info": {
                "type": "boolean",
                "description": "Доступен ли просмотр контактной информации в резюме текущему работодателю",
                "nullable": true
              },
              "certificate": {
                "type": "array",
                "description": "Список сертификатов соискателя",
                "items": {
                  "$ref": "#/components/schemas/ResumeObjectsCertificate"
                }
              },
              "created_at": {
                "type": "string",
                "description": "Дата и время создания резюме"
              },
              "download": {
                "type": "object",
                "description": "Ссылки для скачивания резюме в разных форматах",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ResumeObjectsDownload"
                  }
                ]
              },
              "education": {
                "type": "object",
                "description": "Образование соискателя. \n\nОсобенности сохранения образования:\n\n* Если передать и высшее и среднее образование и уровень образования \"средний\", то сохранится только среднее образование.\n* Если передать и высшее и среднее образование и уровень образования \"высшее\", то сохранится только высшее образование\n",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ResumeObjectsEducation"
                  }
                ]
              },
              "experience": {
                "type": "array",
                "description": "Опыт работы",
                "items": {
                  "$ref": "#/components/schemas/ResumeObjectsExperienceProperties"
                }
              },
              "first_name": {
                "type": "string",
                "description": "Имя",
                "nullable": true
              },
              "gender": {
                "$ref": "#/components/schemas/ResumeObjectsGender"
              },
              "hidden_fields": {
                "type": "array",
                "description": "Справочник [Список скрытых полей](https://github.com/hhru/api/blob/master/docs/employer_resumes.md#hidden-fields). Возможные значения элементов приведены в поле `resume_hidden_fields` [справочника полей](#tag/Obshie-spravochniki/operation/get-dictionaries)",
                "items": {
                  "$ref": "#/components/schemas/_IncludesIdName"
                }
              },
              "last_name": {
                "type": "string",
                "description": "Фамилия",
                "nullable": true
              },
              "marked": {
                "type": "boolean",
                "description": "Выделено ли резюме в поиске",
                "default": "false"
              },
              "middle_name": {
                "type": "string",
                "description": "Отчество",
                "nullable": true
              },
              "platform": {
                "type": "object",
                "description": "Ресурс, на котором было размещено резюме",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/_IncludesId"
                  }
                ]
              },
              "salary": {
                "$ref": "#/components/schemas/ResumeObjectsSalaryProperties"
              },
              "total_experience": {
                "$ref": "#/components/schemas/ResumeObjectsTotalExperience"
              },
              "updated_at": {
                "type": "string",
                "description": "Дата и время обновления резюме"
              }
            }
          }
        ]
      },
      "ResumeObjectsExperience": {
        "title": "Опыт работы в организации",
        "required": [
          "start",
          "position",
          "industries"
        ],
        "allOf": [
          {
            "$ref": "#/components/schemas/ResumeObjectsExperienceProperties"
          }
        ]
      },
      "ResumeObjectsExperienceProperties": {
        "title": "Опыт работы в организации",
        "type": "object",
        "properties": {
          "area": {
            "type": "object",
            "description": "Регион расположения организации. Элемент [справочника регионов](#tag/Obshie-spravochniki/operation/get-areas)",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/_IncludesIdNameUrl"
              },
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              }
            ]
          },
          "company": {
            "type": "string",
            "description": "Название организации",
            "nullable": true
          },
          "company_id": {
            "type": "string",
            "description": "Уникальный идентификатор организации",
            "nullable": true
          },
          "company_url": {
            "type": "string",
            "description": "Сайт компании",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "Обязанности, функции, достижения",
            "nullable": true
          },
          "employer": {
            "type": "object",
            "description": "Работодатель",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/EmployersEmployerInfoShort"
              },
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              }
            ]
          },
          "end": {
            "type": "string",
            "description": "Окончание работы (дата в формате `ГГГГ-ММ-ДД`)",
            "nullable": true
          },
          "industries": {
            "type": "array",
            "description": "Список отраслей компании. Возможные значения приведены в [справочнике индустрий](#tag/Obshie-spravochniki/operation/get-industries)",
            "items": {
              "$ref": "#/components/schemas/_IncludesIdName"
            }
          },
          "industry": {
            "type": "object",
            "description": "Отрасль компании",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ResumeObjectsIndustry"
              },
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              }
            ]
          },
          "position": {
            "type": "string",
            "description": "Должность"
          },
          "start": {
            "type": "string",
            "description": "Начало работы (дата в формате `ГГГГ-ММ-ДД`)"
          }
        }
      },
      "ResumeObjectsArea": {
        "title": "Город",
        "type": "object",
        "description": "Город проживания. Элемент справочника [areas](#tag/Obshie-spravochniki/operation/get-areas)",
        "nullable": true,
        "oneOf": [
          {
            "$ref": "#/components/schemas/_IncludesIdNameUrl"
          },
          {
            "$ref": "#/components/schemas/_IncludesNullableObject"
          }
        ]
      },
      "ResumeObjectsGender": {
        "title": "Пол соискателя",
        "type": "object",
        "description": "Пол соискателя. Возможные значения перечислены в поле `gender` [справочника полей](#tag/Obshie-spravochniki/operation/get-dictionaries)",
        "nullable": true,
        "oneOf": [
          {
            "$ref": "#/components/schemas/_IncludesIdName"
          },
          {
            "$ref": "#/components/schemas/_IncludesNullableObject"
          }
        ]
      },
      "EmployerAddressesEmployerAddressItemResponse": {
        "title": "Успешный ответ",
        "example": {
          "$ref": "#/components/examples/EmployerAddressItem/value"
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/EmployerAddressesEmployerAddressItem"
          }
        ]
      },
      "ErrorsCommonBadRequestBadArgumentBadRequestAndBadArgumentErrors": {
        "title": "Ошибка параметров запроса",
        "oneOf": [
          {
            "$ref": "#/components/schemas/ErrorsCommonBadArgumentErrors"
          },
          {
            "$ref": "#/components/schemas/ErrorsCommonBadRequestErrors"
          }
        ]
      },
      "ErrorsCommonBadRequestErrors": {
        "title": "Ошибка в теле запроса",
        "description": "Информация о возникших ошибках",
        "allOf": [
          {
            "$ref": "#/components/schemas/ErrorsCommonErrorRequestId"
          },
          {
            "type": "object",
            "required": [
              "errors"
            ],
            "properties": {
              "errors": {
                "type": "array",
                "description": "Массив с данными ошибок",
                "minItems": 1,
                "items": {
                  "$ref": "#/components/schemas/ErrorsCommonBadRequestError"
                }
              }
            }
          }
        ]
      },
      "ErrorsCommonBadRequestError": {
        "title": "Общая ошибка",
        "type": "object",
        "additionalProperties": false,
        "required": [
          "type"
        ],
        "properties": {
          "type": {
            "type": "string",
            "description": "Текстовый идентификатор типа ошибки",
            "example": "bad_request",
            "enum": [
              "bad_request"
            ]
          }
        }
      },
      "ErrorsCommonBadArgumentErrors": {
        "title": "Ошибки в параметрах запроса",
        "description": "Информация о возникших ошибках",
        "allOf": [
          {
            "$ref": "#/components/schemas/ErrorsCommonErrorRequestId"
          },
          {
            "type": "object",
            "required": [
              "errors"
            ],
            "properties": {
              "errors": {
                "type": "array",
                "description": "Массив с данными ошибок",
                "minItems": 1,
                "items": {
                  "$ref": "#/components/schemas/ErrorsCommonBadArgumentError"
                }
              }
            }
          }
        ]
      },
      "ErrorsCommonBadArgumentError": {
        "title": "Ошибка в параметре запроса",
        "type": "object",
        "additionalProperties": false,
        "required": [
          "type"
        ],
        "properties": {
          "reason": {
            "type": "string",
            "description": "Причина ошибки. Возможные значения:\n  * `too_long_value` — слишком длинное значение\n  * `too_many_arguments` — слишком много аргументов\n  * `invalid` — значение введено некорректно\n",
            "example": "too_long_value"
          },
          "type": {
            "type": "string",
            "description": "Текстовый идентификатор типа ошибки",
            "example": "bad_argument",
            "enum": [
              "bad_argument"
            ]
          },
          "value": {
            "type": "string",
            "description": "Название поля с ошибкой\n",
            "example": "resume_id"
          }
        }
      },
      "EmployerServicesMethodAccess": {
        "title": "Перечень групп с доступом к платным методам",
        "required": [
          "items"
        ],
        "properties": {
          "items": {
            "title": "Перечень групп с доступом к платным методам",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EmployerServicesMethodAccessItem"
            }
          }
        }
      },
      "EmployerServicesMethodAccessItem": {
        "title": "Группа методов",
        "required": [
          "id",
          "description",
          "access"
        ],
        "properties": {
          "access": {
            "type": "object",
            "description": "Информация о доступе к платному методу",
            "required": [
              "has_access"
            ],
            "properties": {
              "has_access": {
                "type": "boolean",
                "description": "Признак наличия доступа к группе методов"
              }
            }
          },
          "description": {
            "type": "string",
            "description": "Описание группы методов"
          },
          "id": {
            "type": "string",
            "description": "Идентификатор группы методов"
          }
        }
      },
      "ErrorsEmployerAddressErrors": {
        "title": "Ошибки в параметрах запроса",
        "description": "Информация о возникших ошибках",
        "allOf": [
          {
            "$ref": "#/components/schemas/ErrorsCommonErrorRequestId"
          },
          {
            "type": "object",
            "required": [
              "errors"
            ],
            "properties": {
              "errors": {
                "type": "array",
                "description": "Массив с данными ошибок",
                "minItems": 1,
                "items": {
                  "$ref": "#/components/schemas/ErrorsEmployerAddressError"
                }
              }
            }
          }
        ]
      },
      "ErrorsEmployerAddressError": {
        "title": "Ошибка в параметре запроса",
        "type": "object",
        "additionalProperties": false,
        "required": [
          "type"
        ],
        "properties": {
          "reason": {
            "type": "string",
            "description": "Причина ошибки. Описание:\n* `too_early` - Отступ по времени от текущей даты слишком большой.\n* `must_be_a_valid_ISO_8601_date-time_string` - Дата-время указаны в неверном формате\n",
            "example": "must_be_a_valid_ISO_8601_date"
          },
          "type": {
            "type": "string",
            "description": "Текстовый идентификатор типа ошибки",
            "example": "bad_argument",
            "enum": [
              "bad_argument",
              "bad_request"
            ]
          },
          "value": {
            "type": "string",
            "description": "Название поля с ошибкой",
            "example": "changed_after"
          }
        }
      },
      "EmployerManagersAddEmployerManager": {
        "title": "Информация о новом менеджере",
        "required": [
          "manager_type",
          "email",
          "position",
          "first_name",
          "last_name",
          "is_main_contact_person",
          "phone",
          "area"
        ],
        "properties": {
          "additional_phone": {
            "description": "Дополнительный телефон менеджера",
            "allOf": [
              {
                "$ref": "#/components/schemas/EmployerManagersPhone"
              },
              {
                "type": "object"
              }
            ]
          },
          "area": {
            "$ref": "#/components/schemas/EmployerManagersAreaId"
          },
          "email": {
            "type": "string",
            "description": "Адрес электронной почты менеджера"
          },
          "first_name": {
            "type": "string",
            "description": "Имя менеджера"
          },
          "is_main_contact_person": {
            "type": "boolean",
            "description": "Является ли менеджер основным контактным лицом"
          },
          "last_name": {
            "type": "string",
            "description": "Фамилия менеджера"
          },
          "manager_type": {
            "$ref": "#/components/schemas/EmployerManagersManagerTypeId"
          },
          "middle_name": {
            "type": "string",
            "description": "Отчество менеджера"
          },
          "permissions": {
            "type": "array",
            "description": "Список [прав менеджера](#tag/Menedzhery-rabotodatelya/operation/get-employer-manager-types)",
            "items": {
              "$ref": "#/components/schemas/EmployerManagersPermissions"
            }
          },
          "phone": {
            "description": "Основной телефон менеджера",
            "allOf": [
              {
                "$ref": "#/components/schemas/EmployerManagersPhone"
              },
              {
                "type": "object"
              }
            ]
          },
          "position": {
            "type": "string",
            "description": "Должность менеджера"
          }
        }
      },
      "EmployerManagersManagerTypeId": {
        "title": "Тип менеджера",
        "required": [
          "id"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "Идентификатор [типа менеджера](#tag/Menedzhery-rabotodatelya/operation/get-employer-manager-types)"
          }
        }
      },
      "EmployerManagersAreaId": {
        "title": "Регион",
        "required": [
          "id"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "Идентификатор региона из [справочника](#tag/Obshie-spravochniki/operation/get-areas)"
          }
        }
      },
      "EmployerManagersPermissions": {
        "title": "Права доступа",
        "required": [
          "id"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "Идентификатор права"
          }
        }
      },
      "ResumeShouldSendSmsContainer": {
        "title": "Информация о телефоне",
        "type": "object",
        "required": [
          "phone"
        ],
        "properties": {
          "phone": {
            "description": "Информация о телефоне",
            "$ref": "#/components/schemas/ResumeShouldSendSmsPhone"
          }
        }
      },
      "ResumeShouldSendSmsPhone": {
        "title": "Информация о телефоне соискателя",
        "type": "object",
        "description": "Информация о телефоне соискателя",
        "required": [
          "country",
          "city",
          "number",
          "formatted",
          "verified",
          "need_verification",
          "restricted_country"
        ],
        "properties": {
          "city": {
            "type": "string",
            "description": "Префикс города номера телефона",
            "example": "929"
          },
          "country": {
            "type": "string",
            "description": "Префикс страны номера телефона",
            "example": "7"
          },
          "formatted": {
            "type": "string",
            "description": "Номер телефона отформатированный",
            "example": "+7 (929) 667-21-67"
          },
          "need_verification": {
            "type": "boolean",
            "description": "Нужно ли верифицировать номер телефона",
            "example": "false"
          },
          "number": {
            "type": "string",
            "description": "Номер телефона без префиксов",
            "example": "6672167"
          },
          "restricted_country": {
            "type": "boolean",
            "description": "Находится ли номер телефона в черном списке по отправке смс",
            "example": "false"
          },
          "verified": {
            "type": "boolean",
            "description": "Верифицирован ли номер телефона пользователем",
            "example": "true"
          }
        }
      },
      "ResumesResumeConditions": {
        "title": "Условия заполнения полей резюме",
        "type": "object",
        "description": "Условия заполнения полей резюме.\n\nПоле, представленное объектом с полями (`fields`), само по себе может не являться необходимым, но если заполнено хотя бы одно поле объекта, необходимо заполнить и другие его поля. Пример — желаемая зарплата (`salary`) может быть не указана, но если указана сумма, то необходимо указать и валюту\n",
        "properties": {
          "access": {
            "type": "object",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              },
              {
                "$ref": "#/components/schemas/ResumesResumeConditionFieldsAccessCondition"
              }
            ]
          },
          "area": {
            "type": "object",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              },
              {
                "$ref": "#/components/schemas/ResumesResumeConditionFieldsRequiredWithTitle"
              }
            ]
          },
          "auto_hide_time": {
            "type": "object",
            "description": "Поле доступно для просмотра и редактирования только для пользователей rabota.by",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              },
              {
                "$ref": "#/components/schemas/ResumesResumeConditionFieldsRequiredWithTitle"
              }
            ]
          },
          "birth_date": {
            "type": "object",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              },
              {
                "$ref": "#/components/schemas/ResumesResumeConditionFieldsRequiredDateWithTitle"
              }
            ]
          },
          "business_trip_readiness": {
            "type": "object",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              },
              {
                "$ref": "#/components/schemas/ResumesResumeConditionFieldsRequiredWithTitle"
              }
            ]
          },
          "citizenship": {
            "type": "object",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              },
              {
                "$ref": "#/components/schemas/ResumesResumeConditionFieldsRequiredCountWithTitle"
              }
            ]
          },
          "contact": {
            "type": "object",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              },
              {
                "$ref": "#/components/schemas/ResumesResumeConditionFieldsContactCondition"
              }
            ]
          },
          "district": {
            "type": "object",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              },
              {
                "$ref": "#/components/schemas/ResumesResumeConditionFieldsRequiredWithTitle"
              }
            ]
          },
          "driver_license_types": {
            "type": "object",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              },
              {
                "$ref": "#/components/schemas/ResumesResumeConditionFieldsRequiredCountWithTitle"
              }
            ]
          },
          "education": {
            "type": "object",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              },
              {
                "$ref": "#/components/schemas/ResumesResumeConditionFieldsEducationCondition"
              }
            ]
          },
          "employment": {
            "type": "object",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              },
              {
                "$ref": "#/components/schemas/ResumesResumeConditionFieldsRequiredWithTitle"
              }
            ]
          },
          "employments": {
            "type": "object",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              },
              {
                "$ref": "#/components/schemas/ResumesResumeConditionFieldsRequiredCountWithTitle"
              }
            ]
          },
          "experience": {
            "type": "object",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              },
              {
                "$ref": "#/components/schemas/ResumesResumeConditionFieldsExperienceCondition"
              }
            ]
          },
          "first_name": {
            "type": "object",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              },
              {
                "$ref": "#/components/schemas/ResumesResumeConditionFieldsRequiredLengthTitleRegexp"
              }
            ]
          },
          "gender": {
            "type": "object",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              },
              {
                "$ref": "#/components/schemas/ResumesResumeConditionFieldsRequiredWithTitle"
              }
            ]
          },
          "has_vehicle": {
            "type": "object",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              },
              {
                "$ref": "#/components/schemas/ResumesResumeConditionFieldsRequiredWithTitle"
              }
            ]
          },
          "hidden_fields": {
            "type": "object",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              },
              {
                "$ref": "#/components/schemas/ResumesResumeConditionFieldsRequiredCountWithTitle"
              }
            ]
          },
          "language": {
            "type": "object",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              },
              {
                "$ref": "#/components/schemas/ResumesResumeConditionFieldsLanguageCondition"
              }
            ]
          },
          "last_name": {
            "type": "object",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              },
              {
                "$ref": "#/components/schemas/ResumesResumeConditionFieldsRequiredLengthTitleRegexp"
              }
            ]
          },
          "metro": {
            "type": "object",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              },
              {
                "$ref": "#/components/schemas/ResumesResumeConditionFieldsRequiredWithTitle"
              }
            ]
          },
          "middle_name": {
            "type": "object",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              },
              {
                "$ref": "#/components/schemas/ResumesResumeConditionFieldsRequiredLengthTitleRegexp"
              }
            ]
          },
          "photo": {
            "type": "object",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              },
              {
                "$ref": "#/components/schemas/ResumesResumeConditionFieldsRequiredWithTitle"
              }
            ]
          },
          "portfolio": {
            "type": "object",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              },
              {
                "$ref": "#/components/schemas/ResumesResumeConditionFieldsRequiredCountWithTitle"
              }
            ]
          },
          "professional_roles": {
            "type": "object",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              },
              {
                "$ref": "#/components/schemas/ResumesResumeConditionFieldsRequiredCountWithTitle"
              }
            ]
          },
          "recommendation": {
            "type": "object",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              },
              {
                "$ref": "#/components/schemas/ResumesResumeConditionFieldsRecommendationCondition"
              }
            ]
          },
          "relocation": {
            "type": "object",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              },
              {
                "$ref": "#/components/schemas/ResumesResumeConditionFieldsRelocationCondition"
              }
            ]
          },
          "resume_locale": {
            "type": "object",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              },
              {
                "$ref": "#/components/schemas/ResumesResumeConditionFieldsRequiredWithTitle"
              }
            ]
          },
          "salary": {
            "type": "object",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              },
              {
                "$ref": "#/components/schemas/ResumesResumeConditionFieldsSalaryCondition"
              }
            ]
          },
          "schedule": {
            "type": "object",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              },
              {
                "$ref": "#/components/schemas/ResumesResumeConditionFieldsRequiredWithTitle"
              }
            ]
          },
          "schedules": {
            "type": "object",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              },
              {
                "$ref": "#/components/schemas/ResumesResumeConditionFieldsRequiredCountWithTitle"
              }
            ]
          },
          "site": {
            "type": "object",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              },
              {
                "$ref": "#/components/schemas/ResumesResumeConditionFieldsSiteCondition"
              }
            ]
          },
          "skill_set": {
            "type": "object",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              },
              {
                "$ref": "#/components/schemas/ResumesResumeConditionFieldsRequiredCountAndLengthTitle"
              }
            ]
          },
          "skills": {
            "type": "object",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              },
              {
                "$ref": "#/components/schemas/ResumesResumeConditionFieldsRequiredLengthWithTitle"
              }
            ]
          },
          "specialization": {
            "type": "object",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              },
              {
                "$ref": "#/components/schemas/ResumesResumeConditionFieldsRequiredCountWithTitle"
              }
            ]
          },
          "title": {
            "type": "object",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              },
              {
                "$ref": "#/components/schemas/ResumesResumeConditionFieldsRequiredLengthTitleNotInt"
              }
            ]
          },
          "travel_time": {
            "type": "object",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              },
              {
                "$ref": "#/components/schemas/ResumesResumeConditionFieldsRequiredWithTitle"
              }
            ]
          },
          "work_ticket": {
            "type": "object",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              },
              {
                "$ref": "#/components/schemas/ResumesResumeConditionFieldsRequiredCountWithTitle"
              }
            ]
          }
        }
      },
      "ResumesResumeConditionFieldsLanguageCondition": {
        "title": "Условия для полей",
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/ResumesResumeConditionFieldsRequiredCountWithTitle"
          },
          {
            "type": "object",
            "properties": {
              "fields": {
                "$ref": "#/components/schemas/ResumesResumeConditionFieldsLanguageFields"
              }
            }
          }
        ]
      },
      "ResumesResumeConditionFieldsRequiredCountWithTitle": {
        "title": "Условия для поля",
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/ResumesResumeConditionFieldsMaxMinCount"
          },
          {
            "$ref": "#/components/schemas/ResumesResumeConditionFieldsRequired"
          }
        ]
      },
      "ResumesResumeConditionFieldsRequired": {
        "title": "Необходимость поля резюме",
        "type": "object",
        "properties": {
          "required": {
            "type": "boolean",
            "description": "Является ли поле необходимым? Для строковых значений поле не должно быть `null` или `\"\"`",
            "nullable": true
          }
        }
      },
      "ResumesResumeConditionFieldsMaxMinCount": {
        "title": "Условия по количеству полей",
        "type": "object",
        "properties": {
          "max_count": {
            "type": "number",
            "description": "Максимальное количество объектов для полей, в которых передается список. Если `null` — количество неограниченно",
            "nullable": true
          },
          "min_count": {
            "type": "number",
            "description": "Минимальное количество объектов для полей,, где необходимо передавать список. Если `null` — нижняя граница не определена",
            "nullable": true
          }
        }
      },
      "ResumesResumeConditionFieldsLanguageFields": {
        "title": "Условия для полей",
        "type": "object",
        "nullable": true,
        "properties": {
          "id": {
            "type": "object",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              },
              {
                "$ref": "#/components/schemas/ResumesResumeConditionFieldsRequiredWithTitle"
              }
            ]
          },
          "level": {
            "type": "object",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              },
              {
                "$ref": "#/components/schemas/ResumesResumeConditionFieldsRequiredWithTitle"
              }
            ]
          }
        }
      },
      "ResumesResumeConditionFieldsRequiredWithTitle": {
        "title": "Условия для поля",
        "allOf": [
          {
            "title": "Условия для поля",
            "type": "object"
          },
          {
            "$ref": "#/components/schemas/ResumesResumeConditionFieldsRequired"
          }
        ]
      },
      "ResumesResumeConditionFieldsRequiredDateWithTitle": {
        "title": "Условия для поля",
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/ResumesResumeConditionFieldsMaxMinDate"
          },
          {
            "$ref": "#/components/schemas/ResumesResumeConditionFieldsRequired"
          }
        ]
      },
      "ResumesResumeConditionFieldsMaxMinDate": {
        "title": "Условия по диапазону дат",
        "type": "object",
        "properties": {
          "max_date": {
            "type": "string",
            "description": "Верхняя граница диапазона значений дат, включительно. Если `null` — верхняя граница даты не определена",
            "nullable": true
          },
          "min_date": {
            "type": "string",
            "description": "Нижняя граница диапазона значений дат, включительно. Если `null` — нижняя граница даты не определена",
            "nullable": true
          }
        }
      },
      "ResumesResumeConditionFieldsEducationCondition": {
        "title": "Условия для полей",
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/ResumesResumeConditionFieldsRequiredWithTitle"
          },
          {
            "type": "object",
            "properties": {
              "fields": {
                "$ref": "#/components/schemas/ResumesResumeConditionFieldsEducationFields"
              }
            }
          }
        ]
      },
      "ResumesResumeConditionFieldsEducationFields": {
        "title": "Условия для полей",
        "type": "object",
        "nullable": true,
        "properties": {
          "additional": {
            "type": "object",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              },
              {
                "$ref": "#/components/schemas/ResumesResumeConditionFieldsEducationPrimaryCondition"
              }
            ]
          },
          "attestation": {
            "type": "object",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              },
              {
                "$ref": "#/components/schemas/ResumesResumeConditionFieldsEducationPrimaryCondition"
              }
            ]
          },
          "elementary": {
            "type": "object",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              },
              {
                "$ref": "#/components/schemas/ResumesResumeConditionFieldsEducationElementaryCondition"
              }
            ]
          },
          "level": {
            "type": "object",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              },
              {
                "$ref": "#/components/schemas/ResumesResumeConditionFieldsRequiredWithTitle"
              }
            ]
          },
          "primary": {
            "type": "object",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              },
              {
                "$ref": "#/components/schemas/ResumesResumeConditionFieldsEducationPrimaryCondition"
              }
            ]
          }
        }
      },
      "ResumesResumeConditionFieldsEducationPrimaryCondition": {
        "title": "Условия для полей",
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/ResumesResumeConditionFieldsRequiredCountWithTitle"
          },
          {
            "properties": {
              "fields": {
                "$ref": "#/components/schemas/ResumesResumeConditionFieldsPrimaryEducationFields"
              }
            }
          }
        ]
      },
      "ResumesResumeConditionFieldsPrimaryEducationFields": {
        "title": "Условия для полей",
        "type": "object",
        "nullable": true,
        "properties": {
          "name": {
            "type": "object",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              },
              {
                "$ref": "#/components/schemas/ResumesResumeConditionFieldsRequiredLengthWithTitle"
              }
            ]
          },
          "organization": {
            "type": "object",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              },
              {
                "$ref": "#/components/schemas/ResumesResumeConditionFieldsRequiredLengthWithTitle"
              }
            ]
          },
          "result": {
            "type": "object",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              },
              {
                "$ref": "#/components/schemas/ResumesResumeConditionFieldsRequiredLengthWithTitle"
              }
            ]
          },
          "year": {
            "type": "object",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              },
              {
                "$ref": "#/components/schemas/ResumesResumeConditionFieldsRequiredValueWithTitle"
              }
            ]
          }
        }
      },
      "ResumesResumeConditionFieldsRequiredLengthWithTitle": {
        "title": "Условия для поля",
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/ResumesResumeConditionFieldsMaxMinLength"
          },
          {
            "$ref": "#/components/schemas/ResumesResumeConditionFieldsRequired"
          }
        ]
      },
      "ResumesResumeConditionFieldsMaxMinLength": {
        "title": "Условия по длине текстовых полей",
        "type": "object",
        "properties": {
          "max_length": {
            "type": "number",
            "description": "Максимальная длина для текстовых полей. Рассчитывается для текста без символов переноса строки (`\r\n`). `null` — если количество не ограничено",
            "nullable": true
          },
          "min_length": {
            "type": "number",
            "description": "Минимальная длина для текстовых полей. Рассчитывается для текста без символов переноса строки (`\r\n`). `null` — если количество не ограничено",
            "nullable": true
          }
        }
      },
      "ResumesResumeConditionFieldsRequiredValueWithTitle": {
        "title": "Условия для поля",
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/ResumesResumeConditionFieldsMaxMinValue"
          },
          {
            "$ref": "#/components/schemas/ResumesResumeConditionFieldsRequired"
          }
        ]
      },
      "ResumesResumeConditionFieldsMaxMinValue": {
        "title": "Условия по границам числовых значений",
        "type": "object",
        "properties": {
          "max_value": {
            "type": "number",
            "description": "Верхняя граница диапазона числовых значений, включительно. `null` — если верхняя граница не определена",
            "nullable": true
          },
          "min_value": {
            "type": "number",
            "description": "Нижняя граница диапазона числовых значений, включительно. `null` — если нижняя граница не определена",
            "nullable": true
          }
        }
      },
      "ResumesResumeConditionFieldsEducationElementaryCondition": {
        "title": "Условия для полей",
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/ResumesResumeConditionFieldsRequiredCountWithTitle"
          },
          {
            "properties": {
              "fields": {
                "$ref": "#/components/schemas/ResumesResumeConditionFieldsElementaryEducationFields"
              }
            }
          }
        ]
      },
      "ResumesResumeConditionFieldsElementaryEducationFields": {
        "title": "Условия для полей",
        "type": "object",
        "nullable": true,
        "properties": {
          "name": {
            "type": "object",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              },
              {
                "$ref": "#/components/schemas/ResumesResumeConditionFieldsRequiredLengthWithTitle"
              }
            ]
          },
          "year": {
            "type": "object",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              },
              {
                "$ref": "#/components/schemas/ResumesResumeConditionFieldsRequiredValueWithTitle"
              }
            ]
          }
        }
      },
      "ResumesResumeConditionFieldsContactCondition": {
        "title": "Условия для полей",
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/ResumesResumeConditionFieldsRequiredCountWithTitle"
          },
          {
            "type": "object",
            "properties": {
              "fields": {
                "$ref": "#/components/schemas/ResumesResumeConditionFieldsContactFields"
              }
            }
          }
        ]
      },
      "ResumesResumeConditionFieldsContactFields": {
        "title": "Условия для полей",
        "type": "object",
        "nullable": true,
        "properties": {
          "comment": {
            "type": "object",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              },
              {
                "$ref": "#/components/schemas/ResumesResumeConditionFieldsRequiredLengthWithTitle"
              }
            ]
          },
          "preferred": {
            "type": "object",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              },
              {
                "$ref": "#/components/schemas/ResumesResumeConditionFieldsRequiredWithTitle"
              }
            ]
          },
          "type": {
            "type": "object",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              },
              {
                "$ref": "#/components/schemas/ResumesResumeConditionFieldsRequiredWithTitle"
              }
            ]
          },
          "value": {
            "type": "object",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              },
              {
                "$ref": "#/components/schemas/ResumesResumeConditionFieldsRequiredWithTitle"
              }
            ]
          }
        }
      },
      "ResumesResumeConditionFieldsSiteCondition": {
        "title": "Условия для полей",
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/ResumesResumeConditionFieldsRequiredCountWithTitle"
          },
          {
            "type": "object",
            "properties": {
              "fields": {
                "$ref": "#/components/schemas/ResumesResumeConditionFieldsSiteFields"
              }
            }
          }
        ]
      },
      "ResumesResumeConditionFieldsSiteFields": {
        "title": "Условия для полей",
        "type": "object",
        "nullable": true,
        "properties": {
          "type": {
            "type": "object",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              },
              {
                "$ref": "#/components/schemas/ResumesResumeConditionFieldsRequiredWithTitle"
              }
            ]
          },
          "url": {
            "type": "object",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              },
              {
                "$ref": "#/components/schemas/ResumesResumeConditionFieldsRequiredLengthWithTitle"
              }
            ]
          }
        }
      },
      "ResumesResumeConditionFieldsSalaryCondition": {
        "title": "Условия для полей",
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/ResumesResumeConditionFieldsRequiredWithTitle"
          },
          {
            "type": "object",
            "properties": {
              "fields": {
                "$ref": "#/components/schemas/ResumesResumeConditionFieldsSalaryFields"
              }
            }
          }
        ]
      },
      "ResumesResumeConditionFieldsSalaryFields": {
        "title": "Условия для полей",
        "type": "object",
        "nullable": true,
        "properties": {
          "amount": {
            "type": "object",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              },
              {
                "$ref": "#/components/schemas/ResumesResumeConditionFieldsRequiredValueWithTitle"
              }
            ]
          },
          "currency": {
            "type": "object",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              },
              {
                "$ref": "#/components/schemas/ResumesResumeConditionFieldsRequiredLengthWithTitle"
              }
            ]
          }
        }
      },
      "ResumesResumeConditionFieldsRequiredLengthTitleNotInt": {
        "title": "Условия для полей",
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/ResumesResumeConditionFieldsRequiredLengthWithTitle"
          },
          {
            "$ref": "#/components/schemas/ResumesResumeConditionFieldsNotIn"
          }
        ]
      },
      "ResumesResumeConditionFieldsNotIn": {
        "title": "Недопустимые значения",
        "type": "object",
        "properties": {
          "not_in": {
            "type": "array",
            "description": "Список недопустимых значений",
            "nullable": true,
            "items": {
              "type": "string"
            }
          }
        }
      },
      "ResumesResumeConditionFieldsRequiredLengthTitleRegexp": {
        "title": "Условия для полей",
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/ResumesResumeConditionFieldsRequiredLengthWithTitle"
          },
          {
            "$ref": "#/components/schemas/ResumesResumeConditionFieldsRegexp"
          }
        ]
      },
      "ResumesResumeConditionFieldsRegexp": {
        "title": "Регулярные выражения для поля",
        "type": "object",
        "properties": {
          "regexp": {
            "type": "string",
            "description": "Регулярное выражение, которому должно отвечать значение поля",
            "nullable": true
          }
        }
      },
      "ResumesResumeConditionFieldsExperienceCondition": {
        "title": "Условия для полей",
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/ResumesResumeConditionFieldsRequiredCountWithTitle"
          },
          {
            "type": "object",
            "properties": {
              "fields": {
                "$ref": "#/components/schemas/ResumesResumeConditionFieldsExperienceFields"
              }
            }
          }
        ]
      },
      "ResumesResumeConditionFieldsExperienceFields": {
        "title": "Условия для полей",
        "type": "object",
        "nullable": true,
        "properties": {
          "area": {
            "type": "object",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              },
              {
                "$ref": "#/components/schemas/ResumesResumeConditionFieldsRequiredWithTitle"
              }
            ]
          },
          "company": {
            "type": "object",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              },
              {
                "$ref": "#/components/schemas/ResumesResumeConditionFieldsRequiredLengthWithTitle"
              }
            ]
          },
          "company_url": {
            "type": "object",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              },
              {
                "$ref": "#/components/schemas/ResumesResumeConditionFieldsRequiredLengthWithTitle"
              }
            ]
          },
          "description": {
            "type": "object",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              },
              {
                "$ref": "#/components/schemas/ResumesResumeConditionFieldsRequiredLengthWithTitle"
              }
            ]
          },
          "end": {
            "type": "object",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              },
              {
                "$ref": "#/components/schemas/ResumesResumeConditionFieldsRequiredDateWithTitle"
              }
            ]
          },
          "industries": {
            "type": "object",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              },
              {
                "$ref": "#/components/schemas/ResumesResumeConditionFieldsRequiredCountWithTitle"
              }
            ]
          },
          "industry": {
            "type": "object",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              },
              {
                "$ref": "#/components/schemas/ResumesResumeConditionFieldsRequiredWithTitle"
              }
            ]
          },
          "position": {
            "type": "object",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              },
              {
                "$ref": "#/components/schemas/ResumesResumeConditionFieldsRequiredLengthWithTitle"
              }
            ]
          },
          "start": {
            "type": "object",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              },
              {
                "$ref": "#/components/schemas/ResumesResumeConditionFieldsRequiredDateWithTitle"
              }
            ]
          }
        }
      },
      "ResumesResumeConditionFieldsRelocationCondition": {
        "title": "Условия для полей",
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/ResumesResumeConditionFieldsRequiredWithTitle"
          },
          {
            "type": "object",
            "properties": {
              "fields": {
                "$ref": "#/components/schemas/ResumesResumeConditionFieldsRelocationFields"
              }
            }
          }
        ]
      },
      "ResumesResumeConditionFieldsRelocationFields": {
        "title": "Условия для полей",
        "type": "object",
        "nullable": true,
        "properties": {
          "area": {
            "type": "object",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              },
              {
                "$ref": "#/components/schemas/ResumesResumeConditionFieldsRequiredCountWithTitle"
              }
            ]
          },
          "district": {
            "type": "object",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              },
              {
                "$ref": "#/components/schemas/ResumesResumeConditionFieldsRequiredCountWithTitle"
              }
            ]
          },
          "type": {
            "type": "object",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              },
              {
                "$ref": "#/components/schemas/ResumesResumeConditionFieldsRequiredWithTitle"
              }
            ]
          }
        }
      },
      "ResumesResumeConditionFieldsAccessCondition": {
        "title": "Условия для полей",
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/ResumesResumeConditionFieldsRequiredWithTitle"
          },
          {
            "type": "object",
            "properties": {
              "fields": {
                "$ref": "#/components/schemas/ResumesResumeConditionFieldsAccessFields"
              }
            }
          }
        ]
      },
      "ResumesResumeConditionFieldsAccessFields": {
        "title": "Условия для полей",
        "type": "object",
        "nullable": true,
        "properties": {
          "type": {
            "type": "object",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              },
              {
                "$ref": "#/components/schemas/ResumesResumeConditionFieldsRequiredWithTitle"
              }
            ]
          }
        }
      },
      "ResumesResumeConditionFieldsRecommendationCondition": {
        "title": "Условия для полей",
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/ResumesResumeConditionFieldsRequiredCountWithTitle"
          },
          {
            "type": "object",
            "properties": {
              "fields": {
                "$ref": "#/components/schemas/ResumesResumeConditionFieldsRecommendationFields"
              }
            }
          }
        ]
      },
      "ResumesResumeConditionFieldsRecommendationFields": {
        "title": "Условия для полей",
        "type": "object",
        "nullable": true,
        "properties": {
          "name": {
            "type": "object",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              },
              {
                "$ref": "#/components/schemas/ResumesResumeConditionFieldsRequiredLengthWithTitle"
              }
            ]
          },
          "organization": {
            "type": "object",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              },
              {
                "$ref": "#/components/schemas/ResumesResumeConditionFieldsRequiredLengthWithTitle"
              }
            ]
          },
          "position": {
            "type": "object",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              },
              {
                "$ref": "#/components/schemas/ResumesResumeConditionFieldsRequiredLengthWithTitle"
              }
            ]
          }
        }
      },
      "ResumesResumeConditionFieldsRequiredCountAndLengthTitle": {
        "title": "Условия для полей",
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/ResumesResumeConditionFieldsRequiredCountWithTitle"
          },
          {
            "$ref": "#/components/schemas/ResumesResumeConditionFieldsRequiredLengthWithTitle"
          }
        ]
      },
      "ErrorsNegotiationHideResponseTooEarlyErrors": {
        "title": "Ошибки",
        "anyOf": [
          {
            "$ref": "#/components/schemas/ErrorsNegotiationHideResponseErrors"
          }
        ]
      },
      "ErrorsNegotiationHideResponseErrors": {
        "title": "Oшибки при скрытии отклика",
        "description": "Информация о возникших ошибках",
        "allOf": [
          {
            "$ref": "#/components/schemas/ErrorsCommonErrorRequestId"
          },
          {
            "type": "object",
            "required": [
              "errors"
            ],
            "properties": {
              "errors": {
                "type": "array",
                "description": "Массив с данными ошибок",
                "minItems": 1,
                "items": {
                  "$ref": "#/components/schemas/ErrorsNegotiationHideResponseError"
                }
              }
            }
          }
        ]
      },
      "ErrorsNegotiationHideResponseError": {
        "title": "Ошибка",
        "type": "object",
        "additionalProperties": false,
        "required": [
          "type",
          "value"
        ],
        "properties": {
          "type": {
            "type": "string",
            "description": "Тип ошибки",
            "example": "negotiations",
            "enum": [
              "negotiations"
            ]
          },
          "value": {
            "type": "string",
            "description": "Причина ошибки:\n* `wrong_state` — действие по отклику/приглашению в данном статусе невозможно\n* `no_invitation` — переписка недоступна, так как в отклике ещё не было приглашения\n* `disabled_by_employer` — возможность переписки по отклику отключена работодателем\n* `chat_is_not_ready` — чат отклика/приглашения еще не готов\n",
            "example": "wrong_state",
            "enum": [
              "wrong_state",
              "no_invitation",
              "disabled_by_employer",
              "chat_is_not_ready"
            ]
          }
        }
      },
      "ApplicantCommentsApplicantCommentsList": {
        "title": "Успешный ответ",
        "allOf": [
          {
            "$ref": "#/components/schemas/ApplicantCommentsApplicantCommentItems"
          },
          {
            "$ref": "#/components/schemas/_IncludesPagination"
          }
        ]
      },
      "ApplicantCommentsApplicantCommentItems": {
        "title": "Коллекция со списком комментариев",
        "required": [
          "items"
        ],
        "properties": {
          "items": {
            "type": "array",
            "description": "Список комментариев",
            "items": {
              "$ref": "#/components/schemas/ApplicantCommentsApplicantCommentItem"
            }
          }
        }
      },
      "ApplicantCommentsApplicantCommentItem": {
        "title": "Комментарий",
        "required": [
          "author",
          "created_at",
          "id",
          "is_mine",
          "text",
          "access_type"
        ],
        "properties": {
          "access_type": {
            "description": "Тип доступа для комментария. Возможные значения перечислены [в справочнике](#tag/Obshie-spravochniki/operation/get-dictionaries) в поле `applicant_comment_access_type`",
            "allOf": [
              {
                "$ref": "#/components/schemas/ApplicantCommentsAccessType"
              },
              {
                "type": "object"
              }
            ]
          },
          "author": {
            "description": "Автор комментария",
            "allOf": [
              {
                "$ref": "#/components/schemas/ApplicantCommentsAuthor"
              },
              {
                "type": "object"
              }
            ]
          },
          "created_at": {
            "type": "string",
            "description": "Дата создания комментария"
          },
          "id": {
            "type": "string",
            "description": "Уникальный идентификатор комментария"
          },
          "is_mine": {
            "type": "boolean",
            "description": "Комментарий написан текущим пользователем?"
          },
          "text": {
            "type": "string",
            "description": "Текст комментария. Может содержать символы новой строки"
          }
        }
      },
      "ApplicantCommentsAuthor": {
        "title": "Автор комментария",
        "required": [
          "full_name"
        ],
        "properties": {
          "full_name": {
            "type": "string",
            "description": "ФИО автора комментария"
          }
        }
      },
      "ApplicantCommentsAccessType": {
        "title": "Тип доступа",
        "required": [
          "id",
          "name"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "Идентификатор типа доступа"
          },
          "name": {
            "type": "string",
            "description": "Название типа доступа"
          }
        }
      },
      "VacancyCreate": {
        "title": "Поля, передаваемые в запросе на создание вакансии",
        "type": "object",
        "description": "Поля, передаваемые в запросе на создание вакансии",
        "allOf": [
          {
            "$ref": "#/components/schemas/VacancyCommonFields"
          },
          {
            "$ref": "#/components/schemas/VacancyCreateFields"
          }
        ]
      },
      "VacancyCreateFields": {
        "title": "Поля, передаваемые в запросе на создание вакансии",
        "type": "object",
        "description": "Поля, передаваемые в запросе на создание вакансии",
        "required": [
          "name",
          "description",
          "area",
          "type",
          "billing_type",
          "professional_roles"
        ],
        "properties": {
          "area": {
            "$ref": "#/components/schemas/VacancyArea"
          },
          "billing_type": {
            "$ref": "#/components/schemas/VacancyBillingType"
          },
          "description": {
            "$ref": "#/components/schemas/VacancyDescription"
          },
          "driver_license_types": {
            "type": "array",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/VacancyDriverLicenseTypes"
              },
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              }
            ]
          },
          "manager": {
            "type": "object",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/VacancyManager"
              },
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              }
            ]
          },
          "name": {
            "$ref": "#/components/schemas/VacancyName"
          },
          "previous_id": {
            "title": "Идентификатор предыдущей вакансии",
            "type": "string",
            "description": "Если этот параметр передан, то у новой вакансии дополнительно будет создана связь с предыдущей вакансией (поле previous_id). Этот параметр не влияет на другие и не связан с ними, их всё равно необходимо передавать. \nДолжен быть равен только ID архивной вакансии. ID архивной вакансии можно получить, запросив [список архивных вакансий](#tag/Upravlenie-vakansiyami/operation/get-archived-vacancies) <a name='previous_id'></a>\n",
            "nullable": true
          },
          "type": {
            "$ref": "#/components/schemas/VacancyType"
          }
        }
      },
      "VacancyArea": {
        "title": "Область",
        "type": "object",
        "required": [
          "id"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "Город публикации из [справочника](#tag/Obshie-spravochniki/operation/get-areas)",
            "pattern": "^\\d+$",
            "example": "1625"
          }
        }
      },
      "NegotiationsNegotiationsStatisticsEmployerResponse": {
        "title": "Статистика откликов для работодателя",
        "type": "object",
        "required": [
          "employer_statistics"
        ],
        "properties": {
          "employer_statistics": {
            "$ref": "#/components/schemas/NegotiationsNegotiationsStatistics"
          }
        }
      },
      "NegotiationsNegotiationsStatistics": {
        "title": "Статистика по откликам",
        "type": "object",
        "required": [
          "received"
        ],
        "properties": {
          "average_reply_time": {
            "type": "number",
            "description": "Среднее время (в днях) между получением отклика и отправкой сообщения",
            "nullable": true
          },
          "politeness": {
            "type": "object",
            "description": "Индекс вежливости",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/NegotiationsObjectsPoliteness"
              },
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              }
            ]
          },
          "received": {
            "type": "number",
            "description": "Количество откликов на вакансии, полученных за период (последние 30 дней)"
          },
          "replied_percent": {
            "type": "number",
            "description": "Процент откликов на вакансии, перемещенных в любую другую [коллекцию](https://github.com/hhru/api/blob/master/docs/employer_negotiations.md#term-collection) с отправкой сообщения, за период\n",
            "nullable": true
          },
          "viewed_percent": {
            "type": "number",
            "description": "Процент прочитанных откликов за период",
            "nullable": true
          }
        }
      },
      "NegotiationsObjectsPoliteness": {
        "title": "Информация по индексу вежливости",
        "type": "object",
        "required": [
          "index",
          "index_change",
          "hint",
          "description",
          "article_url"
        ],
        "properties": {
          "article_url": {
            "type": "string",
            "description": "URL на статью HH про индекс вежливости"
          },
          "description": {
            "type": "string",
            "description": "Описание понятия индекса вежливости"
          },
          "hint": {
            "type": "string",
            "description": "Описание текущего значения индекса вежливости"
          },
          "index": {
            "type": "number",
            "description": "Значение индекса вежливости"
          },
          "index_change": {
            "type": "number",
            "description": "Изменение индекса вежливости за последние 24 часа",
            "deprecated": true
          }
        }
      },
      "SavedSearchesSavedSearchResponse": {
        "title": "Успешный ответ",
        "allOf": [
          {
            "$ref": "#/components/schemas/SavedSearchesSavedSearchItems"
          },
          {
            "$ref": "#/components/schemas/_IncludesPagination"
          }
        ]
      },
      "SavedSearchesSavedSearchItems": {
        "title": "Список сохраненных поисков вакансий/резюме",
        "required": [
          "items"
        ],
        "properties": {
          "items": {
            "type": "array",
            "description": "Список сохраненных поисков вакансий/резюме",
            "items": {
              "$ref": "#/components/schemas/SavedSearchesSavedSearchItem"
            }
          }
        }
      },
      "SavedSearchesSavedSearchItem": {
        "title": "Сохраненный поиск вакансий/резюме",
        "type": "object",
        "required": [
          "id",
          "name",
          "created_at",
          "subscription",
          "items",
          "new_items"
        ],
        "properties": {
          "created_at": {
            "type": "string",
            "description": "Дата и время создания"
          },
          "id": {
            "type": "string",
            "description": "Идентификатор поиска"
          },
          "items": {
            "allOf": [
              {
                "$ref": "#/components/schemas/_IncludesCountUrl"
              },
              {
                "type": "object",
                "description": "Данные о списке найденных вакансий/резюме"
              }
            ]
          },
          "name": {
            "type": "string",
            "description": "Название поиска"
          },
          "new_items": {
            "allOf": [
              {
                "$ref": "#/components/schemas/_IncludesCountUrl"
              },
              {
                "type": "object",
                "description": "Данные о найденных вакансиях/резюме, появившихся с момента последнего просмотра автопоиска. При переходе по ссылке счетчик новых элементов будет сброшен (возможна небольшая задержка по времени).\n\nСчетчик `new_items.count` обновляется раз в час. Из-за этого реальное количество новых найденных элементов может расходиться со значением этого счетчика\n"
              }
            ]
          },
          "subscription": {
            "type": "boolean",
            "description": "Статус подписки"
          }
        }
      },
      "_IncludesCountUrl": {
        "title": "Элементы",
        "type": "object",
        "required": [
          "count",
          "url"
        ],
        "properties": {
          "count": {
            "type": "number",
            "description": "Количество элементов"
          },
          "url": {
            "type": "string",
            "description": "Ссылка на получение элементов"
          }
        }
      },
      "VacanciesVacanciesResponse": {
        "title": "Успешный ответ",
        "allOf": [
          {
            "$ref": "#/components/schemas/VacanciesVacanciesItems"
          },
          {
            "$ref": "#/components/schemas/_IncludesPagination"
          },
          {
            "$ref": "#/components/schemas/VacanciesClusters"
          },
          {
            "$ref": "#/components/schemas/VacanciesArguments"
          },
          {
            "type": "object",
            "properties": {
              "alternate_url": {
                "type": "string",
                "description": "Ссылка на вакансию",
                "nullable": true
              },
              "fixes": {
                "$ref": "#/components/schemas/VacanciesFixes"
              },
              "suggests": {
                "$ref": "#/components/schemas/VacanciesSuggests"
              }
            }
          }
        ]
      },
      "VacanciesFixes": {
        "title": "Исправления применённые к тексту запроса",
        "type": "object",
        "nullable": true,
        "properties": {
          "fixed": {
            "type": "string",
            "description": "Текст запроса после исправления"
          },
          "original": {
            "type": "string",
            "description": "Исходный текст запроса"
          }
        }
      },
      "VacanciesArguments": {
        "title": "Использованные параметры в поиске вакансий",
        "type": "object",
        "properties": {
          "arguments": {
            "type": "array",
            "description": "Массив параметров поиска, переданных в запросе.\n\nВозвращается только если в запросе передан параметр `describe_arguments=true`. В массиве выдаются только те параметры, которые влияют на поиск вакансий. Неизвестные параметры игнорируются. Элемент списка с одним значением `argument` может повторяться несколько раз, если параметр имеет несколько значений\n",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/VacanciesArgumentItem"
            }
          }
        }
      },
      "VacanciesArgumentItem": {
        "title": "Аргумент поиска",
        "type": "object",
        "required": [
          "argument",
          "value",
          "disable_url"
        ],
        "properties": {
          "argument": {
            "type": "string",
            "description": "Параметр поиска вакансии"
          },
          "cluster_group": {
            "type": "object",
            "description": "Группа кластеров, которая связана с данным параметром",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/_IncludesIdName"
              },
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              }
            ]
          },
          "disable_url": {
            "type": "string",
            "description": "URL поиска вакансий, который получится, если перестать учитывать в поиске данный параметр"
          },
          "hex_color": {
            "type": "string",
            "description": "Цвет линии в HEX-формате `RRGGBB` (от `000000` до `FFFFFF`). Возвращается только для аргумента `metro`",
            "nullable": true
          },
          "metro_type": {
            "type": "string",
            "description": "Станция или линия метро (`station`/`line`). Возвращается только для аргумента `metro`",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Название значения",
            "nullable": true
          },
          "value": {
            "type": "string",
            "description": "Значение параметра"
          },
          "value_description": {
            "type": "string",
            "description": "Описание параметра",
            "nullable": true
          }
        }
      },
      "VacanciesClusters": {
        "title": "Кластеры в поиске вакансий",
        "type": "object",
        "properties": {
          "clusters": {
            "type": "array",
            "description": "Массив [кластеров поиска](#tag/Poisk-vakansij/Klastery-v-poiske-vakansij)",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/VacanciesClusterItem"
            }
          }
        }
      },
      "VacanciesClusterItem": {
        "title": "Кластер",
        "type": "object",
        "required": [
          "id",
          "name",
          "items"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "Идентификатор кластера"
          },
          "items": {
            "type": "array",
            "description": "Массив поисковых запросов в данном кластере с указанием дополнительных параметров",
            "items": {
              "$ref": "#/components/schemas/VacanciesItemsOfClusterItem"
            }
          },
          "name": {
            "type": "string",
            "description": "Название типа кластера"
          }
        }
      },
      "VacanciesItemsOfClusterItem": {
        "title": "Поисковый запрос в кластере",
        "type": "object",
        "required": [
          "name",
          "url",
          "count"
        ],
        "properties": {
          "count": {
            "type": "number",
            "description": "Количество вакансий в данном элементе кластера"
          },
          "metro_line": {
            "type": "object",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              },
              {
                "$ref": "#/components/schemas/_IncludesClusterMetroLine"
              }
            ]
          },
          "metro_station": {
            "type": "object",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              },
              {
                "$ref": "#/components/schemas/_IncludesClusterMetroStation"
              }
            ]
          },
          "name": {
            "type": "string",
            "description": "Название элемента кластера"
          },
          "type": {
            "type": "string",
            "description": "Тип значения, связанного с группой",
            "nullable": true,
            "enum": [
              "metro_station",
              "metro_line"
            ]
          },
          "url": {
            "type": "string",
            "description": "Ссылка на поисковую выдачу по данному элементу кластера"
          }
        }
      },
      "_IncludesClusterMetroStation": {
        "title": "Станция метро",
        "type": "object",
        "required": [
          "id",
          "hex_color",
          "lat",
          "lng",
          "order",
          "area"
        ],
        "properties": {
          "area": {
            "allOf": [
              {
                "type": "object",
                "description": "Регион, в котором находится станция"
              },
              {
                "$ref": "#/components/schemas/_IncludesArea"
              }
            ]
          },
          "hex_color": {
            "type": "string",
            "description": "Цвет линии в HEX-формате `RRGGBB` (от `000000` до `FFFFFF`)"
          },
          "id": {
            "type": "string",
            "description": "Идентификатор станции метро"
          },
          "lat": {
            "type": "number",
            "description": "Широта"
          },
          "lng": {
            "type": "number",
            "description": "Долгота"
          },
          "order": {
            "type": "number",
            "description": "Порядковый номер станции в линии метро"
          }
        }
      },
      "_IncludesClusterMetroLine": {
        "title": "Линия метро",
        "type": "object",
        "required": [
          "id",
          "hex_color",
          "area"
        ],
        "properties": {
          "area": {
            "allOf": [
              {
                "type": "object",
                "description": "Регион (город), в котором находится линия"
              },
              {
                "$ref": "#/components/schemas/_IncludesArea"
              }
            ]
          },
          "hex_color": {
            "type": "string",
            "description": "Цвет линии в HEX-формате `RRGGBB` (от `000000` до `FFFFFF`)"
          },
          "id": {
            "type": "string",
            "description": "Идентификатор линии"
          }
        }
      },
      "VacanciesVacanciesItems": {
        "title": "Список вакансий",
        "required": [
          "items"
        ],
        "properties": {
          "items": {
            "type": "array",
            "description": "Список вакансий",
            "items": {
              "$ref": "#/components/schemas/VacanciesVacanciesItem"
            }
          }
        }
      },
      "VacanciesVacanciesItem": {
        "title": "Вакансия",
        "allOf": [
          {
            "$ref": "#/components/schemas/VacanciesStandardVacancyFields"
          },
          {
            "$ref": "#/components/schemas/VacanciesAdditionalVacancyFields"
          },
          {
            "type": "object",
            "properties": {
              "show_logo_in_search": {
                "type": "boolean",
                "description": "Отображать ли лого для вакансии в поисковой выдаче",
                "nullable": true
              }
            }
          }
        ]
      },
      "VacanciesAdditionalVacancyFields": {
        "title": "Вакансия",
        "type": "object",
        "required": [
          "snippet"
        ],
        "properties": {
          "counters": {
            "$ref": "#/components/schemas/VacancyCounters"
          },
          "employment": {
            "$ref": "#/components/schemas/VacancyEmploymentOutput"
          },
          "experience": {
            "$ref": "#/components/schemas/VacancyExperienceOutput"
          },
          "snippet": {
            "description": "Дополнительные текстовые снипеты (отрывки) по найденной вакансии. Если в тексте снипета встретилась поисковая фраза (параметр `text`), она будет подсвечена тегом `highlighttext`",
            "$ref": "#/components/schemas/VacancySnippet"
          },
          "sort_point_distance": {
            "$ref": "#/components/schemas/VacancySortPointDistance"
          }
        }
      },
      "VacancyCounters": {
        "title": "Счетчики",
        "type": "object",
        "description": "Число откликов на вакансию.\nДоступно для соискательской авторизации и авторизации приложения при использовании параметра `responses_count_enabled=true`\n",
        "properties": {
          "responses": {
            "type": "number",
            "description": "Количество откликов на вакансию с момента публикации"
          },
          "total_responses": {
            "type": "number",
            "description": "Количество откликов на вакансию с момента создания"
          }
        }
      },
      "VacancySnippet": {
        "title": "Дополнительные текстовые отрывки",
        "type": "object",
        "properties": {
          "requirement": {
            "type": "string",
            "description": "Отрывок из требований по вакансии, если они найдены в тексте описания",
            "nullable": true
          },
          "responsibility": {
            "type": "string",
            "description": "Отрывок из обязанностей по вакансии, если они найдены в тексте описания",
            "nullable": true
          }
        }
      },
      "VacancySortPointDistance": {
        "title": "Расстояние между центром сортировки и указанным в вакансии адресом",
        "type": "number",
        "description": "Расстояние в метрах между центром сортировки (заданной параметрами `sort_point_lat`, `sort_point_lng`) и указанным в вакансии адресом. В случае, если в адресе указаны только станции метро, выдается расстояние между центром сортировки и средней геометрической точкой указанных станций.\n\nЗначение `sort_point_distance` выдается только в случае, если заданы параметры `sort_point_lat`, `sort_point_lng`, `order_by=distance`",
        "nullable": true
      },
      "VacanciesStandardVacancyFields": {
        "title": "Вакансия",
        "type": "object",
        "required": [
          "id",
          "name",
          "department",
          "has_test",
          "response_letter_required",
          "area",
          "salary",
          "type",
          "published_at",
          "apply_alternate_url",
          "url",
          "alternate_url",
          "relations",
          "employer",
          "accept_incomplete_resumes",
          "professional_roles"
        ],
        "properties": {
          "accept_incomplete_resumes": {
            "$ref": "#/components/schemas/VacancyAcceptIncompleteResumes"
          },
          "accept_temporary": {
            "$ref": "#/components/schemas/VacancyAcceptTemporary"
          },
          "address": {
            "$ref": "#/components/schemas/VacancyAddressRawOutput"
          },
          "adv_response_url": {
            "type": "string",
            "description": "URL для регистрации нажатия кнопки отклика\n(устаревшее, сейчас для регистрации нажатия кнопки отклика нужно заполнять хедер adv-context \nв запросе [Резюме, сгруппированные по возможности отклика на данную вакансию](#tag/Rezyume.-Prosmotr-informacii/operation/get-resumes-by-status))\n",
            "deprecated": true,
            "nullable": true
          },
          "alternate_url": {
            "type": "string",
            "description": "Ссылка на представление вакансии на сайте"
          },
          "apply_alternate_url": {
            "type": "string",
            "description": "Ссылка на отклик на вакансию на сайте"
          },
          "archived": {
            "type": "boolean",
            "description": "Находится ли данная вакансия в архиве",
            "nullable": true
          },
          "area": {
            "$ref": "#/components/schemas/_IncludesArea"
          },
          "contacts": {
            "$ref": "#/components/schemas/VacancyContactsOutput"
          },
          "created_at": {
            "type": "string",
            "description": "Дата и время публикации вакансии"
          },
          "department": {
            "$ref": "#/components/schemas/VacanciesObjectsDepartment"
          },
          "employer": {
            "$ref": "#/components/schemas/VacanciesEmployerPublic"
          },
          "has_test": {
            "type": "boolean",
            "description": "Информация о наличии прикрепленного тестового задании к вакансии"
          },
          "id": {
            "type": "string",
            "description": "Идентификатор вакансии"
          },
          "insider_interview": {
            "$ref": "#/components/schemas/VacanciesObjectsInsiderInterview"
          },
          "metro_stations": {
            "$ref": "#/components/schemas/_IncludesMetroStation"
          },
          "name": {
            "$ref": "#/components/schemas/VacancyName"
          },
          "premium": {
            "type": "boolean",
            "description": "Является ли данная вакансия премиум-вакансией",
            "nullable": true
          },
          "professional_roles": {
            "$ref": "#/components/schemas/VacancyProfessionalRolesOutput"
          },
          "published_at": {
            "type": "string",
            "description": "Дата и время публикации вакансии"
          },
          "relations": {
            "$ref": "#/components/schemas/VacancyRelations"
          },
          "response_letter_required": {
            "$ref": "#/components/schemas/VacancyResponseLetterRequired"
          },
          "response_url": {
            "$ref": "#/components/schemas/VacancyResponseUrl"
          },
          "salary": {
            "$ref": "#/components/schemas/VacancySalary"
          },
          "schedule": {
            "type": "object",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/VacancyScheduleOutput"
              },
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              }
            ]
          },
          "sort_point_distance": {
            "$ref": "#/components/schemas/VacancySortPointDistance"
          },
          "type": {
            "$ref": "#/components/schemas/VacancyTypeOutput"
          },
          "url": {
            "type": "string",
            "description": "URL вакансии"
          },
          "working_days": {
            "$ref": "#/components/schemas/VacancyWorkingDaysOutput"
          },
          "working_time_intervals": {
            "$ref": "#/components/schemas/VacancyWorkingTimeIntervalsOutput"
          },
          "working_time_modes": {
            "$ref": "#/components/schemas/VacancyWorkingTimeModesOutput"
          }
        }
      },
      "VacancyRelations": {
        "title": "Связи соискателя с вакансией",
        "type": "array",
        "description": "Возвращает связи соискателя с вакансией. Значения из поля `vacancy_relation` в [справочнике полей](#tag/Obshie-spravochniki/operation/get-dictionaries)",
        "items": {
          "$ref": "#/components/schemas/VacancyRelationItem"
        }
      },
      "VacancyRelationItem": {
        "title": "Текстовый идентификатор связи",
        "type": "string",
        "nullable": true,
        "enum": [
          "favorited",
          "got_response",
          "got_invitation",
          "got_rejection",
          "blacklisted",
          null
        ]
      },
      "VacancyContactsOutput": {
        "title": "Контактная информация",
        "type": "object",
        "description": "Контактная информация",
        "nullable": true,
        "properties": {
          "call_tracking_enabled": {
            "type": "boolean",
            "description": "Флаг подключения виртуального номера",
            "nullable": true
          },
          "email": {
            "type": "string",
            "description": "Электронная почта. Значение поля должно соответствовать формату email",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Имя контакта",
            "nullable": true
          },
          "phones": {
            "type": "array",
            "description": "Список телефонов для связи",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/VacancyPhoneItem"
            }
          }
        }
      },
      "VacanciesSuggests": {
        "title": "Исправления предложенные для текста запроса",
        "type": "object",
        "nullable": true,
        "properties": {
          "found": {
            "type": "integer",
            "description": "Найдено результатов по предложенному запросу"
          },
          "value": {
            "type": "string",
            "description": "Предложенный текст запроса"
          }
        }
      },
      "MailTemplatesMailTemplateInput": {
        "title": "Шаблон ответа соискателю",
        "additionalProperties": false,
        "required": [
          "text"
        ],
        "properties": {
          "text": {
            "type": "string",
            "description": "Текст шаблона"
          }
        }
      },
      "SuggestsSearchKeyword": {
        "title": "Подсказки по ключевым словам поиска",
        "type": "object",
        "description": "Подсказки по ключевым словам поиска",
        "additionalProperties": false,
        "required": [
          "items"
        ],
        "properties": {
          "items": {
            "title": "Массив ключевых слов",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SuggestsSearchKeywordItem"
            }
          }
        }
      },
      "SuggestsSearchKeywordItem": {
        "title": "Ключевое слово",
        "type": "object",
        "required": [
          "text"
        ],
        "properties": {
          "text": {
            "type": "string",
            "description": "Ключевое слово"
          }
        }
      },
      "ArtifactsArtifactConditions": {
        "title": "Условия загрузки артефакта",
        "type": "object",
        "required": [
          "fields",
          "counters"
        ],
        "properties": {
          "counters": {
            "description": "Счетчик артефактов данного типа",
            "allOf": [
              {
                "$ref": "#/components/schemas/ArtifactsCounters"
              },
              {
                "type": "object"
              }
            ]
          },
          "fields": {
            "description": "Условия для полей артефакта",
            "allOf": [
              {
                "$ref": "#/components/schemas/ArtifactsFields"
              },
              {
                "type": "object"
              }
            ]
          }
        }
      },
      "ArtifactsCounters": {
        "title": "Счетчик артефактов данного типа",
        "required": [
          "max",
          "uploaded"
        ],
        "properties": {
          "max": {
            "type": "number",
            "description": "Максимально возможное количество артефактов данного типа, которое можно загрузить"
          },
          "uploaded": {
            "type": "number",
            "description": "Количество уже загруженных артефактов данного типа"
          }
        }
      },
      "ArtifactsFields": {
        "title": "Условия для полей артефакта",
        "required": [
          "description",
          "file",
          "type"
        ],
        "properties": {
          "description": {
            "description": "Условия для поля `description`",
            "allOf": [
              {
                "$ref": "#/components/schemas/ArtifactsDescription"
              },
              {
                "type": "object"
              }
            ]
          },
          "file": {
            "description": "Условия для поля `file`",
            "allOf": [
              {
                "$ref": "#/components/schemas/ArtifactsFile"
              },
              {
                "type": "object"
              }
            ]
          },
          "type": {
            "description": "Условия для поля `type`",
            "allOf": [
              {
                "$ref": "#/components/schemas/ArtifactsType"
              },
              {
                "type": "object"
              }
            ]
          }
        }
      },
      "ArtifactsFile": {
        "title": "Условия для поля `file`",
        "required": [
          "max_size",
          "mime_type",
          "required"
        ],
        "properties": {
          "max_size": {
            "type": "number",
            "description": "Максимальный размер файла"
          },
          "mime_type": {
            "type": "array",
            "description": "Список допустимых [MIME-типов](https://www.iana.org/assignments/media-types/media-types.xhtml) файлов",
            "items": {
              "type": "string"
            }
          },
          "required": {
            "type": "boolean",
            "description": "Является ли поле `file` обязательным"
          }
        }
      },
      "ArtifactsType": {
        "title": "Условия для поля `type`",
        "required": [
          "required"
        ],
        "properties": {
          "required": {
            "type": "boolean",
            "description": "Является ли поле `type` обязательным"
          }
        }
      },
      "ArtifactsDescription": {
        "title": "Условия для поля `description`",
        "required": [
          "max_length",
          "min_length",
          "required"
        ],
        "properties": {
          "max_length": {
            "type": "number",
            "description": "Максимальный размер текстового поля `description`"
          },
          "min_length": {
            "type": "number",
            "description": "Минимальный размер текстового поля `description`"
          },
          "required": {
            "type": "boolean",
            "description": "Является ли поле `description` обязательным"
          }
        }
      },
      "WebhookSubscriptionCreate": {
        "title": "Объект подписки",
        "allOf": [
          {
            "$ref": "#/components/schemas/WebhookSubscriptionCommonItem"
          },
          {
            "type": "object"
          }
        ]
      },
      "WebhookSubscriptionCommonItem": {
        "title": "Объект подписки",
        "type": "object",
        "required": [
          "url",
          "actions"
        ],
        "properties": {
          "actions": {
            "type": "array",
            "discriminator": {
              "propertyName": "type",
              "mapping": {
                "NEGOTIATION_EMPLOYER_STATE_CHANGE": "#/components/schemas/WebhookActionNegotiationEmployerStateChange",
                "NEW_NEGOTIATION_VACANCY": "#/components/schemas/WebhookActionNewNegotiationVacancy",
                "NEW_RESPONSE_OR_INVITATION_VACANCY": "#/components/schemas/WebhookActionNewResponseOrInvitationVacancy",
                "VACANCY_ARCHIVATION": "#/components/schemas/WebhookActionVacancyArchivation",
                "VACANCY_CHANGE": "#/components/schemas/WebhookActionVacancyChange",
                "VACANCY_PROLONGATION": "#/components/schemas/WebhookActionVacancyProlongation",
                "VACANCY_PUBLICATION_FOR_VACANCY_MANAGER": "#/components/schemas/WebhookActionVacancyPublicationForVacancyManager"
              }
            },
            "description": "Cписок событий",
            "minItems": 1,
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/WebhookActionNewNegotiationVacancy"
                },
                {
                  "$ref": "#/components/schemas/WebhookActionNewResponseOrInvitationVacancy"
                },
                {
                  "$ref": "#/components/schemas/WebhookActionVacancyArchivation"
                },
                {
                  "$ref": "#/components/schemas/WebhookActionVacancyChange"
                },
                {
                  "$ref": "#/components/schemas/WebhookActionVacancyProlongation"
                },
                {
                  "$ref": "#/components/schemas/WebhookActionVacancyPublicationForVacancyManager"
                },
                {
                  "$ref": "#/components/schemas/WebhookActionNegotiationEmployerStateChange"
                }
              ]
            }
          },
          "url": {
            "type": "string",
            "description": "URL, на который будет отправляться POST запрос при наступлении события",
            "format": "uri",
            "example": "http://www.example.com"
          }
        }
      },
      "WebhookActionVacancyChange": {
        "title": "Подписка на VACANCY_CHANGE",
        "type": "object",
        "additionalProperties": false,
        "required": [
          "type"
        ],
        "properties": {
          "settings": {
            "nullable": true,
            "anyOf": [
              {
                "$ref": "#/components/schemas/WebhookActionVacancyOnlyMineSettings"
              },
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              }
            ]
          },
          "type": {
            "type": "string",
            "description": "Изменение вакансии. Аккумулирует изменения, внесенные за несколько последних секунд, и отправляет вебхук, содержащий время последнего изменения.\n\nЕсли вы внесете два изменения с разницей в одну секунду, сервис отправит только один вебхук, который будет содержать время последнего изменения. Если изменение одно, сервис отправит вебхук с задержкой в несколько секунд\n",
            "enum": [
              "VACANCY_CHANGE"
            ]
          }
        }
      },
      "WebhookActionVacancyOnlyMineSettings": {
        "title": "Настройка на подписку только на мои вакансии",
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "vacancies_only_mine": {
            "type": "boolean",
            "description": "Если `true`, сервис будет присылать уведомления только о вакансиях текущего пользователя.\n\nПо умолчанию `false` — сервис будет присылать уведомления о всех вакансиях, к которым есть доступ\n",
            "default": "false"
          }
        }
      },
      "WebhookActionVacancyPublicationForVacancyManager": {
        "title": "Подписка на VACANCY_PUBLICATION_FOR_VACANCY_MANAGER",
        "type": "object",
        "additionalProperties": false,
        "required": [
          "type"
        ],
        "properties": {
          "type": {
            "type": "string",
            "description": "Публикация вакансии. Событие присылается только для менеджера-владельца вакансии при создании вакансии, отложенной публикации или публикации из черновика",
            "enum": [
              "VACANCY_PUBLICATION_FOR_VACANCY_MANAGER"
            ]
          }
        }
      },
      "WebhookActionNegotiationEmployerStateChange": {
        "title": "Подписка на NEGOTIATION_EMPLOYER_STATE_CHANGE",
        "type": "object",
        "additionalProperties": false,
        "required": [
          "type"
        ],
        "properties": {
          "settings": {
            "nullable": true,
            "anyOf": [
              {
                "$ref": "#/components/schemas/WebhookActionVacancyOnlyMineSettings"
              },
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              }
            ]
          },
          "type": {
            "type": "string",
            "description": "Перемещение резюме кандидата на другой этап вакансии.\n\nСодержит следующую информацию:\n\n* кто переместил резюме; \n* идентификатор резюме;\n* исходный статус резюме; \n* новый статус резюме\n",
            "enum": [
              "NEGOTIATION_EMPLOYER_STATE_CHANGE"
            ]
          }
        }
      },
      "WebhookActionNewNegotiationVacancy": {
        "title": "Подписка на NEW_NEGOTIATION_VACANCY",
        "type": "object",
        "additionalProperties": false,
        "required": [
          "type"
        ],
        "properties": {
          "settings": {
            "nullable": true,
            "anyOf": [
              {
                "$ref": "#/components/schemas/WebhookActionVacancyOnlyMineSettings"
              },
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              }
            ]
          },
          "type": {
            "type": "string",
            "description": "Новый отклик на вакансию. Данное событие будет вызываться только на отклик со стороны соискателя",
            "enum": [
              "NEW_NEGOTIATION_VACANCY"
            ]
          }
        }
      },
      "WebhookActionVacancyProlongation": {
        "title": "Подписка на VACANCY_PROLONGATION",
        "type": "object",
        "additionalProperties": false,
        "required": [
          "type"
        ],
        "properties": {
          "settings": {
            "nullable": true,
            "anyOf": [
              {
                "$ref": "#/components/schemas/WebhookActionVacancyOnlyMineSettings"
              },
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              }
            ]
          },
          "type": {
            "type": "string",
            "description": "Продление вакансии",
            "enum": [
              "VACANCY_PROLONGATION"
            ]
          }
        }
      },
      "WebhookActionNewResponseOrInvitationVacancy": {
        "title": "Подписка на NEW_RESPONSE_OR_INVITATION_VACANCY",
        "type": "object",
        "additionalProperties": false,
        "required": [
          "type"
        ],
        "properties": {
          "settings": {
            "nullable": true,
            "anyOf": [
              {
                "$ref": "#/components/schemas/WebhookActionVacancyOnlyMineSettings"
              },
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              }
            ]
          },
          "type": {
            "type": "string",
            "description": "Новый отклик или приглашение на вакансию. Данное событие будет вызываться как на отклик со стороны соискателя, так и на приглашение со стороны работодателя",
            "enum": [
              "NEW_RESPONSE_OR_INVITATION_VACANCY"
            ]
          }
        }
      },
      "WebhookActionVacancyArchivation": {
        "title": "Подписка на VACANCY_ARCHIVATION",
        "type": "object",
        "additionalProperties": false,
        "required": [
          "type"
        ],
        "properties": {
          "settings": {
            "nullable": true,
            "anyOf": [
              {
                "$ref": "#/components/schemas/WebhookActionVacancyOnlyMineSettings"
              },
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              }
            ]
          },
          "type": {
            "type": "string",
            "description": "Архивация вакансии",
            "enum": [
              "VACANCY_ARCHIVATION"
            ]
          }
        }
      },
      "VacancyDuplicates": {
        "title": "Проверка наличия дубликатов вакансии",
        "type": "object",
        "additionalProperties": false,
        "required": [
          "has_duplicates",
          "found",
          "items"
        ],
        "properties": {
          "found": {
            "type": "number",
            "description": "Общее количество дубликатов вакансии"
          },
          "has_duplicates": {
            "type": "boolean",
            "description": "Существуют ли дубликаты вакансии"
          },
          "items": {
            "type": "array",
            "description": "Список идентификаторов дубликатов вакансии",
            "items": {
              "type": "number"
            }
          }
        }
      },
      "WebhookSubscriptionsOutput": {
        "title": "Объект с подписками",
        "type": "object",
        "additionalProperties": false,
        "required": [
          "items"
        ],
        "properties": {
          "items": {
            "type": "array",
            "description": "Cписок подписок пользователя",
            "items": {
              "$ref": "#/components/schemas/WebhookSubscriptionItem"
            }
          }
        }
      },
      "WebhookSubscriptionItem": {
        "title": "Подписка пользователя",
        "allOf": [
          {
            "$ref": "#/components/schemas/WebhookSubscriptionCommonItem"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "required": [
              "id"
            ],
            "properties": {
              "id": {
                "type": "string",
                "description": "Идентификатор подписки",
                "example": "q1ww2e2r4ty"
              }
            }
          }
        ]
      },
      "DictionariesDictResponse": {
        "title": "Справочники полей резюме",
        "type": "object",
        "description": "Справочники полей и сущностей, используемых в API",
        "required": [
          "education_level",
          "gender",
          "language_level",
          "preferred_contact_type",
          "relocation_type",
          "travel_time",
          "resume_access_type",
          "business_trip_readiness",
          "resume_contacts_site_type",
          "resume_status",
          "resume_moderation_note",
          "driver_license_types",
          "resume_hidden_fields",
          "employment",
          "experience",
          "schedule",
          "vacancy_type",
          "vacancy_label",
          "vacancy_relation",
          "vacancy_billing_type",
          "working_days",
          "working_time_intervals",
          "working_time_modes",
          "vacancy_search_fields",
          "vacancy_search_order",
          "vacancy_cluster",
          "employer_active_vacancies_order",
          "employer_archived_vacancies_order",
          "negotiations_order",
          "negotiations_state",
          "messaging_status",
          "negotiations_participant_type",
          "applicant_negotiation_status",
          "currency",
          "employer_type",
          "employer_relation",
          "vacancy_not_prolonged_reason",
          "applicant_comments_order",
          "applicant_comment_access_type",
          "phone_call_status",
          "job_search_statuses_applicant",
          "job_search_statuses_employer"
        ],
        "properties": {
          "applicant_comment_access_type": {
            "title": "Прочие справочники",
            "type": "array",
            "description": "Тип доступа для комментария к соискателю",
            "items": {
              "$ref": "#/components/schemas/_IncludesIdName"
            }
          },
          "applicant_comments_order": {
            "title": "Прочие справочники",
            "type": "array",
            "description": "Типы сортировки [списка комментариев к соискателю](#tag/Kommentarii-k-soiskatelyu/operation/get-applicant-comments-list)",
            "items": {
              "$ref": "#/components/schemas/_IncludesIdName"
            }
          },
          "applicant_negotiation_status": {
            "title": "Справочник для откликов/приглашений",
            "type": "array",
            "description": "Статусы откликов/приглашений",
            "items": {
              "$ref": "#/components/schemas/_IncludesIdName"
            }
          },
          "business_trip_readiness": {
            "title": "Справочник для полей, используемых в резюме",
            "type": "array",
            "description": "Готовность к командировкам",
            "items": {
              "$ref": "#/components/schemas/_IncludesIdName"
            }
          },
          "currency": {
            "title": "Прочие справочники",
            "type": "array",
            "description": "Справочник валют",
            "items": {
              "$ref": "#/components/schemas/DictionariesCurrencyItem"
            }
          },
          "driver_license_types": {
            "title": "Справочник для полей, используемых в резюме",
            "type": "array",
            "description": "Категории водительских прав",
            "items": {
              "$ref": "#/components/schemas/_IncludesId"
            }
          },
          "education_level": {
            "title": "Справочник для полей, используемых в резюме",
            "type": "array",
            "description": "Образование в резюме",
            "items": {
              "$ref": "#/components/schemas/_IncludesIdName"
            }
          },
          "employer_active_vacancies_order": {
            "title": "Справочник для сортировки вакансий работодателя",
            "type": "array",
            "description": "Тип сортировки списка опубликованных вакансий",
            "items": {
              "$ref": "#/components/schemas/_IncludesIdName"
            }
          },
          "employer_archived_vacancies_order": {
            "title": "Справочник для сортировки вакансий работодателя",
            "type": "array",
            "description": "Тип сортировки списка архивных вакансий",
            "items": {
              "$ref": "#/components/schemas/_IncludesIdName"
            }
          },
          "employer_hidden_vacancies_order": {
            "title": "Справочник для сортировки вакансий работодателя",
            "type": "array",
            "description": "Тип сортировки скрытых вакансий",
            "items": {
              "$ref": "#/components/schemas/_IncludesIdName"
            }
          },
          "employer_relation": {
            "title": "Прочие справочники",
            "type": "array",
            "description": "Типы связи компании с пользователем",
            "items": {
              "$ref": "#/components/schemas/_IncludesIdName"
            }
          },
          "employer_type": {
            "title": "Прочие справочники",
            "type": "array",
            "description": "Тип работодателя",
            "items": {
              "$ref": "#/components/schemas/_IncludesIdName"
            }
          },
          "employment": {
            "title": "Справочник для полей вакансии",
            "type": "array",
            "description": "Тип занятости",
            "items": {
              "$ref": "#/components/schemas/_IncludesIdName"
            }
          },
          "experience": {
            "title": "Справочник для полей вакансии",
            "type": "array",
            "description": "Опыт работы",
            "items": {
              "$ref": "#/components/schemas/_IncludesIdName"
            }
          },
          "gender": {
            "title": "Справочник для полей, используемых в резюме",
            "type": "array",
            "description": "Пол",
            "items": {
              "$ref": "#/components/schemas/_IncludesIdName"
            }
          },
          "job_search_statuses_applicant": {
            "title": "Прочие справочники",
            "type": "array",
            "description": "Статусы поиска соискателей для установки и отображения самому соискателю",
            "items": {
              "$ref": "#/components/schemas/_IncludesIdName"
            }
          },
          "job_search_statuses_employer": {
            "title": "Прочие справочники",
            "type": "array",
            "description": "Статусы поиска соискателей для отображения работодателям",
            "items": {
              "$ref": "#/components/schemas/_IncludesIdName"
            }
          },
          "language_level": {
            "title": "Справочник для полей, используемых в резюме",
            "type": "array",
            "description": "Уровень владения языком",
            "items": {
              "$ref": "#/components/schemas/_IncludesIdName"
            }
          },
          "messaging_status": {
            "title": "Справочник для откликов/приглашений",
            "type": "array",
            "description": "Статус возможности отправки сообщения в переписке",
            "items": {
              "$ref": "#/components/schemas/_IncludesIdName"
            }
          },
          "negotiations_order": {
            "title": "Справочник для откликов/приглашений",
            "type": "array",
            "description": "Типы порядка отображения откликов",
            "items": {
              "$ref": "#/components/schemas/_IncludesIdName"
            }
          },
          "negotiations_participant_type": {
            "title": "Справочник для откликов/приглашений",
            "type": "array",
            "description": "Типы участников переписки",
            "items": {
              "$ref": "#/components/schemas/_IncludesIdName"
            }
          },
          "negotiations_state": {
            "title": "Справочник для откликов/приглашений",
            "type": "array",
            "description": "Типы состояний откликов",
            "items": {
              "$ref": "#/components/schemas/_IncludesIdName"
            }
          },
          "phone_call_status": {
            "title": "Прочие справочники",
            "type": "array",
            "description": "Статус звонка, зафиксированного в системе кол-трекинг",
            "items": {
              "$ref": "#/components/schemas/_IncludesIdName"
            }
          },
          "preferred_contact_type": {
            "title": "Справочник для полей, используемых в резюме",
            "type": "array",
            "description": "Предпочитаемый способ связи",
            "items": {
              "$ref": "#/components/schemas/_IncludesIdName"
            }
          },
          "relocation_type": {
            "title": "Справочник для полей, используемых в резюме",
            "type": "array",
            "description": "Готовность к переезду",
            "items": {
              "$ref": "#/components/schemas/_IncludesIdName"
            }
          },
          "resume_access_type": {
            "title": "Справочник для полей, используемых в резюме",
            "type": "array",
            "description": "Уровень доступа к резюме",
            "items": {
              "$ref": "#/components/schemas/_IncludesIdName"
            }
          },
          "resume_contacts_site_type": {
            "title": "Справочник для полей, используемых в резюме",
            "type": "array",
            "description": "Тип сайта в поле «контакты»",
            "items": {
              "$ref": "#/components/schemas/_IncludesIdName"
            }
          },
          "resume_hidden_fields": {
            "title": "Справочник для полей, используемых в резюме",
            "type": "array",
            "description": "Поля резюме, которые могут быть [скрыты](https://github.com/hhru/api/blob/master/docs/employer_resumes.md#hidden-fields)",
            "items": {
              "$ref": "#/components/schemas/_IncludesIdName"
            }
          },
          "resume_moderation_note": {
            "title": "Справочник для полей, используемых в резюме",
            "type": "array",
            "description": "Комментарий модератора",
            "items": {
              "$ref": "#/components/schemas/_IncludesIdName"
            }
          },
          "resume_search_experience_period": {
            "title": "Справочник параметров поиска резюме",
            "type": "array",
            "description": "Условие поиска по опыту работы",
            "items": {
              "$ref": "#/components/schemas/_IncludesIdName"
            }
          },
          "resume_search_fields": {
            "title": "Справочник параметров поиска резюме",
            "type": "array",
            "description": "Область поиска в резюме",
            "items": {
              "$ref": "#/components/schemas/_IncludesIdName"
            }
          },
          "resume_search_label": {
            "title": "Справочник параметров поиска резюме",
            "type": "array",
            "description": "Метки поиска резюме",
            "items": {
              "$ref": "#/components/schemas/_IncludesIdName"
            }
          },
          "resume_search_logic": {
            "title": "Справочник параметров поиска резюме",
            "type": "array",
            "description": "Условие поиска резюме",
            "items": {
              "$ref": "#/components/schemas/_IncludesIdName"
            }
          },
          "resume_search_order": {
            "title": "Справочник параметров поиска резюме",
            "type": "array",
            "description": "Тип сортировки резюме",
            "items": {
              "$ref": "#/components/schemas/_IncludesIdName"
            }
          },
          "resume_search_relocation": {
            "title": "Справочник параметров поиска резюме",
            "type": "array",
            "description": "Условие поиска по проживанию в регионе и готовности к переезду",
            "items": {
              "$ref": "#/components/schemas/_IncludesIdName"
            }
          },
          "resume_status": {
            "title": "Справочник для полей, используемых в резюме",
            "type": "array",
            "description": "Статус резюме",
            "items": {
              "$ref": "#/components/schemas/_IncludesIdName"
            }
          },
          "schedule": {
            "title": "Справочник для полей вакансии",
            "type": "array",
            "description": "График работы",
            "items": {
              "$ref": "#/components/schemas/_IncludesIdNameUid"
            }
          },
          "travel_time": {
            "title": "Справочник для полей, используемых в резюме",
            "type": "array",
            "description": "Время в пути",
            "items": {
              "$ref": "#/components/schemas/_IncludesIdName"
            }
          },
          "vacancy_billing_type": {
            "title": "Справочник для полей вакансии",
            "type": "array",
            "description": "Варианты размещения вакансии с точки зрения биллинга",
            "items": {
              "$ref": "#/components/schemas/_IncludesIdName"
            }
          },
          "vacancy_cluster": {
            "title": "Справочник для параметров поиска вакансий",
            "type": "array",
            "description": "Тип кластеров",
            "items": {
              "$ref": "#/components/schemas/_IncludesIdName"
            }
          },
          "vacancy_label": {
            "title": "Справочник для полей вакансии",
            "type": "array",
            "description": "Метки вакансии",
            "items": {
              "$ref": "#/components/schemas/_IncludesIdName"
            }
          },
          "vacancy_not_prolonged_reason": {
            "title": "Прочие справочники",
            "type": "array",
            "description": "Причины, из-за которых невозможно [продлить вакансию](#tag/Upravlenie-vakansiyami/operation/get-prolongation-vacancy-info)",
            "items": {
              "$ref": "#/components/schemas/_IncludesIdName"
            }
          },
          "vacancy_relation": {
            "title": "Справочник для полей вакансии",
            "type": "array",
            "description": "Типы связи вакансии с пользователем",
            "items": {
              "$ref": "#/components/schemas/_IncludesIdName"
            }
          },
          "vacancy_search_fields": {
            "title": "Справочник для параметров поиска вакансий",
            "type": "array",
            "description": "Область поиска в вакансии",
            "items": {
              "$ref": "#/components/schemas/_IncludesIdName"
            }
          },
          "vacancy_search_order": {
            "title": "Справочник для параметров поиска вакансий",
            "type": "array",
            "description": "Тип сортировки вакансии",
            "items": {
              "$ref": "#/components/schemas/_IncludesIdName"
            }
          },
          "vacancy_type": {
            "title": "Справочник для полей вакансии",
            "type": "array",
            "description": "Тип вакансии",
            "items": {
              "$ref": "#/components/schemas/_IncludesIdName"
            }
          },
          "working_days": {
            "title": "Справочник для полей вакансии",
            "type": "array",
            "description": "Рабочие дни",
            "items": {
              "$ref": "#/components/schemas/_IncludesIdName"
            }
          },
          "working_time_intervals": {
            "title": "Справочник для полей вакансии",
            "type": "array",
            "description": "Временные интервалы работы",
            "items": {
              "$ref": "#/components/schemas/_IncludesIdName"
            }
          },
          "working_time_modes": {
            "title": "Справочник для полей вакансии",
            "type": "array",
            "description": "Режимы времени работы",
            "items": {
              "$ref": "#/components/schemas/_IncludesIdName"
            }
          }
        }
      },
      "_IncludesIdNameUid": {
        "title": "Объект с идентификатором, названием и универсальным идентификатором",
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/_IncludesIdName"
          },
          {
            "type": "object",
            "required": [
              "uid"
            ],
            "properties": {
              "uid": {
                "type": "string",
                "description": "Универсальный идентификатор"
              }
            }
          }
        ]
      },
      "DictionariesCurrencyItem": {
        "title": "Валюта",
        "type": "object",
        "required": [
          "code",
          "abbr",
          "name",
          "default",
          "rate",
          "in_use"
        ],
        "properties": {
          "abbr": {
            "type": "string",
            "description": "Краткое обозначение"
          },
          "code": {
            "type": "string",
            "description": "Код"
          },
          "default": {
            "type": "boolean",
            "description": "Используется ли в качестве валюты по умолчанию?"
          },
          "in_use": {
            "type": "boolean",
            "description": "Можно ли использовать на данном хосте?"
          },
          "name": {
            "type": "string",
            "description": "Название"
          },
          "rate": {
            "type": "number",
            "description": "Курс по отношению к рублю"
          }
        }
      },
      "DictionariesSkillsResponse": {
        "title": "Список ключевых навыков",
        "type": "object",
        "description": "Список ключевых навыков",
        "required": [
          "items"
        ],
        "properties": {
          "items": {
            "type": "array",
            "description": "Массив ключевых навыков",
            "items": {
              "$ref": "#/components/schemas/_IncludesSkillSetItem"
            }
          }
        }
      },
      "_IncludesSkillSetItem": {
        "title": "Ключевой навык",
        "type": "object",
        "required": [
          "id",
          "text"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "Идентификатор ключевого навыка"
          },
          "text": {
            "type": "string",
            "description": "Название ключевого навыка"
          }
        }
      },
      "VacanciesPreferredNegotiationsOrderRequest": {
        "title": "Предпочитаемая сортировка откликов",
        "type": "object",
        "required": [
          "order"
        ],
        "properties": {
          "order": {
            "type": "string",
            "description": "Идентификатор типа сортировки. Возможные значения представлены в поле `order_types` [коллекции откликов и приглашений](#tag/Otklikipriglasheniya-rabotodatelya/operation/get-negotiations). Не все типы сортировки из списка доступны для изменения"
          }
        }
      },
      "LocalesLocales": {
        "title": "Список доступных локалей",
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/LocalesLocaleItem"
        }
      },
      "LocalesLocaleItem": {
        "title": "Локаль",
        "allOf": [
          {
            "$ref": "#/components/schemas/LocalesResumeLocaleItem"
          },
          {
            "type": "object",
            "required": [
              "id",
              "name",
              "current"
            ],
            "properties": {
              "current": {
                "type": "boolean",
                "description": "Для текущей локали `true` , `false` для остальных"
              }
            }
          }
        ]
      },
      "LocalesResumeLocaleItem": {
        "title": "Локализация",
        "required": [
          "id",
          "name"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "Идентификатор локали"
          },
          "name": {
            "type": "string",
            "description": "Имя локали"
          }
        }
      },
      "ErrorsSavedSearchForbiddenErrors": {
        "title": "Ошибки",
        "description": "Информация о возникших ошибках",
        "allOf": [
          {
            "$ref": "#/components/schemas/ErrorsCommonErrorRequestId"
          },
          {
            "type": "object",
            "required": [
              "errors"
            ],
            "properties": {
              "description": {
                "type": "string",
                "description": "Описание ошибки",
                "example": "Forbidden"
              },
              "errors": {
                "type": "array",
                "description": "Массив с данными ошибок",
                "minItems": 1,
                "items": {
                  "$ref": "#/components/schemas/ErrorsSavedSearchForbiddenError"
                }
              }
            }
          }
        ]
      },
      "ErrorsSavedSearchForbiddenError": {
        "title": "Ошибка",
        "type": "object",
        "additionalProperties": false,
        "required": [
          "type"
        ],
        "properties": {
          "allowed_accounts": {
            "type": "array",
            "description": "Список доступных для токена аккаунтов менеджера в случае, если используемый рабочий аккаунт заблокирован.\nАктуально только в случае авторизации работодателя\n",
            "minItems": 1,
            "items": {
              "$ref": "#/components/schemas/ManagerAccount"
            }
          },
          "type": {
            "type": "string",
            "description": "Текстовый идентификатор типа ошибки",
            "example": "oauth",
            "enum": [
              "saved_searches",
              "forbidden",
              "oauth"
            ]
          },
          "value": {
            "type": "string",
            "description": "Возможные ошибки:\n* `cant_send_to_yourself` — Нельзя передать сохраненный поиск самому себе\n* `user_auth_expected` — Передана авторизация приложения, метод требует [авторизации пользователя](#section/Avtorizaciya/Avtorizaciya-polzovatelya)\n",
            "example": "user_auth_expected",
            "enum": [
              "cant_send_to_yourself",
              "user_auth_expected"
            ]
          }
        }
      },
      "ErrorsResumeVisibilityErrors": {
        "title": "Ошибки в параметрах запроса",
        "description": "Информация о возникших ошибках",
        "allOf": [
          {
            "$ref": "#/components/schemas/ErrorsCommonErrorRequestId"
          },
          {
            "type": "object",
            "required": [
              "errors"
            ],
            "properties": {
              "errors": {
                "type": "array",
                "description": "Массив с данными ошибок",
                "minItems": 1,
                "items": {
                  "$ref": "#/components/schemas/ErrorsResumeVisibilityError"
                }
              }
            }
          }
        ]
      },
      "ErrorsResumeVisibilityError": {
        "title": "Ошибка в параметре запроса",
        "type": "object",
        "additionalProperties": false,
        "required": [
          "type",
          "value"
        ],
        "properties": {
          "type": {
            "type": "string",
            "description": "Текстовый идентификатор типа ошибки",
            "example": "bad_argument",
            "enum": [
              "bad_argument",
              "resume_visibility_list"
            ]
          },
          "value": {
            "type": "string",
            "description": "Название поля с ошибкой:\n\n- `per_page` — передано невалидное количество элементов на странице (максимум 100).\n- `unknown_employer` — передан неизвестный идентификатор работодателя.\n- `limit_exceeded` — превышен лимит списка видимости.\n- `too_many_employers` — передано слишком много работодателей.\n- `id` — передан невалидный идентификатор работодателя\n",
            "example": "per_page",
            "enum": [
              "per_page",
              "unknown_employer",
              "limit_exceeded",
              "too_many_employers"
            ]
          }
        }
      },
      "VacanciesDeletedVacancyListResponse": {
        "title": "Успешный ответ",
        "allOf": [
          {
            "$ref": "#/components/schemas/_IncludesPagination"
          },
          {
            "$ref": "#/components/schemas/VacanciesDeletedVacancyListItems"
          }
        ]
      },
      "VacanciesDeletedVacancyListItems": {
        "title": "Список удаленных вакансий",
        "required": [
          "items"
        ],
        "properties": {
          "items": {
            "type": "array",
            "description": "Список удаленных вакансий",
            "items": {
              "$ref": "#/components/schemas/VacanciesVacancyArchived"
            }
          }
        }
      },
      "VacanciesVacancyArchived": {
        "title": "Представление вакансии в архиве",
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/VacanciesVacancyShort"
          },
          {
            "$ref": "#/components/schemas/VacanciesVacancyArchivedFields"
          }
        ]
      },
      "VacanciesVacancyArchivedFields": {
        "title": "Поля для архивной вакансии",
        "type": "object",
        "required": [
          "counters",
          "archived_at",
          "created_at"
        ],
        "properties": {
          "archived_at": {
            "type": "string",
            "description": "Дата и время архивации вакансии"
          },
          "counters": {
            "$ref": "#/components/schemas/VacancyCountersForArchivedOrHidden"
          },
          "created_at": {
            "type": "string",
            "description": "Дата и время публикации вакансии"
          },
          "sort_point_distance": {
            "type": "number",
            "description": "Расстояние в метрах между центром сортировки (заданной параметрами `sort_point_lat`, `sort_point_lng`) и указанным в вакансии адресом. В случае, если в адресе указаны только станции метро, выдается расстояние между центром сортировки и средней геометрической точкой указанных станций.\n\nЗначение `sort_point_distance` выдается только в случае, если заданы параметры `sort_point_lat`, `sort_point_lng`, `order_by=distance`\n",
            "nullable": true
          }
        }
      },
      "VacancyCountersForArchivedOrHidden": {
        "title": "Счетчики для вакансии",
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/VacancyCounters"
          },
          {
            "type": "object",
            "properties": {
              "invitations_and_responses": {
                "type": "number",
                "description": "Количество откликов и приглашений на вакансию"
              }
            }
          }
        ]
      },
      "VacanciesVacancyShort": {
        "title": "Сокращенное представление вакансии",
        "type": "object",
        "required": [
          "id",
          "premium",
          "name",
          "department",
          "response_letter_required",
          "area",
          "salary",
          "type",
          "published_at",
          "archived",
          "apply_alternate_url",
          "url",
          "alternate_url",
          "relations",
          "employer",
          "has_test"
        ],
        "properties": {
          "address": {
            "$ref": "#/components/schemas/VacancyAddressRawOutput"
          },
          "alternate_url": {
            "type": "string",
            "description": "Ссылка на представление вакансии на сайте"
          },
          "apply_alternate_url": {
            "type": "string",
            "description": "Ссылка на отклик на вакансию на сайте"
          },
          "archived": {
            "type": "boolean",
            "description": "Находится ли данная вакансия в архиве"
          },
          "area": {
            "$ref": "#/components/schemas/_IncludesArea"
          },
          "department": {
            "$ref": "#/components/schemas/VacanciesObjectsDepartment"
          },
          "employer": {
            "$ref": "#/components/schemas/VacanciesObjectsEmployer"
          },
          "has_test": {
            "type": "boolean",
            "description": "Информация о наличии прикрепленного тестового задании к вакансии"
          },
          "id": {
            "type": "string",
            "description": "Идентификатор вакансии"
          },
          "name": {
            "type": "string",
            "description": "Название вакансии"
          },
          "premium": {
            "type": "boolean",
            "description": "Является ли данная вакансия премиум-вакансией"
          },
          "published_at": {
            "type": "string",
            "description": "Дата и время публикации вакансии"
          },
          "relations": {
            "type": "array",
            "description": "Возвращает связи соискателя с вакансией. Значения из поля `vacancy_relation` в [справочнике полей](#tag/Obshie-spravochniki/operation/get-dictionaries)",
            "items": {
              "$ref": "#/components/schemas/VacancyRelationItem"
            }
          },
          "response_letter_required": {
            "type": "boolean",
            "description": "Обязательно ли заполнять сообщение при отклике на вакансию"
          },
          "response_url": {
            "type": "string",
            "description": "URL отклика для прямых вакансий (`type.id=direct`)",
            "nullable": true
          },
          "salary": {
            "$ref": "#/components/schemas/VacancySalary"
          },
          "show_logo_in_search": {
            "type": "boolean",
            "description": "Отображать ли лого для вакансии в поисковой выдаче",
            "nullable": true
          },
          "type": {
            "$ref": "#/components/schemas/VacancyTypeOutput"
          },
          "url": {
            "type": "string",
            "description": "URL вакансии"
          }
        }
      },
      "ResumesAccessTypes": {
        "title": "Типы видимости резюме",
        "type": "object",
        "required": [
          "items"
        ],
        "properties": {
          "auto_hide_time_options": {
            "type": "array",
            "description": "Варианты времени автоскрытия резюме при неактивности пользователя. Возвращается только для пользователей rabota.by",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ResumesAutoHideTimeOptions"
            }
          },
          "items": {
            "type": "array",
            "description": "Доступные типы видимости резюме",
            "items": {
              "$ref": "#/components/schemas/ResumesAccessTypesItem"
            }
          }
        }
      },
      "ResumesAccessTypesItem": {
        "title": "Тип видимости",
        "type": "object",
        "required": [
          "id",
          "name"
        ],
        "properties": {
          "active": {
            "type": "boolean",
            "description": "Выбран ли тип видимости",
            "nullable": true
          },
          "id": {
            "type": "string",
            "description": "Идентификатор типа видимости"
          },
          "limit": {
            "type": "number",
            "description": "Максимальное количество компаний в списке видимости. Возвращается только для типов `blacklist` и `whitelist`",
            "nullable": true
          },
          "list_url": {
            "type": "string",
            "description": "Ссылка на список видимости. Возвращается только для типов `blacklist` и `whitelist`",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Имя типа видимости"
          },
          "total": {
            "type": "number",
            "description": "Количество компаний, добавленных в соответствующий список видимости. Возвращается только для типов `blacklist` и `whitelist`",
            "nullable": true
          }
        }
      },
      "ResumesAutoHideTimeOptions": {
        "title": "Вариант автоскрытия",
        "type": "object",
        "required": [
          "id",
          "name"
        ],
        "properties": {
          "active": {
            "type": "boolean",
            "description": "Выбран ли вариант автоскрытия",
            "nullable": true
          },
          "id": {
            "type": "string",
            "description": "Идентификатор варианта автоскрытия"
          },
          "name": {
            "type": "string",
            "description": "Название варианта автоскрытия"
          }
        }
      },
      "ErrorsResumeBadArgTooManyResumesErrors": {
        "title": "Ошибки",
        "anyOf": [
          {
            "$ref": "#/components/schemas/ErrorsCommonBadArgumentErrors"
          },
          {
            "$ref": "#/components/schemas/ErrorsResumeAddEditErrors"
          },
          {
            "$ref": "#/components/schemas/ErrorsResumeTooManyResumesErrors"
          }
        ]
      },
      "ErrorsResumeTooManyResumesErrors": {
        "title": "Ошибка при создании резюме",
        "description": "Информация о возникших ошибках",
        "allOf": [
          {
            "$ref": "#/components/schemas/ErrorsCommonErrorRequestId"
          },
          {
            "type": "object",
            "required": [
              "errors"
            ],
            "properties": {
              "errors": {
                "type": "array",
                "description": "Массив с данными ошибок",
                "minItems": 1,
                "items": {
                  "$ref": "#/components/schemas/ErrorsResumeTooManyResumesError"
                }
              }
            }
          }
        ]
      },
      "ErrorsResumeTooManyResumesError": {
        "title": "Ошибка при создании резюме",
        "type": "object",
        "description": "Превышено максимальное количество резюме",
        "additionalProperties": false,
        "required": [
          "type",
          "value"
        ],
        "properties": {
          "type": {
            "type": "string",
            "description": "Текстовый идентификатор типа ошибки",
            "example": "resumes",
            "enum": [
              "resumes"
            ]
          },
          "value": {
            "type": "string",
            "description": "Значение ошибки",
            "example": "total_limit_exceeded",
            "enum": [
              "total_limit_exceeded"
            ]
          }
        }
      },
      "ErrorsResumeAddEditErrors": {
        "title": "Ошибки при создании или редактировании резюме",
        "description": "Информация о возникших ошибках",
        "allOf": [
          {
            "$ref": "#/components/schemas/ErrorsCommonErrorRequestId"
          },
          {
            "type": "object",
            "required": [
              "errors"
            ],
            "properties": {
              "errors": {
                "type": "array",
                "description": "Массив с данными ошибок",
                "minItems": 1,
                "items": {
                  "$ref": "#/components/schemas/ErrorsResumeAddEditError"
                }
              }
            }
          }
        ]
      },
      "ErrorsResumeAddEditError": {
        "title": "Ошибка при создании или редактировании резюме",
        "type": "object",
        "additionalProperties": false,
        "required": [
          "type",
          "value",
          "reason",
          "description",
          "pointer"
        ],
        "properties": {
          "description": {
            "type": "string",
            "description": "Описание ошибки для пользователя",
            "example": "Значение ниже допустимого"
          },
          "pointer": {
            "type": "string",
            "description": "Путь до параметра, в котором возникла ошибка.\n\nДля указания параметра используется формат JsonPointer [RFC 6901](https://tools.ietf.org/html/rfc6901)\n",
            "example": "/education/additional/1/year"
          },
          "reason": {
            "type": "string",
            "description": "Причина ошибки. Возможные значения:\n\n  * `required` — поле является обязательным для заполнения.\n  * `not_found` — не найдено значение по переданному ID.\n  * `faculty_without_university` — нельзя установить факультет без университета.\n  * `not_in_dictionary` — не найдено значение по переданному ID в справочнике.\n  * `not_a_leaf` — значение не должно содержать потомков.\n  * `end_date_before_start_date` — значение `end` меньше `start`.\n  * `not_country` — значение `area` должно быть страной (см. [справочник стран](#tag/Obshie-spravochniki/operation/get-countries)).\n  * `more_than_one_native_language` — указано более одного родного языка.\n  * `must_contain_unique` — переданные значения должны быть уникальны.\n  * `from_different_profareas` — переданы значения из разных отраслей.\n  * `duplicate` — значение уже было использовано.\n  * `bad_image_type` — передано значение изображения неправильного типа (для `portfolio` необходимы значения из [GET /artifacts/portfolio](#tag/Rabota-s-artefaktami/operation/get-artifacts-portfolio), для photo — [GET /artifacts/photo](#tag/Rabota-s-artefaktami/operation/get-artifact-photos)) .\n  * `processing` — объект в процессе обработки.\n  * `preferred_must_be_unique` — предпочитаемый тип связи должен быть уникальным.\n  * `preferred_contact_not_specified` — предпочитаемый тип связи не указан или не указано значение контакта.\n  * `need_country_city_number_or_formatted` — телефон в контактах указан в неверном формате (см. [условия заполнения контактов в резюме](#tag/Rezyume.-Usloviya-zapolneniya-polej/operation/get-new-resume-conditions)).\n  * `invalid` — ошибка в значении поля (поля должны соответствовать [условиям заполнения](#tag/Rezyume.-Usloviya-zapolneniya-polej/operation/get-resume-conditions)).\n  * `greater_than_max` — значение больше максимума .\n  * `less_than_min` — значение меньше минимума.\n  * `earlier_than_min` — указанная дата раньше минимально возможной.\n  * `later_than_max` — указанная дата позже максимально возможной.\n  * `length_less_than_min` — количество символов в поле меньше минимума.\n  * `length_greater_than_max` — количество символов в поле больше максимума.\n  * `size_less_than_min` — количество элементов меньше минимума.\n  * `size_greater_than_max` — количество элементов больше максимума.\n  * `send_metro_without_area` — не передано значение поля `area` при заполненном метро.\n  * `not_belong_this_city` — указанного метро нет в указанном городе.\n  * `required_with_not_started_career` — необходимо отправлять опыт работы, если специализация не начало карьеры.\n  * `not_match_regexp` — значение не соответствует регулярному выражению.\n  * `more_than_one` — передано более одного email.\n  * `not_available` — недопустимое значение\n",
            "example": "not_available"
          },
          "type": {
            "type": "string",
            "description": "Текстовый идентификатор типа ошибки",
            "example": "bad_json_data",
            "enum": [
              "bad_json_data"
            ]
          },
          "value": {
            "type": "string",
            "description": "Название поля с ошибкой",
            "example": "year"
          }
        }
      },
      "VacanciesPreferredNegotiationsOrder": {
        "title": "Предпочитаемый способ сортировки откликов",
        "type": "object",
        "required": [
          "order_type"
        ],
        "properties": {
          "order_type": {
            "description": "Тип сортировки",
            "allOf": [
              {
                "$ref": "#/components/schemas/_IncludesIdName"
              }
            ]
          }
        }
      },
      "ErrorsEmployerManagerBadArgumentErrors": {
        "title": "Ошибки в параметрах запроса",
        "description": "Информация о возникших ошибках",
        "allOf": [
          {
            "$ref": "#/components/schemas/ErrorsCommonErrorRequestId"
          },
          {
            "type": "object",
            "required": [
              "errors"
            ],
            "properties": {
              "errors": {
                "type": "array",
                "description": "Массив с данными ошибок",
                "minItems": 1,
                "items": {
                  "$ref": "#/components/schemas/ErrorsEmployerManagerBadArgumentError"
                }
              }
            }
          }
        ]
      },
      "ErrorsEmployerManagerBadArgumentError": {
        "title": "Ошибка в параметре запроса",
        "type": "object",
        "additionalProperties": false,
        "required": [
          "type"
        ],
        "properties": {
          "reason": {
            "type": "string",
            "description": "Описание ошибки",
            "example": "too_long_value"
          },
          "type": {
            "type": "string",
            "description": "Текстовый идентификатор типа ошибки",
            "example": "bad_argument",
            "enum": [
              "bad_argument",
              "bad_request",
              "managers"
            ]
          },
          "value": {
            "type": "string",
            "description": "Название поля с ошибкой",
            "example": "resume_id"
          }
        }
      },
      "VacancyDraftVacancyDraftItems": {
        "title": "Успешный ответ",
        "required": [
          "items",
          "found",
          "page",
          "pages",
          "per_page"
        ],
        "properties": {
          "found": {
            "title": "Количество найденных черновиков",
            "type": "number"
          },
          "items": {
            "type": "array",
            "description": "Список черновиков",
            "items": {
              "$ref": "#/components/schemas/VacancyDraftVacancyDraftItem"
            }
          },
          "page": {
            "title": "Номер текущей страницы",
            "type": "number"
          },
          "pages": {
            "title": "Количество страниц с черновиками",
            "type": "number"
          },
          "per_page": {
            "title": "Количество элементов на страницу",
            "type": "number"
          }
        }
      },
      "VacancyDraftVacancyDraftItem": {
        "title": "Черновик",
        "allOf": [
          {
            "$ref": "#/components/schemas/VacancyDraftVacancyDraftBase"
          },
          {
            "type": "object",
            "required": [
              "areas",
              "publication_type",
              "billing_type",
              "vacancy_type",
              "url"
            ],
            "properties": {
              "areas": {
                "type": "array",
                "description": "Коды и названия регионов (фед. округа, субъекты федерации, города)",
                "minItems": 1,
                "items": {
                  "$ref": "#/components/schemas/VacancyAreaOutput"
                }
              },
              "assigned_manager": {
                "$ref": "#/components/schemas/VacancyDraftAssignedManager"
              },
              "billing_type": {
                "$ref": "#/components/schemas/VacancyBillingTypeOutput"
              },
              "name": {
                "type": "string",
                "description": "Название вакансии"
              },
              "publication_type": {
                "type": "string",
                "description": "Тип публикации (справочник [vacancy_billing_type](#tag/Obshie-spravochniki/operation/get-dictionaries))",
                "deprecated": true
              },
              "url": {
                "type": "string",
                "description": "Url для запроса полной информации черновика"
              },
              "vacancy_type": {
                "type": "string",
                "description": "Тип вакансии (справочник [vacancy_type](#tag/Obshie-spravochniki/operation/get-dictionaries))",
                "nullable": true
              }
            }
          }
        ]
      },
      "AuthCode": {
        "title": "Параметры для получения токена пользователя",
        "type": "object",
        "additionalProperties": false,
        "required": [
          "grant_type",
          "client_id",
          "client_secret",
          "redirect_uri",
          "code"
        ],
        "properties": {
          "client_id": {
            "type": "string",
            "description": "Идентификатор, полученный при [создании приложения](https://dev.hh.ru/admin)",
            "minLength": 1,
            "example": "ETVQdMs2n9VKw7SMXkh9nX5H"
          },
          "client_secret": {
            "type": "string",
            "description": "Защищенный ключ, полученный при [создании приложения](https://dev.hh.ru/admin)",
            "minLength": 1,
            "example": "95dNjB8FmtxQsmygm6dtEy53"
          },
          "code": {
            "type": "string",
            "description": "Значение `authorization_code`, полученное при [перенаправлении пользователя](#get-authorization_code)\n",
            "minLength": 1,
            "example": "29CtxMcaA8pRFDYyC8e8Gkm4"
          },
          "grant_type": {
            "type": "string",
            "description": "Способ запроса токена",
            "example": "authorization_code",
            "enum": [
              "authorization_code"
            ]
          },
          "redirect_uri": {
            "type": "string",
            "description": "Uri для перенаправления пользователя после авторизации. Если не указать, используется из настроек приложения. При наличии происходит валидация значения. Вероятнее всего, потребуется сделать urlencode значения параметра\n",
            "minLength": 1,
            "example": "http://www.example.com/oauth"
          }
        }
      },
      "ResumesResumeViewHistoryResponse": {
        "title": "История просмотра резюме",
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/_IncludesPagination"
          },
          {
            "$ref": "#/components/schemas/ResumesResumeViewHistory"
          }
        ]
      },
      "ResumesResumeViewHistory": {
        "title": "История просмотров резюме",
        "type": "object",
        "required": [
          "items",
          "resume"
        ],
        "properties": {
          "items": {
            "type": "array",
            "description": "Список просмотров резюме",
            "items": {
              "$ref": "#/components/schemas/ResumesResumeViewHistoryItem"
            }
          },
          "resume": {
            "type": "object",
            "description": "Короткое представление резюме",
            "allOf": [
              {
                "$ref": "#/components/schemas/ResumeResumeNano"
              },
              {
                "$ref": "#/components/schemas/_IncludesUrl"
              }
            ]
          }
        }
      },
      "ResumesResumeViewHistoryItem": {
        "title": "Информация о просмотре резюме",
        "type": "object",
        "required": [
          "created_at",
          "viewed",
          "employer"
        ],
        "properties": {
          "created_at": {
            "type": "string",
            "description": "Дата создания записи (дата просмотра резюме работодателем)"
          },
          "employer": {
            "type": "object",
            "description": "Информация о компании.\n\nЕсли резюме просмотрено анонимным работодателем, либо из откликов к анонимной вакансии, объект будет содержать только поле `name`\n",
            "anyOf": [
              {
                "$ref": "#/components/schemas/EmployersEmployerItemShort"
              },
              {
                "$ref": "#/components/schemas/_IncludesName"
              }
            ]
          },
          "viewed": {
            "type": "boolean",
            "description": "Отметка о просмотре записи"
          }
        }
      },
      "EmployersEmployerItemShort": {
        "title": "Работодатель",
        "required": [
          "id",
          "name",
          "url",
          "alternate_url",
          "vacancies_url"
        ],
        "properties": {
          "alternate_url": {
            "type": "string",
            "description": "Ссылка на описание работодателя на сайте"
          },
          "id": {
            "type": "string",
            "description": "Идентификатор работодателя"
          },
          "logo_urls": {
            "type": "object",
            "description": "Ссылки на изображения логотипов работодателя разных размеров. `original` — это необработанный логотип, который может быть большого размера. Если изначально загруженный компанией логотип меньше, чем 240px и/или 90px по меньшей стороне, то в соответствующих ключах будут ссылки на изображения оригинального размера. Объект может быть `null`, если компания не загрузила логотип. Клиент должен предусмотреть возможность отсутствия логотипа по указанной ссылке (ответ с кодом `404 Not Found`). Логотипы 90 и 240 присутствуют не во всех компаниях",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/_IncludesLogoUrls"
              },
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              }
            ]
          },
          "name": {
            "type": "string",
            "description": "Название работодателя"
          },
          "url": {
            "type": "string",
            "description": "URL для получения полного описания работодателя"
          },
          "vacancies_url": {
            "type": "string",
            "description": "URL для получения поисковой выдачи с вакансиями данного работодателя"
          }
        }
      },
      "_IncludesName": {
        "title": "Название",
        "type": "object",
        "required": [
          "name"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "Название"
          }
        }
      },
      "MetroCityMetroItem": {
        "title": "Город",
        "required": [
          "id",
          "name",
          "lines"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "Идентификатор города"
          },
          "lines": {
            "type": "array",
            "description": "Список линий метро в городе",
            "items": {
              "$ref": "#/components/schemas/MetroMetroLineWithStations"
            }
          },
          "name": {
            "type": "string",
            "description": "Название города"
          }
        }
      },
      "MetroMetroLineWithStations": {
        "title": "Линия метро со станциями",
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/MetroMetroLine"
          },
          {
            "type": "object",
            "required": [
              "stations"
            ],
            "properties": {
              "stations": {
                "type": "array",
                "description": "Список станций метро на линии",
                "items": {
                  "$ref": "#/components/schemas/MetroLineStation"
                }
              }
            }
          }
        ]
      },
      "MetroMetroLine": {
        "title": "Линия метро",
        "required": [
          "hex_color",
          "id",
          "name"
        ],
        "properties": {
          "hex_color": {
            "type": "string",
            "description": "Цвет линии в HEX-формате `RRGGBB` (от `000000` до `FFFFFF`)",
            "pattern": "^[0-9A-Fa-f]{6}$"
          },
          "id": {
            "type": "string",
            "description": "Идентификатор линии"
          },
          "name": {
            "type": "string",
            "description": "Название линии"
          }
        }
      },
      "MetroLineStation": {
        "title": "Станция метро",
        "required": [
          "id",
          "name",
          "lat",
          "lng",
          "order",
          "line"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "Идентификатор станции"
          },
          "lat": {
            "type": "number",
            "description": "Широта расположения станции"
          },
          "line": {
            "description": "Линия метро",
            "allOf": [
              {
                "$ref": "#/components/schemas/MetroMetroLine"
              }
            ]
          },
          "lng": {
            "type": "number",
            "description": "Долгота расположения станции"
          },
          "name": {
            "type": "string",
            "description": "Название станции"
          },
          "order": {
            "type": "integer",
            "description": "Порядковый номер станции на линии, начиная с 0"
          }
        }
      },
      "ResumesResumeVisibilityListSearchResponse": {
        "title": "Найденные работодатели",
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/_IncludesPagination"
          },
          {
            "$ref": "#/components/schemas/ResumesResumeVisibilityListSearchProperties"
          }
        ]
      },
      "ResumesResumeVisibilityListSearchProperties": {
        "title": "Список видимости резюме",
        "type": "object",
        "required": [
          "items"
        ],
        "properties": {
          "items": {
            "type": "array",
            "description": "Список работодателей",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/ResumesGetResumeVisibilityListItem"
                },
                {
                  "$ref": "#/components/schemas/ResumesSelectedObject"
                }
              ]
            }
          }
        }
      },
      "ResumesSelectedObject": {
        "title": "Присутствие работодателя в списке видимости резюме",
        "type": "object",
        "required": [
          "selected"
        ],
        "properties": {
          "selected": {
            "type": "boolean",
            "description": "Присутствует ли работодатель в списке видимости резюме"
          }
        }
      },
      "ResumesGetResumeVisibilityListItem": {
        "title": "Список работодателей",
        "type": "object",
        "required": [
          "id",
          "name",
          "url",
          "alternate_url",
          "logo_urls"
        ],
        "properties": {
          "alternate_url": {
            "type": "string",
            "description": "Ссылка на описание работодателя на сайте"
          },
          "id": {
            "type": "string",
            "description": "Идентификатор работодателя"
          },
          "logo_urls": {
            "description": "Ссылка на логотип работодателя. Клиент должен предусмотреть вероятность отсутствия ресурса по указанной ссылке",
            "$ref": "#/components/schemas/_IncludesLogoUrls90"
          },
          "name": {
            "type": "string",
            "description": "Название работодателя"
          },
          "url": {
            "type": "string",
            "description": "Ссылка на детальное описание работодателя"
          }
        }
      },
      "_IncludesLogoUrls90": {
        "title": "Ссылка на логотип",
        "type": "object",
        "required": [
          "90"
        ],
        "properties": {
          "90": {
            "type": "string",
            "description": "URL логотипа с размером менее 90px по меньшей стороне"
          }
        }
      },
      "SuggestsErrors": {
        "title": "Ошибка",
        "allOf": [
          {
            "$ref": "#/components/schemas/ErrorsCommonErrorRequestId"
          },
          {
            "type": "object",
            "required": [
              "errors"
            ],
            "properties": {
              "bad_argument": {
                "type": "string",
                "deprecated": true,
                "enum": [
                  "locale",
                  "text",
                  "area_id"
                ]
              },
              "bad_arguments": {
                "type": "array",
                "deprecated": true,
                "items": {
                  "type": "object",
                  "properties": {
                    "description": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string",
                      "description": "Поле, в котором допущена ошибка. \nВозможные значения:\n* `locale` — указан неподдерживаемый язык\n* `text` — искомый текст должен быть длиной от 2 до 30000 символов\n* `area_id` - указан не валидный идентификатор\n",
                      "enum": [
                        "locale",
                        "text",
                        "area_id"
                      ]
                    }
                  }
                }
              },
              "description": {
                "type": "string",
                "deprecated": true
              },
              "errors": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": [
                        "bad_argument"
                      ]
                    },
                    "value": {
                      "type": "string",
                      "description": "Поле, в котором допущена ошибка. \nВозможные значения:\n* `locale` — указан неподдерживаемый язык\n* `text` — искомый текст должен быть длиной от 2 до 30000 символов\n* `area_id` - указан не валидный идентификатор\n",
                      "enum": [
                        "locale",
                        "text",
                        "area_id"
                      ]
                    }
                  }
                }
              }
            }
          }
        ]
      },
      "VacanciesVacanciesFavoritedResponse": {
        "title": "Отобранные вакансии",
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/_IncludesPagination"
          },
          {
            "$ref": "#/components/schemas/VacanciesVacanciesFavorited"
          }
        ]
      },
      "VacanciesVacanciesFavorited": {
        "title": "Отобранные вакансии",
        "properties": {
          "items": {
            "type": "array",
            "description": "Массив отобранных вакансий",
            "items": {
              "$ref": "#/components/schemas/VacanciesVacanciesFavoritedItem"
            }
          }
        }
      },
      "VacanciesVacanciesFavoritedItem": {
        "title": "Отобранная вакансия",
        "type": "object",
        "required": [
          "id",
          "premium",
          "name",
          "department",
          "has_test",
          "response_letter_required",
          "area",
          "salary",
          "type",
          "published_at",
          "archived",
          "apply_alternate_url",
          "url",
          "alternate_url",
          "relations",
          "employer"
        ],
        "properties": {
          "address": {
            "$ref": "#/components/schemas/VacancyAddressRawOutput"
          },
          "adv_response_url": {
            "type": "string",
            "description": "URL для регистрации нажатия кнопки отклика",
            "nullable": true
          },
          "alternate_url": {
            "type": "string",
            "description": "Ссылка на представление вакансии на сайте"
          },
          "apply_alternate_url": {
            "type": "string",
            "description": "Ссылка на отклик на вакансию на сайте"
          },
          "archived": {
            "type": "boolean",
            "description": "Находится ли данная вакансия в архиве"
          },
          "area": {
            "$ref": "#/components/schemas/_IncludesArea"
          },
          "created_at": {
            "type": "string",
            "description": "Дата и время публикации вакансии"
          },
          "department": {
            "$ref": "#/components/schemas/VacanciesObjectsDepartment"
          },
          "employer": {
            "$ref": "#/components/schemas/VacanciesEmployerPublic"
          },
          "has_test": {
            "type": "boolean",
            "description": "Информация о наличии прикрепленного тестового задании к вакансии"
          },
          "id": {
            "type": "string",
            "description": "Идентификатор вакансии"
          },
          "insider_interview": {
            "$ref": "#/components/schemas/VacanciesObjectsInsiderInterview"
          },
          "name": {
            "$ref": "#/components/schemas/VacancyName"
          },
          "negotiations_url": {
            "type": "string",
            "description": "Ссылка для получения списка откликов/приглашений",
            "nullable": true
          },
          "premium": {
            "type": "boolean",
            "description": "Является ли данная вакансия премиум-вакансией"
          },
          "published_at": {
            "type": "string",
            "description": "Дата и время публикации вакансии"
          },
          "relations": {
            "$ref": "#/components/schemas/VacancyRelations"
          },
          "response_letter_required": {
            "$ref": "#/components/schemas/VacancyResponseLetterRequired"
          },
          "response_url": {
            "$ref": "#/components/schemas/VacancyResponseUrl"
          },
          "salary": {
            "$ref": "#/components/schemas/VacancySalary"
          },
          "sort_point_distance": {
            "$ref": "#/components/schemas/VacancySortPointDistance"
          },
          "suitable_resumes_url": {
            "type": "string",
            "description": "Подходящие резюме на вакансию",
            "nullable": true
          },
          "type": {
            "$ref": "#/components/schemas/VacancyTypeOutput"
          },
          "url": {
            "type": "string",
            "description": "URL вакансии"
          }
        }
      },
      "LocalesResumeLocales": {
        "title": "Список доступных локалей",
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/LocalesResumeLocaleItem"
        }
      },
      "ErrorsDictionariesBadArgumentErrors": {
        "title": "Неподдерживаемое значение падежа",
        "description": "Информация о возникших ошибках",
        "allOf": [
          {
            "$ref": "#/components/schemas/ErrorsCommonErrorRequestId"
          },
          {
            "type": "object",
            "required": [
              "errors"
            ],
            "properties": {
              "errors": {
                "type": "array",
                "description": "Массив с данными ошибок",
                "minItems": 1,
                "items": {
                  "$ref": "#/components/schemas/ErrorsDictionariesBadArgumentError"
                }
              }
            }
          }
        ]
      },
      "ErrorsDictionariesBadArgumentError": {
        "title": "Ошибка в параметре запроса",
        "type": "object",
        "additionalProperties": false,
        "required": [
          "type",
          "value"
        ],
        "properties": {
          "type": {
            "type": "string",
            "description": "Текстовый идентификатор типа ошибки",
            "example": "bad_argument",
            "enum": [
              "bad_argument"
            ]
          },
          "value": {
            "type": "string",
            "description": "Название поля с ошибкой",
            "example": "wrong_case"
          }
        }
      },
      "DictionariesSalaryStatisticsEmployeeLevelResponse": {
        "title": "Список уровней компетенций",
        "type": "array",
        "description": "Список уровней компетенций",
        "items": {
          "$ref": "#/components/schemas/_IncludesIdNameDesc"
        }
      },
      "_IncludesIdNameDesc": {
        "title": "Объект с идентификатором, названием и описанием",
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/_IncludesId"
          },
          {
            "$ref": "#/components/schemas/_IncludesNameDescription"
          }
        ]
      },
      "_IncludesNameDescription": {
        "title": "Объект",
        "type": "object",
        "required": [
          "name",
          "description"
        ],
        "properties": {
          "description": {
            "type": "string",
            "description": "Описание"
          },
          "name": {
            "type": "string",
            "description": "Название"
          }
        }
      },
      "ErrorsCommonCaptchaErrors": {
        "title": "Плохая авторизация",
        "description": "Информация о возникших ошибках",
        "allOf": [
          {
            "$ref": "#/components/schemas/ErrorsCommonErrorRequestId"
          },
          {
            "type": "object",
            "required": [
              "errors"
            ],
            "properties": {
              "description": {
                "type": "string",
                "description": "Описание ошибки",
                "example": "Forbidden"
              },
              "errors": {
                "type": "array",
                "description": "Массив с данными ошибок",
                "minItems": 1,
                "items": {
                  "$ref": "#/components/schemas/ErrorsCommonCaptchaError"
                }
              }
            }
          }
        ]
      },
      "VacanciesVacancyApplicationBody": {
        "title": "Тело запроса",
        "required": [
          "vacancy_id",
          "resume_id"
        ],
        "properties": {
          "message": {
            "type": "string",
            "description": "Сопроводительное письмо к отклику.\n\nЯвляется обязательным, если в вакансии указано, что обязательно сопроводительное письмо.\n\nМаксимальная длина — 10000 символов\n",
            "nullable": true
          },
          "resume_id": {
            "type": "string",
            "description": "Идентификатор резюме, которым производится отклик"
          },
          "vacancy_id": {
            "type": "string",
            "description": "Идентификатор вакансии, на которую происходит отклик"
          }
        }
      },
      "EmployersEmployerVacancyAreasResponse": {
        "title": "Успешный ответ",
        "allOf": [
          {
            "$ref": "#/components/schemas/EmployersEmployerVacancyAreasItems"
          },
          {
            "$ref": "#/components/schemas/_IncludesPagination"
          }
        ]
      },
      "EmployersEmployerVacancyAreasItems": {
        "title": "Список регионов",
        "required": [
          "items"
        ],
        "properties": {
          "items": {
            "type": "array",
            "description": "Список регионов",
            "items": {
              "$ref": "#/components/schemas/_IncludesArea"
            }
          }
        }
      },
      "SuggestsAreas": {
        "title": "Подсказки по регионам",
        "type": "object",
        "description": "Подсказки по регионам",
        "additionalProperties": false,
        "required": [
          "items"
        ],
        "properties": {
          "items": {
            "title": "Массив регионов",
            "type": "array",
            "description": "Информация о найденных регионах",
            "items": {
              "$ref": "#/components/schemas/SuggestsAreasItem"
            }
          }
        }
      },
      "SuggestsAreasItem": {
        "title": "Регион",
        "type": "object",
        "required": [
          "id",
          "text",
          "url"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "Идентификатор региона"
          },
          "text": {
            "type": "string",
            "description": "Название региона"
          },
          "url": {
            "type": "string",
            "description": "URL региона"
          }
        }
      },
      "ErrorsNegotiationHideResponseForbiddenErrors": {
        "title": "Ошибки",
        "anyOf": [
          {
            "$ref": "#/components/schemas/ErrorsCommonBadAuthorizationErrors"
          },
          {
            "$ref": "#/components/schemas/ErrorsNegotiationHideResponseErrors"
          }
        ]
      },
      "DictionariesAreaResponse": {
        "title": "Список регионов",
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/DictionariesAreaItem"
        }
      },
      "DictionariesAreaItem": {
        "title": "Регион",
        "required": [
          "id",
          "name",
          "areas"
        ],
        "properties": {
          "areas": {
            "type": "array",
            "description": "Дочерние регионы",
            "items": {
              "$ref": "#/components/schemas/DictionariesAreaItem"
            }
          },
          "id": {
            "type": "string",
            "description": "Идентификатор региона"
          },
          "name": {
            "type": "string",
            "description": "Название региона"
          },
          "name_prepositional": {
            "type": "string",
            "description": "Применимо только для русской локализации.\n\nНазвание региона в предложном падеже с предлогом \"в\", например: \"в Москве\". Возвращается, если в запросе передан параметр `additional_case=prepositional`\n",
            "nullable": true
          },
          "parent_id": {
            "type": "string",
            "description": "Идентификатор родительского региона",
            "nullable": true
          }
        }
      },
      "ErrorsNegotiationEditMessageForbiddenErrors": {
        "title": "Ошибки",
        "anyOf": [
          {
            "$ref": "#/components/schemas/ErrorsCommonBadAuthorizationErrors"
          },
          {
            "$ref": "#/components/schemas/ErrorsNegotiationEditMessageErrors"
          }
        ]
      },
      "ErrorsNegotiationEditMessageErrors": {
        "title": "Oшибки при работе с перепиской соискателя(отклики/приглашения)",
        "description": "Информация о возникших ошибках",
        "allOf": [
          {
            "$ref": "#/components/schemas/ErrorsCommonErrorRequestId"
          },
          {
            "type": "object",
            "required": [
              "errors"
            ],
            "properties": {
              "errors": {
                "type": "array",
                "description": "Массив с данными ошибок",
                "minItems": 1,
                "items": {
                  "$ref": "#/components/schemas/ErrorsNegotiationEditMessageError"
                }
              }
            }
          }
        ]
      },
      "ErrorsNegotiationEditMessageError": {
        "title": "Ошибка",
        "type": "object",
        "additionalProperties": false,
        "required": [
          "type",
          "value"
        ],
        "properties": {
          "type": {
            "type": "string",
            "description": "Тип ошибки",
            "example": "negotiations",
            "enum": [
              "negotiations"
            ]
          },
          "value": {
            "type": "string",
            "description": "Причина ошибки:\n\n* `message_cannot_be_empty` — сообщение в переписке не может быть пустым.\n* `message_already_viewed` — редактирование сообщения запрещено. Принимающая сторона уже успела прочитать сообщение.\n* `vacancy_not_found` — вакансия, на которую совершался отклик, не найдена\n* `resume_not_found` — резюме из отклика/приглашения было скрыто, либо удалено, либо не найдено\n* `vacancy_archived` — вакансия, на которую совершался отклик, заархивирована\n",
            "example": "message_already_viewed",
            "enum": [
              "message_cannot_be_empty",
              "message_already_viewed",
              "vacancy_not_found",
              "resume_not_found",
              "vacancy_archived"
            ]
          }
        }
      },
      "DictionariesIndustriesResponse": {
        "title": "Список отраслей",
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/DictionariesBranchItem"
        }
      },
      "DictionariesBranchItem": {
        "title": "Отрасль",
        "type": "object",
        "required": [
          "id",
          "name",
          "industries"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "Идентификатор отрасли"
          },
          "industries": {
            "type": "array",
            "description": "Сферы деятельности",
            "items": {
              "$ref": "#/components/schemas/_IncludesIdName"
            }
          },
          "name": {
            "type": "string",
            "description": "Название отрасли"
          }
        }
      },
      "VacanciesVacancy": {
        "title": "Вакансия",
        "type": "object",
        "anyOf": [
          {
            "$ref": "#/components/schemas/VacanciesVacancyForApplicant"
          },
          {
            "$ref": "#/components/schemas/VacanciesVacancyForManager"
          }
        ]
      },
      "VacanciesVacancyForManager": {
        "title": "Информация о вакансии при запросе от менеджера",
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/VacanciesVacancyCommonFields"
          },
          {
            "$ref": "#/components/schemas/VacancyBillingTypeObject"
          },
          {
            "$ref": "#/components/schemas/VacanciesVacancyManagerFields"
          },
          {
            "type": "object",
            "properties": {
              "previous_id": {
                "type": "string",
                "description": "Идентификатор архивной вакансии, на основе которой была опубликована текущая вакансия. Если вакансия была создана самостоятельно - null",
                "nullable": true
              }
            }
          }
        ]
      },
      "VacanciesVacancyManagerFields": {
        "title": "Поля менеджера вакансии",
        "type": "object",
        "required": [
          "expires_at",
          "manager",
          "response_notifications",
          "hidden",
          "branded_template",
          "can_upgrade_billing_type",
          "address"
        ],
        "properties": {
          "address": {
            "$ref": "#/components/schemas/VacanciesAddress"
          },
          "archived_at": {
            "type": "object",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/VacancyArchivedAt"
              },
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              }
            ]
          },
          "branded_template": {
            "$ref": "#/components/schemas/VacancyBrandedTemplate"
          },
          "can_upgrade_billing_type": {
            "$ref": "#/components/schemas/VacancyCanUpgradeBillingType"
          },
          "counters": {
            "$ref": "#/components/schemas/VacancyCountersOutput"
          },
          "expires_at": {
            "$ref": "#/components/schemas/VacancyExpiresAt"
          },
          "hidden": {
            "$ref": "#/components/schemas/VacancyHidden"
          },
          "manager": {
            "$ref": "#/components/schemas/VacancyManager"
          },
          "response_notifications": {
            "$ref": "#/components/schemas/VacancyResponseNotifications"
          }
        }
      },
      "VacancyArchivedAt": {
        "title": "Дата архивации вакансии",
        "type": "string",
        "description": "Дата архивации вакансии"
      },
      "VacancyHidden": {
        "title": "Удалена ли вакансия",
        "type": "boolean",
        "description": "Удалена ли вакансия (скрыта из архива)"
      },
      "VacancyCountersOutput": {
        "title": "Ответ - счетчики",
        "type": "object",
        "required": [
          "views",
          "responses",
          "unread_responses",
          "resumes_in_progress",
          "invitations",
          "invitations_and_responses",
          "calls",
          "new_missed_calls"
        ],
        "properties": {
          "calls": {
            "type": "number",
            "description": "Общее количество звонков"
          },
          "invitations": {
            "type": "number",
            "description": "Количество приглашений на вакансию"
          },
          "invitations_and_responses": {
            "type": "number",
            "description": "Количество откликнувшихся и приглашенных соискателей на вакансию"
          },
          "new_missed_calls": {
            "type": "number",
            "description": "Общее количество новых пропущенных звонков"
          },
          "responses": {
            "type": "number",
            "description": "Количество откликов на вакансию"
          },
          "resumes_in_progress": {
            "type": "number",
            "description": "Количество резюме в работе на вакансию"
          },
          "unread_responses": {
            "type": "number",
            "description": "Количество непросмотренных откликов на вакансию"
          },
          "views": {
            "type": "number",
            "description": "Количество просмотров вакансии"
          }
        }
      },
      "VacanciesAddress": {
        "title": "Адрес для вакансии",
        "allOf": [
          {
            "$ref": "#/components/schemas/VacancyAddressRawOutput"
          },
          {
            "type": "object",
            "properties": {
              "show_metro_only": {
                "type": "boolean",
                "description": "Показывать только метро для указанного адреса",
                "nullable": true
              }
            }
          }
        ]
      },
      "VacancyExpiresAt": {
        "title": "Date and time",
        "type": "string",
        "description": "Дата и время окончания публикации вакансии"
      },
      "VacancyCanUpgradeBillingType": {
        "title": "Улучшение биллингового типа",
        "type": "boolean",
        "description": "Можно ли улучшить биллинговый тип вакансии"
      },
      "VacancyBillingTypeObject": {
        "title": "Тип биллинга",
        "type": "object",
        "properties": {
          "billing_type": {
            "$ref": "#/components/schemas/VacancyBillingTypeOutput"
          }
        }
      },
      "VacanciesVacancyCommonFields": {
        "title": "Обычные поля вакансии",
        "type": "object",
        "required": [
          "id",
          "description",
          "key_skills",
          "schedule",
          "accept_handicapped",
          "accept_kids",
          "experience",
          "alternate_url",
          "apply_alternate_url",
          "archived",
          "name",
          "area",
          "initial_created_at",
          "created_at",
          "published_at",
          "response_letter_required",
          "type",
          "has_test",
          "billing_type",
          "allow_messages",
          "premium",
          "driver_license_types",
          "accept_incomplete_resumes",
          "professional_roles",
          "approved"
        ],
        "properties": {
          "accept_handicapped": {
            "$ref": "#/components/schemas/VacancyAcceptHandicapped"
          },
          "accept_incomplete_resumes": {
            "$ref": "#/components/schemas/VacancyAcceptIncompleteResumes"
          },
          "accept_kids": {
            "$ref": "#/components/schemas/VacancyAcceptKids"
          },
          "accept_temporary": {
            "$ref": "#/components/schemas/VacancyAcceptTemporary"
          },
          "allow_messages": {
            "$ref": "#/components/schemas/VacancyAllowMessages"
          },
          "alternate_url": {
            "$ref": "#/components/schemas/VacancyAlternateUrl"
          },
          "apply_alternate_url": {
            "$ref": "#/components/schemas/VacancyApplyAlternateUrl"
          },
          "approved": {
            "$ref": "#/components/schemas/VacancyApproved"
          },
          "archived": {
            "$ref": "#/components/schemas/VacancyArchived"
          },
          "area": {
            "$ref": "#/components/schemas/_IncludesArea"
          },
          "billing_type": {
            "$ref": "#/components/schemas/VacancyBillingTypeOutput"
          },
          "branded_description": {
            "type": "string",
            "deprecated": true,
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/VacancyBrandedDescription"
              },
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              }
            ]
          },
          "code": {
            "$ref": "#/components/schemas/VacancyCode"
          },
          "contacts": {
            "$ref": "#/components/schemas/VacancyContactsOutput"
          },
          "created_at": {
            "deprecated": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/VacancyCreatedAt"
              }
            ]
          },
          "department": {
            "$ref": "#/components/schemas/VacanciesObjectsDepartment"
          },
          "description": {
            "$ref": "#/components/schemas/VacancyDescription"
          },
          "driver_license_types": {
            "$ref": "#/components/schemas/VacancyDriverLicenseTypes"
          },
          "employer": {
            "type": "object",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/VacanciesVacancyEmployer"
              },
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              }
            ]
          },
          "employment": {
            "$ref": "#/components/schemas/VacancyEmploymentOutput"
          },
          "experience": {
            "$ref": "#/components/schemas/VacancyExperienceOutput"
          },
          "has_test": {
            "$ref": "#/components/schemas/VacancyHasTest"
          },
          "id": {
            "$ref": "#/components/schemas/VacancyId"
          },
          "initial_created_at": {
            "$ref": "#/components/schemas/VacancyInitialCreatedAt"
          },
          "insider_interview": {
            "$ref": "#/components/schemas/VacanciesObjectsInsiderInterview"
          },
          "key_skills": {
            "$ref": "#/components/schemas/VacancyKeySkills"
          },
          "languages": {
            "type": "array",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/VacancyLanguagesOutput"
              },
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              }
            ]
          },
          "name": {
            "$ref": "#/components/schemas/VacancyName"
          },
          "negotiations_url": {
            "type": "string",
            "description": "Ссылка для получения списка откликов/приглашений",
            "nullable": true
          },
          "premium": {
            "$ref": "#/components/schemas/VacancyPremium"
          },
          "professional_roles": {
            "$ref": "#/components/schemas/VacancyProfessionalRolesOutput"
          },
          "published_at": {
            "$ref": "#/components/schemas/VacancyCreatedAt"
          },
          "relations": {
            "$ref": "#/components/schemas/VacancyRelations"
          },
          "response_letter_required": {
            "$ref": "#/components/schemas/VacancyResponseLetterRequired"
          },
          "response_url": {
            "$ref": "#/components/schemas/VacancyResponseUrl"
          },
          "salary": {
            "$ref": "#/components/schemas/VacancySalary"
          },
          "schedule": {
            "$ref": "#/components/schemas/VacancyScheduleOutput"
          },
          "suitable_resumes_url": {
            "type": "string",
            "description": "Подходящие резюме на вакансию",
            "nullable": true
          },
          "test": {
            "$ref": "#/components/schemas/VacancyDraftTest"
          },
          "type": {
            "description": "Идентификатор типа вакансии из справочника [`vacancy_type`](https://api.hh.ru/openapi/redoc#tag/Obshie-spravochniki/operation/get-dictionaries)",
            "allOf": [
              {
                "$ref": "#/components/schemas/_IncludesIdName"
              }
            ]
          },
          "vacancy_constructor_template": {
            "type": "object",
            "deprecated": true,
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/VacancyVacancyConstructorTemplate"
              },
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              }
            ]
          },
          "video_vacancy": {
            "type": "object",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/VacancyVideoVacancy"
              },
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              }
            ]
          },
          "working_days": {
            "$ref": "#/components/schemas/VacancyWorkingDaysOutput"
          },
          "working_time_intervals": {
            "$ref": "#/components/schemas/VacancyWorkingTimeIntervalsOutput"
          },
          "working_time_modes": {
            "$ref": "#/components/schemas/VacancyWorkingTimeModesOutput"
          }
        }
      },
      "VacancyCreatedAt": {
        "title": "Дата и время публикации вакансии",
        "type": "string",
        "description": "Дата и время публикации вакансии"
      },
      "VacancyBrandedDescription": {
        "title": "Описание брендирования",
        "type": "string",
        "description": "Строка с кодом HTML (возможно наличие `<script/>` и `<style/>`), которая является альтернативой стандартному описанию вакансии.\n\nHTML адаптирован для мобильных устройств и корректно отображается без поддержки JavaScript. При этом:\n\n* Содержимое растягивается на 100% ширины контейнера и умещается в 300px без прокрутки.\n* Содержимое рассчитано на то, что оно будет вставлено в обвязку, в которую входит название, требуемый опыт работы, регион, тип занятости и рабочего дня вакансии, а также ссылка на компанию, опубликовавшую вакансию.\n* Изображения, которые могут встретиться в таком описании, адаптированы под Retina-дисплеи.\n* Размер шрифта не меньше 12px, размер межстрочного интервала не меньше 16px.\n\nЗначение может быть `null`, если у вакансии отсутствует индивидуальное описание"
      },
      "VacancyVacancyConstructorTemplate": {
        "title": "Шаблон конструктора вакансии",
        "type": "object",
        "description": "Информация по примененному брендированному шаблону конструктора вакансии. Поддерживается только две картинки: верхняя — в шапке вакансии, нижняя — в самом низу",
        "properties": {
          "bottom_picture": {
            "type": "object",
            "description": "Информация по нижней картинке шаблона",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              },
              {
                "$ref": "#/components/schemas/VacancyPicture"
              }
            ]
          },
          "id": {
            "type": "number",
            "description": "ID шаблона"
          },
          "name": {
            "type": "string",
            "description": "Название шаблона"
          },
          "top_picture": {
            "type": "object",
            "description": "Информация по верхней картинке шаблона",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              },
              {
                "$ref": "#/components/schemas/VacancyPicture"
              }
            ]
          }
        }
      },
      "VacancyPicture": {
        "title": "Картинка",
        "type": "object",
        "properties": {
          "blurred_path": {
            "type": "string",
            "description": "Путь до маленькой (порядка 4% от изначального размера) размытой картинки. При показе ее нужно преобразовать к нужному размеру",
            "nullable": true
          },
          "height": {
            "type": "number",
            "description": "Высота картинки"
          },
          "path": {
            "type": "string",
            "description": "Адрес картинки"
          },
          "width": {
            "type": "number",
            "description": "Ширина картинки"
          }
        }
      },
      "VacancyArchived": {
        "title": "Находится ли данная вакансия в архиве",
        "type": "boolean",
        "description": "Находится ли данная вакансия в архиве"
      },
      "VacancyAlternateUrl": {
        "title": "Ссылка на представление вакансии на сайте",
        "type": "string",
        "description": "Ссылка на представление вакансии на сайте"
      },
      "VacancyId": {
        "title": "Идентификатор вакансии",
        "type": "string",
        "description": "Идентификатор вакансии"
      },
      "VacancyHasTest": {
        "title": "Есть ли тестовое задание",
        "type": "boolean",
        "description": "Информация о наличии прикрепленного тестового задании к вакансии"
      },
      "VacancyPremium": {
        "title": "Является ли данная вакансия премиум-вакансией",
        "type": "boolean",
        "description": "Является ли данная вакансия премиум-вакансией"
      },
      "VacancyVideoVacancy": {
        "title": "Видео вакансия",
        "type": "object",
        "description": "Данные по видео вакансии, либо `null`, если она не подключена",
        "additionalProperties": false,
        "properties": {
          "cover_picture": {
            "type": "object",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/VacancyVideoVacancyCoverPicture"
              },
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              }
            ]
          },
          "video_url": {
            "type": "string",
            "description": "Ссылка для скачивания видео",
            "minLength": 1,
            "nullable": false
          }
        }
      },
      "VacancyVideoVacancyCoverPicture": {
        "title": "Обложка видео вакансии",
        "type": "object",
        "description": "Обложка видео вакансии, либо `null`, если обложка отсутствует",
        "additionalProperties": false,
        "required": [
          "resized_path",
          "resized_width",
          "resized_height"
        ],
        "properties": {
          "resized_height": {
            "type": "number",
            "description": "Высота изображения"
          },
          "resized_path": {
            "type": "string",
            "description": "Ссылка на изображение",
            "minLength": 1,
            "nullable": false
          },
          "resized_width": {
            "type": "number",
            "description": "Ширина изображения"
          }
        }
      },
      "VacancyInitialCreatedAt": {
        "title": "Дата и время создания вакансии",
        "type": "string",
        "description": "Дата и время создания вакансии"
      },
      "VacancyApplyAlternateUrl": {
        "title": "Ссылка на отклик на вакансию на сайте",
        "type": "string",
        "description": "Ссылка на отклик на вакансию на сайте"
      },
      "VacancyApproved": {
        "title": "Прошла ли вакансия модерацию",
        "type": "boolean",
        "description": "Прошла ли вакансия модерацию"
      },
      "VacanciesVacancyEmployer": {
        "title": "Поля работодателя в вакансии",
        "allOf": [
          {
            "$ref": "#/components/schemas/VacanciesEmployerPublic"
          },
          {
            "$ref": "#/components/schemas/VacancyEmployerBlacklisted"
          },
          {
            "$ref": "#/components/schemas/_IncludesEmployerApplicantServicesObject"
          },
          {
            "$ref": "#/components/schemas/VacancyEmployerBages"
          }
        ]
      },
      "VacancyEmployerBages": {
        "title": "Плашка работодателя",
        "type": "object"
      },
      "_IncludesEmployerApplicantServicesObject": {
        "title": "Услуги для соискателя",
        "type": "object",
        "properties": {
          "applicant_services": {
            "$ref": "#/components/schemas/_IncludesEmployerApplicantServices"
          }
        }
      },
      "VacancyEmployerBlacklisted": {
        "title": "Информация о компании работодателя",
        "type": "object",
        "properties": {
          "blacklisted": {
            "type": "boolean",
            "description": "Добавлены ли все вакансии работодателя в [список скрытых](#tag/Skrytye-rabotodateli)"
          }
        }
      },
      "VacanciesVacancyForApplicant": {
        "title": "Информация о вакансии с токеном соискателя или приложения",
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/VacanciesVacancyCommonFields"
          },
          {
            "$ref": "#/components/schemas/VacancyHiddenDeprecated"
          },
          {
            "$ref": "#/components/schemas/VacancyBillingTypeObject"
          },
          {
            "$ref": "#/components/schemas/VacancyAddressCommon"
          },
          {
            "type": "object"
          }
        ]
      },
      "VacancyAddressCommon": {
        "title": "Адрес",
        "type": "object",
        "description": "Адрес",
        "nullable": true,
        "properties": {
          "address": {
            "type": "object",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/VacancyAddressOutput"
              },
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              }
            ]
          }
        }
      },
      "VacancyHiddenDeprecated": {
        "title": "Удалена ли вакансия",
        "properties": {
          "hidden": {
            "type": "boolean",
            "description": "Удалена ли вакансия (скрыта из архива). Оставлено для обеспечения обратной совместимости",
            "deprecated": true
          }
        }
      },
      "VacancyDraftDraftResponseSchema": {
        "title": "Ответ на публикацию черновика",
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/Id"
          },
          {
            "type": "object",
            "example": {
              "$ref": "#/components/examples/VacancyDraftVacancyDraftResponse/value"
            },
            "required": [
              "name",
              "publication_ready"
            ],
            "properties": {
              "ignored_fields": {
                "type": "array",
                "description": "Поля, которые не были сохранены при создании черновика, вследствие не верного заполнения",
                "items": {
                  "type": "string",
                  "description": "Имя проигнорированного поля"
                }
              },
              "name": {
                "type": "string",
                "description": "Заголовок черновика"
              },
              "publication_ready": {
                "type": "boolean",
                "description": "Готовность черновика к публикации"
              },
              "validation_errors": {
                "type": "array",
                "description": "Поля, которые были сохранены при создании черновика, с соответствующими ошибками, которые необходимо поправить для успешной публикации вакансии на основе черновика",
                "items": {
                  "$ref": "#/components/schemas/VacancyDraftDraftVacancyError"
                }
              }
            }
          }
        ]
      },
      "VacancyDraftDraftVacancyError": {
        "title": "Ошибка",
        "type": "object",
        "required": [
          "value"
        ],
        "properties": {
          "reason": {
            "type": "string",
            "description": "Причина ошибки"
          },
          "value": {
            "type": "string",
            "description": "Название поля, в котором допущена ошибка"
          }
        }
      },
      "Id": {
        "title": "Id созданного объекта",
        "type": "object",
        "description": "Информация о созданном объекте",
        "nullable": false,
        "required": [
          "id"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "Идентификатор созданного объекта",
            "example": "22"
          }
        }
      },
      "ResumeStatusReadiness": {
        "title": "Статус и готовность резюме",
        "type": "object",
        "description": "Информация о статусе резюме и готовности резюме к публикации",
        "allOf": [
          {
            "$ref": "#/components/schemas/ResumeStatus"
          },
          {
            "$ref": "#/components/schemas/ResumeReadiness"
          }
        ]
      },
      "ResumeReadiness": {
        "title": "Проверка резюме",
        "type": "object",
        "required": [
          "publish_url",
          "progress",
          "moderation_note"
        ],
        "properties": {
          "moderation_note": {
            "type": "array",
            "description": "Замечания модератора.\nВ некоторых случаях замечания могут сопровождаться [блокировкой резюме](#tag/Rezyume.-Prosmotr-informacii/Status-rezyume).\nПолный список возможных замечаний доступен в поле `resume_moderation_note` [в справочнике полей](#tag/Obshie-spravochniki/operation/get-dictionaries)\n",
            "items": {
              "$ref": "#/components/schemas/ResumeObjectsModerationNote"
            }
          },
          "progress": {
            "$ref": "#/components/schemas/ResumeObjectsProgress"
          },
          "publish_url": {
            "type": "string",
            "description": "URL для публикации или обновления резюме"
          }
        }
      },
      "ResumeObjectsModerationNote": {
        "title": "Замечания модератора",
        "type": "object",
        "description": "Замечания модератора.\n\nВ некоторых случаях замечания могут сопровождаться [блокировкой резюме](#tag/Rezyume.-Prosmotr-informacii/Status-rezyume).\n\nПолный список возможных замечаний доступен в поле `resume_moderation_note` [в справочнике полей](#tag/Obshie-spravochniki/operation/get-dictionaries)\n",
        "required": [
          "id",
          "name"
        ],
        "properties": {
          "field": {
            "type": "string",
            "description": "Поле резюме с которым связано замечание"
          },
          "id": {
            "type": "string",
            "description": "Идентификатор замечания"
          },
          "name": {
            "type": "string",
            "description": "Описание замечания"
          },
          "pointer": {
            "type": "string",
            "description": "Путь до параметра, с которым связано замечание"
          }
        }
      },
      "ResumeObjectsProgress": {
        "title": "Заполненность резюме",
        "type": "object",
        "description": "Информация о заполненности резюме",
        "required": [
          "percentage",
          "mandatory",
          "recommended"
        ],
        "properties": {
          "mandatory": {
            "type": "array",
            "description": "Список полей, которые обязательны, но еще не заполнены",
            "items": {
              "$ref": "#/components/schemas/_IncludesIdName"
            }
          },
          "percentage": {
            "type": "number",
            "description": "Процент заполненности резюме"
          },
          "recommended": {
            "type": "array",
            "description": "Список полей, которые рекомендованы к заполнению, но ещё не заполнены",
            "items": {
              "$ref": "#/components/schemas/_IncludesIdName"
            }
          }
        }
      },
      "ResumeStatus": {
        "title": "Статус резюме",
        "type": "object",
        "required": [
          "blocked",
          "finished",
          "status"
        ],
        "properties": {
          "blocked": {
            "type": "boolean",
            "description": "Заблокировано ли резюме ([подробнее](#tag/Rezyume.-Prosmotr-informacii/Status-rezyume))"
          },
          "can_publish_or_update": {
            "type": "boolean",
            "description": "Можно ли опубликовать или обновить данное резюме",
            "nullable": true
          },
          "finished": {
            "type": "boolean",
            "description": "Заполнено ли резюме"
          },
          "status": {
            "description": "[Статус резюме](#tag/Rezyume.-Prosmotr-informacii/Status-rezyume)\n",
            "$ref": "#/components/schemas/_IncludesIdName"
          }
        }
      },
      "ErrorsResumeVisibilityErrorsBadRequest": {
        "title": "Ошибки",
        "anyOf": [
          {
            "$ref": "#/components/schemas/ErrorsCommonBadRequestErrors"
          },
          {
            "$ref": "#/components/schemas/ErrorsResumeVisibilityErrors"
          }
        ]
      },
      "ArtifactsArtifactPhotoResponse": {
        "title": "Успешный ответ",
        "allOf": [
          {
            "$ref": "#/components/schemas/ArtifactsArtifactPhotoItems"
          },
          {
            "$ref": "#/components/schemas/_IncludesPagination"
          }
        ]
      },
      "ArtifactsArtifactPhotoItems": {
        "title": "Коллекция изображений",
        "required": [
          "items"
        ],
        "properties": {
          "items": {
            "type": "array",
            "description": "Список изображений",
            "items": {
              "$ref": "#/components/schemas/ArtifactsArtifactItem"
            }
          }
        }
      },
      "ArtifactsArtifactItem": {
        "title": "Изображение",
        "required": [
          "id",
          "state"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "Идентификатор изображения"
          },
          "medium": {
            "type": "string",
            "description": "URL для получения среднего по размеру изображения или `null`, если изображение ещё не готово",
            "nullable": true
          },
          "small": {
            "type": "string",
            "description": "URL для получения уменьшенного изображения или `null`, если изображение ещё не готово",
            "nullable": true
          },
          "state": {
            "description": "Текущий статус изображения",
            "$ref": "#/components/schemas/ArtifactsState"
          }
        }
      },
      "ArtifactsState": {
        "title": "Статус изображения",
        "type": "object",
        "required": [
          "id",
          "name"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "Идентификатор текущего статуса изображения:\n\n- `processing` — в процессе обработки;\n- `failed` — ошибка, скорее всего неподдерживаемый формат;\n- `ok` — обработан, доступен для использования в резюме\n",
            "enum": [
              "processing",
              "failed",
              "ok"
            ]
          },
          "name": {
            "type": "string",
            "description": "Название текущего статуса изображения"
          }
        }
      },
      "VacanciesAvailableVacancyTypeResponse": {
        "title": "Информация о вариантах публикации вакансии",
        "type": "object",
        "required": [
          "items"
        ],
        "properties": {
          "items": {
            "type": "array",
            "description": "Массив вариантов публикации вакансии",
            "items": {
              "$ref": "#/components/schemas/VacanciesAvailableVacancyTypeItem"
            }
          }
        }
      },
      "VacanciesAvailableVacancyTypeItem": {
        "title": "Вариант публикации вакансии",
        "type": "object",
        "required": [
          "name",
          "description",
          "available_publications_count",
          "vacancy_billing_type",
          "vacancy_types",
          "publications"
        ],
        "properties": {
          "available_publications_count": {
            "type": "number",
            "description": "Общее количество публикаций, доступных данному менеджеру"
          },
          "description": {
            "type": "string",
            "description": "Описание типа публикации"
          },
          "name": {
            "type": "string",
            "description": "Название типа публикации"
          },
          "publications": {
            "$ref": "#/components/schemas/VacancyPublications"
          },
          "vacancy_billing_type": {
            "allOf": [
              {
                "type": "object",
                "description": "Биллинговый тип вакансии. Возможные значения приведены в поле `vacancy_billing_type` [справочника полей](#tag/Obshie-spravochniki/operation/get-dictionaries)"
              },
              {
                "$ref": "#/components/schemas/VacancyBillingType"
              }
            ]
          },
          "vacancy_types": {
            "$ref": "#/components/schemas/VacancyTypes"
          }
        }
      },
      "VacancyTypes": {
        "title": "Список типов вакансии",
        "type": "array",
        "description": "Список типов вакансии",
        "items": {
          "$ref": "#/components/schemas/VacancyType"
        }
      },
      "VacancyPublications": {
        "title": "Инфо о регионах и количестве публикаций",
        "type": "array",
        "description": "Список регионов, где может быть опубликована вакансия и количество публикаций, доступных работодателю",
        "items": {
          "$ref": "#/components/schemas/VacancyPublication"
        }
      },
      "VacancyPublication": {
        "title": "Информация о публикации",
        "type": "object",
        "required": [
          "name",
          "count",
          "areas_url"
        ],
        "properties": {
          "areas_url": {
            "type": "string",
            "description": "URL на список регионов, в которых можно опубликовать вакансию данного типа. Список возвращается в древовидной структуре и публикация вакансий возможна только в конечных (листовых) узлах дерева. Они помечены флагом `can_publish=true`"
          },
          "count": {
            "type": "number",
            "description": "Количество публикаций в регионе, доступных работодателю"
          },
          "name": {
            "type": "string",
            "description": "Название региона"
          }
        }
      },
      "VacanciesArchivedVacancyListResponse": {
        "title": "Вакансии в архиве",
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/_IncludesPagination"
          },
          {
            "$ref": "#/components/schemas/VacanciesArchivedVacancyList"
          }
        ]
      },
      "VacanciesArchivedVacancyList": {
        "title": "Вакансии в архиве",
        "required": [
          "items"
        ],
        "properties": {
          "items": {
            "type": "array",
            "description": "Массив вакансий в архиве",
            "items": {
              "$ref": "#/components/schemas/VacanciesVacancyArchived"
            }
          }
        }
      },
      "DictionariesSalaryStatisticsAreaResponse": {
        "title": "Список регионов",
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/DictionariesSalaryStatisticsAreaItem"
        }
      },
      "DictionariesSalaryStatisticsAreaItem": {
        "title": "Регион",
        "required": [
          "id",
          "name"
        ],
        "properties": {
          "areas": {
            "type": "array",
            "description": "Дочерние регионы",
            "items": {
              "$ref": "#/components/schemas/DictionariesSalaryStatisticsAreaItem"
            }
          },
          "id": {
            "type": "string",
            "description": "Идентификатор региона"
          },
          "name": {
            "type": "string",
            "description": "Название региона"
          }
        }
      },
      "ManagerSettings": {
        "title": "Предпочтения менеджера",
        "type": "object",
        "description": "Информация о предпочтениях менеджера",
        "additionalProperties": false,
        "required": [
          "default_currency",
          "use_sms_notification"
        ],
        "properties": {
          "default_currency": {
            "$ref": "#/components/schemas/ManagerSettingsCurrency"
          },
          "default_vacancy_branded_template": {
            "$ref": "#/components/schemas/VacancyBrandedTemplate"
          },
          "use_sms_notification": {
            "type": "boolean",
            "description": "Предпочтение по использованию флага `send_sms`\nпри [приглашении соискателя](https://github.com/hhru/api/blob/master/docs/employer_negotiations.md#add-invite)\n",
            "example": "true"
          }
        }
      },
      "ManagerSettingsCurrency": {
        "title": "Предпочитаемая валюта",
        "type": "object",
        "description": "Предпочитаемая валюта при [публикации вакансии](#tag/Upravlenie-vakansiyami/operation/publish-vacancy)\n",
        "additionalProperties": false,
        "required": [
          "code",
          "name",
          "abbr"
        ],
        "properties": {
          "abbr": {
            "type": "string",
            "description": "Краткое обозначение валюты",
            "example": "руб."
          },
          "code": {
            "type": "string",
            "description": "Код валюты",
            "example": "RUR"
          },
          "name": {
            "type": "string",
            "description": "Название валюты",
            "example": "Рубли"
          }
        }
      },
      "ResumeEditResumeRequest": {
        "title": "Резюме",
        "type": "object",
        "description": "Тело запроса при редактировании резюме",
        "allOf": [
          {
            "$ref": "#/components/schemas/ResumeNullableFields"
          },
          {
            "type": "object",
            "properties": {
              "area": {
                "description": "Город проживания. Элемент справочника [areas](#tag/Obshie-spravochniki/operation/get-areas)",
                "nullable": true,
                "$ref": "#/components/schemas/ResumeObjectsOneOfId"
              },
              "citizenship": {
                "type": "array",
                "description": "Список гражданств соискателя. Элементы [справочника регионов](#tag/Obshie-spravochniki/operation/get-areas)",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/_IncludesId"
                }
              },
              "contact": {
                "type": "array",
                "description": "Список контактов соискателя.\n\nПри заполнении контактов в резюме необходимо учитывать следующие условия:\n\n* В резюме обязательно должен быть указан e-mail. Он может быть только один.\n* В резюме должен быть указан хотя бы один телефон, причём можно указывать только один телефон каждого типа.\n* Комментарий можно указывать только для телефонов, для e-mail комментарий не сохранится\n* Обязательно указать либо телефон полностью в поле `formatted`, либо все три части телефона по отдельности в трёх полях: `country`, `city` и `number`. Если указано и то, и то, используются данные из трёх полей. В поле `formatted` допустимо использовать пробелы, скобки и дефисы. В остальных полях допустимы только цифры\n",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/_IncludesContactProperties"
                }
              },
              "education": {
                "description": "Образование соискателя.\n\nОсобенности сохранения образования:\n\n* Если передать и высшее и среднее образование и уровень образования \"средний\", то сохранится только среднее образование.\n* Если передать и высшее и среднее образование и уровень образования \"высшее\", то сохранится только высшее образование\n",
                "nullable": true,
                "$ref": "#/components/schemas/ResumeObjectsOneOfEducation"
              },
              "experience": {
                "type": "array",
                "description": "Опыт работы",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/ResumeObjectsExperienceProperties"
                }
              },
              "gender": {
                "description": "Пол. Элемент справочника [gender](#tag/Obshie-spravochniki/operation/get-dictionaries)",
                "nullable": true,
                "$ref": "#/components/schemas/ResumeObjectsOneOfId"
              },
              "language": {
                "type": "array",
                "description": "Список языков, которыми владеет соискатель. Элементы справочника [languages](#tag/Obshie-spravochniki/operation/get-languages)",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/_IncludesLanguageProperties"
                }
              }
            }
          }
        ]
      },
      "ResumeNullableFields": {
        "title": "Необязательные поля",
        "type": "object",
        "description": "Необязательные поля при создании резюме",
        "properties": {
          "access": {
            "type": "object",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ResumeObjectsAccess"
              },
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              }
            ]
          },
          "birth_date": {
            "type": "string",
            "description": "День рождения (в формате `ГГГГ-ММ-ДД`)",
            "nullable": true
          },
          "business_trip_readiness": {
            "type": "object",
            "description": "Готовность к командировкам. Элемент справочника [business_trip_readiness](#tag/Obshie-spravochniki/operation/get-dictionaries)",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/_IncludesId"
              },
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              }
            ]
          },
          "certificate": {
            "type": "array",
            "description": "Список сертификатов соискателя",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ResumeObjectsCertificate"
            }
          },
          "driver_license_types": {
            "type": "array",
            "description": "Список категорий водительских прав соискателя",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ResumeObjectsDriverLicenseTypes"
            }
          },
          "employments": {
            "type": "array",
            "description": "Список подходящих соискателю типов занятостей. Элементы справочника [employment](#tag/Obshie-spravochniki/operation/get-dictionaries)",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/_IncludesIdName"
            }
          },
          "first_name": {
            "type": "string",
            "description": "Имя",
            "nullable": true
          },
          "has_vehicle": {
            "type": "boolean",
            "description": "Наличие личного автомобиля у соискателя",
            "nullable": true
          },
          "hidden_fields": {
            "type": "array",
            "description": "Документация [Список скрытых полей](https://github.com/hhru/api/blob/master/docs/employer_resumes.md#hidden-fields). Возможные значения элементов приведены в поле `resume_hidden_fields` [справочника полей](#tag/Obshie-spravochniki/operation/get-dictionaries)",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/_IncludesIdName"
            }
          },
          "last_name": {
            "type": "string",
            "description": "Фамилия",
            "nullable": true
          },
          "metro": {
            "type": "object",
            "description": "Ближайшая станция метро. Элемент справочника [metro](#tag/Obshie-spravochniki/operation/get-metro-stations).\nЕсли передать метро, не принадлежащее переданной area, поле проигнорируется. Имеет смысл указывать только для `area` с метро\n",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/_IncludesId"
              },
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              }
            ]
          },
          "middle_name": {
            "type": "string",
            "description": "Отчество",
            "nullable": true
          },
          "photo": {
            "type": "object",
            "description": "Фотография пользователя (см. [Артефакты](#tag/Rabota-s-artefaktami))",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ResumeObjectsPhoto"
              },
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              }
            ]
          },
          "portfolio": {
            "type": "array",
            "description": "Список изображений в портфолио пользователя",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ResumeObjectsPortfolio"
            }
          },
          "professional_roles": {
            "type": "array",
            "description": "Массив объектов профролей. Элемент справочника [professional_roles](#tag/Obshie-spravochniki/operation/get-professional-roles-dictionary)",
            "items": {
              "$ref": "#/components/schemas/_IncludesId"
            }
          },
          "recommendation": {
            "type": "array",
            "description": "Список рекомендаций",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ResumeObjectsRecommendation"
            }
          },
          "relocation": {
            "type": "object",
            "description": "Информация о возможности переезда в другой город",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ResumeObjectsRelocationPublic"
              },
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              }
            ]
          },
          "resume_locale": {
            "type": "object",
            "description": "Язык, на котором составлено резюме (локаль). Элемент справочника [локали резюме](#tag/Obshie-spravochniki/operation/get-locales)",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/_IncludesIdName"
              },
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              }
            ]
          },
          "salary": {
            "type": "object",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ResumeObjectsSalaryProperties"
              },
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              }
            ]
          },
          "schedules": {
            "type": "array",
            "description": "Список подходящих соискателю графиков работы. Элементы справочника [schedule](#tag/Obshie-spravochniki/operation/get-dictionaries)",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/_IncludesIdName"
            }
          },
          "site": {
            "type": "array",
            "description": "Профили в соц. сетях и других сервисах",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ResumeObjectsSite"
            }
          },
          "skill_set": {
            "type": "array",
            "description": "Ключевые навыки (список уникальных строк)",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "skills": {
            "type": "string",
            "description": "Дополнительная информация, описание навыков в свободной форме",
            "nullable": true
          },
          "title": {
            "type": "string",
            "description": "Желаемая должность",
            "nullable": true
          },
          "total_experience": {
            "type": "object",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ResumeObjectsTotalExperience"
              },
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              }
            ]
          },
          "travel_time": {
            "type": "object",
            "description": "Желательное время в пути до работы. Элемент справочника [travel_time](#tag/Obshie-spravochniki/operation/get-dictionaries)",
            "oneOf": [
              {
                "$ref": "#/components/schemas/_IncludesId"
              },
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              }
            ]
          },
          "work_ticket": {
            "type": "array",
            "description": "Список регионов, в который соискатель имеет разрешение на работу. Элементы [справочника регионов](#tag/Obshie-spravochniki/operation/get-areas)\n",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/_IncludesId"
            }
          }
        }
      },
      "ResumeObjectsRecommendation": {
        "title": "Рекомендация",
        "type": "object",
        "required": [
          "name",
          "position",
          "organization"
        ],
        "properties": {
          "contact": {
            "type": "string",
            "description": "Контакт"
          },
          "name": {
            "type": "string",
            "description": "Имя выдавшего рекомендацию"
          },
          "organization": {
            "type": "string",
            "description": "Организация"
          },
          "position": {
            "type": "string",
            "description": "Должность"
          }
        }
      },
      "ResumeObjectsDriverLicenseTypes": {
        "title": "Категория водительских прав",
        "type": "object",
        "required": [
          "id"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "Категория водительских прав соискателя. Элемент справочника [тип водительских прав](#tag/Obshie-spravochniki/operation/get-dictionaries)"
          }
        }
      },
      "ResumeObjectsSalaryAddEdit": {
        "title": "Зарплата",
        "required": [
          "currency",
          "amount"
        ],
        "allOf": [
          {
            "$ref": "#/components/schemas/ResumeObjectsSalaryProperties"
          }
        ]
      },
      "ResumeObjectsRelocationPublic": {
        "title": "Возможность переезда",
        "type": "object",
        "required": [
          "type"
        ],
        "properties": {
          "area": {
            "type": "array",
            "description": "Список городов, в которые возможен переезд. Имеет смысл только с соответствующим полем `type`",
            "items": {
              "$ref": "#/components/schemas/_IncludesArea"
            }
          },
          "district": {
            "type": "array",
            "description": "Список районов, в которые возможен переезд. Имеет смысл только с соответствующим полем `type`",
            "items": {
              "$ref": "#/components/schemas/_IncludesIdName"
            }
          },
          "type": {
            "description": "Готовность к переезду. Элемент справочника [relocation_type](#tag/Obshie-spravochniki/operation/get-dictionaries)",
            "allOf": [
              {
                "$ref": "#/components/schemas/_IncludesIdName"
              }
            ]
          }
        }
      },
      "ResumeObjectsPortfolio": {
        "title": "Портфолио",
        "type": "object",
        "required": [
          "small",
          "medium",
          "id"
        ],
        "properties": {
          "description": {
            "type": "string",
            "description": "Описание изображения в портфолио",
            "nullable": true
          },
          "id": {
            "type": "string",
            "description": "Уникальный идентификатор изображения"
          },
          "medium": {
            "type": "string",
            "description": "URL среднего по размеру изображения. Изображение по данному url доступно ограниченное время, после получения ответа. Приложение должно быть готово к тому, что на запрос изображения вернётся `404 Not Found`\n"
          },
          "small": {
            "type": "string",
            "description": "URL уменьшенного изображения. Изображение по данному url доступно ограниченное время, после получения ответа. Приложение должно быть готово к тому, что на запрос изображения вернётся `404 Not Found`\n"
          }
        }
      },
      "ResumeObjectsSite": {
        "title": "Профиль на сайте",
        "type": "object",
        "properties": {
          "type": {
            "description": "Тип профиля. Элемент справочника [resume_contacts_site_type](#tag/Obshie-spravochniki/operation/get-dictionaries)",
            "allOf": [
              {
                "$ref": "#/components/schemas/_IncludesIdName"
              }
            ]
          },
          "url": {
            "type": "string",
            "description": "Ссылка на профиль или идентификатор",
            "nullable": true
          }
        }
      },
      "ResumeObjectsOneOfId": {
        "title": "Id - поле резюме",
        "oneOf": [
          {
            "$ref": "#/components/schemas/Id"
          },
          {
            "$ref": "#/components/schemas/_IncludesNullableObject"
          }
        ]
      },
      "ResumeObjectsOneOfEducation": {
        "title": "Образование - поле резюме",
        "oneOf": [
          {
            "$ref": "#/components/schemas/ResumeObjectsEducation"
          },
          {
            "$ref": "#/components/schemas/_IncludesNullableObject"
          }
        ]
      },
      "_IncludesLanguageLevel": {
        "title": "Язык и уровень владения",
        "required": [
          "level"
        ],
        "allOf": [
          {
            "$ref": "#/components/schemas/_IncludesLanguageProperties"
          }
        ]
      },
      "_IncludesLanguageProperties": {
        "title": "Язык и уровень владения",
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/_IncludesIdName"
          },
          {
            "type": "object",
            "properties": {
              "level": {
                "description": "Уровень владения. Возможные значения элементов приведены в поле `language_level` [справочника полей](#tag/Obshie-spravochniki/operation/get-dictionaries)",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/_IncludesIdName"
                  }
                ]
              }
            }
          }
        ]
      },
      "_IncludesContact": {
        "title": "Контакт",
        "required": [
          "type",
          "value",
          "preferred"
        ],
        "allOf": [
          {
            "$ref": "#/components/schemas/_IncludesContactProperties"
          }
        ]
      },
      "_IncludesContactProperties": {
        "title": "Контакт",
        "type": "object",
        "properties": {
          "comment": {
            "type": "string",
            "description": "Комментарий к контакту",
            "nullable": true
          },
          "need_verification": {
            "type": "boolean",
            "description": "Требуется ли подтверждение телефона",
            "nullable": true
          },
          "preferred": {
            "type": "boolean",
            "description": "Является ли предпочтительным способом связи",
            "nullable": false
          },
          "type": {
            "description": "Тип контакта. Элемент справочника [preferred_contact_type](#tag/Obshie-spravochniki/operation/get-dictionaries)",
            "allOf": [
              {
                "$ref": "#/components/schemas/_IncludesIdName"
              }
            ]
          },
          "value": {
            "description": "Значение контакта. Для телефона - объект, для email - строка",
            "oneOf": [
              {
                "$ref": "#/components/schemas/_IncludesContactEmailValue"
              },
              {
                "$ref": "#/components/schemas/_IncludesContactPhoneValue"
              }
            ]
          },
          "verified": {
            "type": "boolean",
            "description": "Является ли телефон подтвержденным",
            "nullable": true
          }
        }
      },
      "_IncludesContactEmailValue": {
        "title": "Электронная почта",
        "type": "string",
        "description": "Электронная почта",
        "format": "email",
        "nullable": true
      },
      "_IncludesContactPhoneValue": {
        "title": "Телефон",
        "type": "object",
        "nullable": true,
        "required": [
          "country",
          "city",
          "number",
          "formatted"
        ],
        "properties": {
          "city": {
            "type": "string",
            "description": "Код города",
            "nullable": false
          },
          "country": {
            "type": "string",
            "description": "Код страны",
            "nullable": false
          },
          "formatted": {
            "type": "string",
            "description": "Отформатированный номер телефона",
            "nullable": false
          },
          "number": {
            "type": "string",
            "description": "Номер телефона",
            "nullable": false
          }
        }
      },
      "AuthClientCredentials": {
        "title": "Параметры для получения нового токена приложения",
        "type": "object",
        "additionalProperties": false,
        "required": [
          "grant_type",
          "client_id",
          "client_secret"
        ],
        "properties": {
          "client_id": {
            "type": "string",
            "description": "Идентификатор, полученный при [создании приложения](https://dev.hh.ru/admin)",
            "minLength": 1,
            "example": "ETVQdMs2n9VKw7SMXkh9nX5H"
          },
          "client_secret": {
            "type": "string",
            "description": "Защищенный ключ, полученный при [создании приложения](https://dev.hh.ru/admin)",
            "minLength": 1,
            "example": "95dNjB8FmtxQsmygm6dtEy53"
          },
          "grant_type": {
            "type": "string",
            "description": "Cпособ запроса токена",
            "example": "client_credentials",
            "enum": [
              "client_credentials"
            ]
          }
        }
      },
      "VacanciesVacancyListResponse": {
        "title": "Успешный ответ",
        "oneOf": [
          {
            "$ref": "#/components/schemas/VacanciesActiveListItems"
          },
          {
            "$ref": "#/components/schemas/VacanciesMatchListItems"
          }
        ]
      },
      "VacanciesActiveListItems": {
        "title": "Список опубликованных вакансий (?resume_id не задан)",
        "allOf": [
          {
            "type": "object",
            "required": [
              "items"
            ],
            "properties": {
              "items": {
                "type": "array",
                "description": "Список опубликованных вакансий",
                "items": {
                  "$ref": "#/components/schemas/VacanciesActiveListItem"
                }
              }
            }
          },
          {
            "$ref": "#/components/schemas/_IncludesPagination"
          }
        ]
      },
      "VacanciesActiveListItem": {
        "title": "Информация об опубликованной вакансии",
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/VacanciesVacancyShort"
          },
          {
            "$ref": "#/components/schemas/VacancyBillingTypeObject"
          },
          {
            "$ref": "#/components/schemas/VacanciesActiveVacancyFields"
          }
        ]
      },
      "VacanciesActiveVacancyFields": {
        "title": "Поля в опубликованной вакансии",
        "type": "object",
        "required": [
          "counters",
          "expires_at",
          "manager",
          "can_upgrade_billing_type",
          "has_updates",
          "created_at"
        ],
        "properties": {
          "address": {
            "type": "object",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/VacanciesAddress"
              },
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              }
            ]
          },
          "can_upgrade_billing_type": {
            "$ref": "#/components/schemas/VacancyCanUpgradeBillingType"
          },
          "counters": {
            "$ref": "#/components/schemas/VacancyCountersForActive"
          },
          "created_at": {
            "type": "string",
            "description": "Дата и время публикации вакансии"
          },
          "expires_at": {
            "$ref": "#/components/schemas/VacancyExpiresAt"
          },
          "has_updates": {
            "$ref": "#/components/schemas/VacancyHasUpdates"
          },
          "manager": {
            "$ref": "#/components/schemas/VacancyManagerOutput"
          },
          "sort_point_distance": {
            "type": "number",
            "description": "Расстояние в метрах между центром сортировки (заданной параметрами `sort_point_lat`, `sort_point_lng`) и указанным в вакансии адресом. В случае, если в адресе указаны только станции метро, выдается расстояние между центром сортировки и средней геометрической точкой указанных станций.\nЗначение `sort_point_distance` выдается только в случае, если заданы параметры `sort_point_lat`, `sort_point_lng`, `order_by=distance`\n",
            "nullable": true
          }
        }
      },
      "VacancyManagerOutput": {
        "title": "Менеджер",
        "type": "object",
        "required": [
          "id",
          "first_name",
          "last_name",
          "middle_name"
        ],
        "properties": {
          "first_name": {
            "type": "string",
            "description": "Имя менеджера"
          },
          "id": {
            "type": "string",
            "description": "Контактное лицо (менеджер) по размещаемой вакансии, по умолчанию текущий пользователь"
          },
          "last_name": {
            "type": "string",
            "description": "Фамилия менеджера"
          },
          "middle_name": {
            "type": "string",
            "description": "Второе имя менеджера",
            "nullable": true
          }
        }
      },
      "VacancyCountersForActive": {
        "title": "Счетчики",
        "type": "object",
        "required": [
          "views",
          "responses",
          "unread_responses",
          "resumes_in_progress",
          "invitations"
        ],
        "properties": {
          "calls": {
            "type": "number",
            "description": "Общее количество звонков"
          },
          "invitations": {
            "type": "number",
            "description": "Количество приглашений на вакансию"
          },
          "invitations_and_responses": {
            "type": "number",
            "description": "Количество откликнувшихся и приглашенных соискателей на вакансию"
          },
          "new_missed_calls": {
            "type": "number",
            "description": "Общее количество новых пропущенных звонков"
          },
          "responses": {
            "type": "number",
            "description": "Количество откликов на вакансию"
          },
          "resumes_in_progress": {
            "type": "number",
            "description": "Количество резюме в работе на вакансию"
          },
          "unread_responses": {
            "type": "number",
            "description": "Количество непросмотренных откликов на вакансию"
          },
          "views": {
            "type": "number",
            "description": "Количество просмотров вакансии"
          }
        }
      },
      "VacanciesMatchListItems": {
        "title": "Список вакансий, подходящих под резюме (?resume_id={resume_id})",
        "allOf": [
          {
            "type": "object",
            "required": [
              "items"
            ],
            "properties": {
              "items": {
                "type": "array",
                "description": "Список вакансий, подходящих под резюме",
                "items": {
                  "$ref": "#/components/schemas/VacanciesMatchListItem"
                }
              }
            }
          },
          {
            "$ref": "#/components/schemas/_IncludesPagination"
          }
        ]
      },
      "VacanciesMatchListItem": {
        "title": "Информация о вакансии, подходящей под резюме",
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/VacanciesVacancyShort"
          },
          {
            "$ref": "#/components/schemas/VacanciesMatchVacancyFields"
          }
        ]
      },
      "VacanciesMatchVacancyFields": {
        "title": "Совпадение полей вакансии",
        "type": "object",
        "required": [
          "negotiations_state",
          "employer_negotiations_state",
          "can_invite",
          "negotiations_actions",
          "manager",
          "created_at"
        ],
        "properties": {
          "address": {
            "type": "object",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/VacanciesAddress"
              },
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              }
            ]
          },
          "can_invite": {
            "type": "boolean",
            "description": "Можно ли пригласить соискателя на данную вакансию"
          },
          "created_at": {
            "type": "string",
            "description": "Дата и время публикации вакансии"
          },
          "employer_negotiations_state": {
            "type": "object",
            "description": "Работодательское состояние отклика/приглашения для этой вакансии с указанным резюме, либо `null` если отклика/приглашения не было. Возможные значения перечислены в поле `employer_states` в [списке работодательских состояний по вакансии](#tag/Otklikipriglasheniya-rabotodatelya/operation/get-negotiations)",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/_IncludesIdName"
              },
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              }
            ]
          },
          "manager": {
            "$ref": "#/components/schemas/VacancyManagerOutput"
          },
          "negotiations_actions": {
            "type": "array",
            "description": "Действия для [создания отклика](https://github.com/hhru/api/blob/master/docs/employer_negotiations.md#add-invite). Если создать отклик невозможно (например, нет нужных услуг), то вернется пустой массив",
            "items": {
              "$ref": "#/components/schemas/VacancyNegotiationActions"
            }
          },
          "negotiations_state": {
            "type": "object",
            "description": "Состояние отклика/приглашения для этой вакансии с указанным резюме, либо `null` если отклика/приглашения не было. Возможные значения перечислены в поле `negotiations_state` в [справочнике полей](#tag/Obshie-spravochniki/operation/get-dictionaries)",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/_IncludesIdName"
              },
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              }
            ]
          },
          "sort_point_distance": {
            "type": "number",
            "description": "Расстояние в метрах между центром сортировки (заданной параметрами `sort_point_lat`, `sort_point_lng`) и указанным в вакансии адресом. В случае, если в адресе указаны только станции метро, выдается расстояние между центром сортировки и средней геометрической точкой указанных станций.\nЗначение `sort_point_distance` выдается только в случае, если заданы параметры `sort_point_lat`, `sort_point_lng`, `order_by=distance`\n",
            "nullable": true
          },
          "templates": {
            "type": "array",
            "description": "Шаблоны писем",
            "items": {
              "$ref": "#/components/schemas/VacancyTemplates"
            }
          }
        }
      },
      "MeProfile": {
        "title": "Информация о текущем авторизованном пользователе",
        "discriminator": {
          "propertyName": "auth_type",
          "mapping": {
            "applicant": "#/components/schemas/MeApplicantProfile",
            "application": "#/components/schemas/MeAnyProfile",
            "employer": "#/components/schemas/MeManagerProfile",
            "employer_integration": "#/components/schemas/MeEmployerProfile"
          }
        },
        "description": "Информация о текущем авторизованном пользователе",
        "oneOf": [
          {
            "$ref": "#/components/schemas/MeAnyProfile"
          },
          {
            "$ref": "#/components/schemas/MeApplicantProfile"
          },
          {
            "$ref": "#/components/schemas/MeManagerProfile"
          },
          {
            "$ref": "#/components/schemas/MeEmployerProfile"
          }
        ]
      },
      "MeManagerProfile": {
        "title": "Профиль работодателя",
        "description": "Профиль текущего пользователя, авторизованного как менеджер",
        "allOf": [
          {
            "$ref": "#/components/schemas/MeAnyUserProfile"
          },
          {
            "type": "object",
            "properties": {
              "employer": {
                "$ref": "#/components/schemas/MeEmployerProfileCompanyDeprecated"
              },
              "is_in_search": {
                "type": "object",
                "deprecated": true,
                "nullable": true
              },
              "manager": {
                "$ref": "#/components/schemas/MeEmployerProfileManager"
              },
              "negotiations_url": {
                "type": "object",
                "deprecated": true,
                "nullable": true
              },
              "personal_manager": {
                "$ref": "#/components/schemas/MeEmployerProfilePersonalManager"
              },
              "resumes_url": {
                "type": "object",
                "deprecated": true,
                "nullable": true
              }
            }
          }
        ]
      },
      "MeAnyUserProfile": {
        "title": "Базовый профиль",
        "description": "Базовый профиль текущего пользователя, авторизованного как соискатель или работодатель",
        "allOf": [
          {
            "$ref": "#/components/schemas/MeAnyProfile"
          },
          {
            "type": "object",
            "required": [
              "id",
              "first_name",
              "last_name"
            ],
            "properties": {
              "email": {
                "type": "string",
                "description": "Email текущего пользователя",
                "format": "email",
                "nullable": true,
                "example": "ivanov@example.com"
              },
              "first_name": {
                "type": "string",
                "description": "Имя текущего пользователя",
                "example": "Александр"
              },
              "id": {
                "type": "string",
                "description": "Идентификатор текущего пользователя",
                "example": "12345678"
              },
              "is_anonymous": {
                "type": "boolean",
                "deprecated": true
              },
              "last_name": {
                "type": "string",
                "description": "Фамилия текущего пользователя",
                "example": "Иванов"
              },
              "mid_name": {
                "type": "string",
                "deprecated": true,
                "nullable": true,
                "example": "Николаевич"
              },
              "middle_name": {
                "type": "string",
                "description": "Отчество текущего пользователя",
                "nullable": true,
                "example": "Петрович"
              },
              "phone": {
                "type": "string",
                "description": "Телефон текущего пользователя",
                "format": "phone",
                "nullable": true,
                "example": "79164555555"
              }
            }
          }
        ]
      },
      "MeAnyProfile": {
        "title": "Флаги профиля",
        "type": "object",
        "description": "Содержит флаги, актуальные для любого типа авторизации: соискатель, работодатель, приложение\n",
        "allOf": [
          {
            "$ref": "#/components/schemas/MeCommonProfile"
          },
          {
            "type": "object"
          }
        ]
      },
      "MeCommonProfile": {
        "title": "Флаги профиля",
        "type": "object",
        "discriminator": {
          "propertyName": "auth_type",
          "mapping": {
            "applicant": "#/components/schemas/MeApplicantProfile",
            "application": "#/components/schemas/MeAnyProfile",
            "employer": "#/components/schemas/MeManagerProfile",
            "employer_integration": "#/components/schemas/MeEmployerProfile"
          }
        },
        "description": "Содержит флаги, актуальные для любого типа авторизации: соискатель, работодатель, приложение\n",
        "required": [
          "is_application",
          "is_applicant",
          "is_employer",
          "is_admin",
          "is_employer_integration",
          "auth_type"
        ],
        "properties": {
          "auth_type": {
            "type": "string",
            "description": "Тип авторизации",
            "nullable": true,
            "example": "applicant"
          },
          "is_admin": {
            "type": "boolean",
            "description": "Является ли текущий пользователь администратором сайта",
            "example": "false"
          },
          "is_applicant": {
            "type": "boolean",
            "description": "Является ли текущий пользователь соискателем",
            "example": "false"
          },
          "is_application": {
            "type": "boolean",
            "description": "Является ли авторизованный клиент приложением",
            "example": "false"
          },
          "is_employer": {
            "type": "boolean",
            "description": "Является ли текущий пользователь менеджером",
            "example": "false"
          },
          "is_employer_integration": {
            "type": "boolean",
            "description": "Является ли текущий пользователь работодателем",
            "example": "false"
          }
        }
      },
      "MeApplicantProfile": {
        "title": "Профиль соискателя",
        "description": "Профиль текущего пользователя, авторизованного как соискатель",
        "allOf": [
          {
            "$ref": "#/components/schemas/MeAnyUserProfile"
          },
          {
            "type": "object",
            "required": [
              "counters",
              "resumes_url",
              "negotiations_url",
              "is_in_search"
            ],
            "properties": {
              "counters": {
                "$ref": "#/components/schemas/MeApplicantProfileCounters"
              },
              "employer": {
                "type": "object",
                "deprecated": true,
                "nullable": true
              },
              "is_in_search": {
                "type": "boolean",
                "description": "Имеет ли текущий пользователь статус \"ищу работу\"",
                "example": "false"
              },
              "manager": {
                "type": "object",
                "deprecated": true,
                "nullable": true
              },
              "negotiations_url": {
                "type": "string",
                "description": "URL, на который нужно сделать GET-запрос, чтобы получить список откликов/приглашений текущего пользователя\n",
                "format": "uri"
              },
              "personal_manager": {
                "type": "object",
                "deprecated": true,
                "nullable": true
              },
              "profile_videos": {
                "$ref": "#/components/schemas/ProfileVideosList"
              },
              "resumes_url": {
                "type": "string",
                "description": "URL, на который нужно сделать GET-запрос, чтобы получить список резюме текущего пользователя\n",
                "format": "uri",
                "example": "https://api.hh.ru/resumes/mine"
              },
              "user_statuses": {
                "$ref": "#/components/schemas/UserStatusesApplicant"
              }
            }
          }
        ]
      },
      "ProfileVideosList": {
        "title": "Список видео профиля",
        "type": "object",
        "description": "Список видео профиля для текущего или запрашиваемого соискателя",
        "example": {
          "$ref": "#/components/examples/ProfileVideosProfileVideosList/value"
        },
        "required": [
          "items"
        ],
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "id",
                "download_url"
              ],
              "properties": {
                "download_url": {
                  "type": "object",
                  "required": [
                    "url",
                    "expires_at"
                  ],
                  "properties": {
                    "expires_at": {
                      "type": "string",
                      "description": "Дата и время, до которых действительна ссылка"
                    },
                    "url": {
                      "type": "string",
                      "description": "Ссылка на скачивание видео"
                    }
                  }
                },
                "id": {
                  "type": "string",
                  "description": "Идентификатор видео"
                }
              }
            }
          }
        }
      },
      "MeApplicantProfileCounters": {
        "title": "Счетчики соискателя",
        "type": "object",
        "description": "Информация о счетчиках соискателя",
        "required": [
          "unread_negotiations",
          "new_resume_views",
          "resumes_count"
        ],
        "properties": {
          "new_resume_views": {
            "type": "integer",
            "description": "Общее количество новых просмотров всех резюме текущего пользователя",
            "minimum": 0.0,
            "example": "2"
          },
          "resumes_count": {
            "type": "integer",
            "description": "Общее количество созданных резюме текущего пользователя",
            "minimum": 0.0,
            "example": "5"
          },
          "unread_negotiations": {
            "type": "integer",
            "description": "Количество новых непрочитанных откликов (у которых `has_updates: true`)",
            "minimum": 0.0,
            "example": "1"
          }
        }
      },
      "UserStatusesApplicant": {
        "title": "Статус поиска работы соискателя",
        "type": "object",
        "properties": {
          "job_search_status": {
            "$ref": "#/components/schemas/UserStatusesJobSearchStatus"
          }
        }
      },
      "UserStatusesJobSearchStatus": {
        "title": "Статус поиска работы соискателем",
        "type": "object",
        "required": [
          "id",
          "name",
          "last_change_time"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "Идентификатор статуса",
            "example": "active_search"
          },
          "last_change_time": {
            "type": "string",
            "description": "Время, когда статус в последний раз менялся",
            "example": "2024-02-08T10:48:44.267Z"
          },
          "name": {
            "type": "string",
            "description": "Название статуса",
            "example": "В активном поиске работы"
          }
        }
      },
      "MeEmployerProfile": {
        "title": "Профиль работодателя",
        "description": "Профиль текущего пользователя, авторизованного как работодатель",
        "allOf": [
          {
            "$ref": "#/components/schemas/MeCommonProfile"
          },
          {
            "type": "object",
            "properties": {
              "employer": {
                "$ref": "#/components/schemas/MeEmployerProfileCompany"
              },
              "personal_manager": {
                "$ref": "#/components/schemas/MeEmployerProfilePersonalManager"
              }
            }
          }
        ]
      },
      "MeEmployerProfilePersonalManager": {
        "title": "Персональный менеджер для работодателя",
        "type": "object",
        "description": "Информация о персональном менеджере для работодателя",
        "required": [
          "id",
          "first_name",
          "last_name",
          "email",
          "is_available"
        ],
        "properties": {
          "email": {
            "type": "string",
            "description": "Email персонального менеджера",
            "format": "email",
            "example": "smirnov@example.com"
          },
          "first_name": {
            "type": "string",
            "description": "Имя персонального менеджера",
            "example": "Николай"
          },
          "id": {
            "type": "string",
            "description": "Идентификатор персонального менеджера",
            "example": "1234567"
          },
          "is_available": {
            "type": "boolean",
            "description": "Доступен ли менеджер в данный момент",
            "example": "false"
          },
          "last_name": {
            "type": "string",
            "description": "Фамилия персонального менеджера",
            "example": "Смирнов"
          },
          "photo_urls": {
            "type": "object",
            "description": "Объект с фотографиями менеджера",
            "nullable": true,
            "additionalProperties": false,
            "properties": {
              "big": {
                "type": "string",
                "description": "URL большой фотографии менеджера",
                "format": "uri",
                "nullable": true,
                "example": "https://hhcdn.ru/file/big.jpg"
              },
              "small": {
                "type": "string",
                "description": "URL маленькой фотографии менеджера",
                "format": "uri",
                "nullable": true,
                "example": "https://hhcdn.ru/file/small.jpg"
              }
            }
          },
          "unavailable": {
            "type": "object",
            "description": "Информация об отсутствии менеджера, либо `null`, если менеджер доступен",
            "nullable": true,
            "additionalProperties": false,
            "properties": {
              "until": {
                "type": "string",
                "description": "Время, до которого менеджер недоступен для контакта",
                "format": "dateTime",
                "example": "2016-07-01T07:00:00+03:00"
              }
            }
          }
        }
      },
      "MeEmployerProfileCompany": {
        "title": "Компания работодателя",
        "type": "object",
        "description": "Информация о компании работодателя",
        "required": [
          "id",
          "name"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "Идентификатор компании",
            "example": "1455"
          },
          "name": {
            "type": "string",
            "description": "Название компании",
            "example": "HeadHunter"
          }
        }
      },
      "MeEmployerProfileCompanyDeprecated": {
        "title": "Компания работодателя",
        "type": "object",
        "description": "Информация о компании работодателя",
        "allOf": [
          {
            "$ref": "#/components/schemas/MeEmployerProfileCompany"
          },
          {
            "type": "object",
            "required": [
              "manager_id"
            ],
            "properties": {
              "manager_id": {
                "type": "string",
                "description": "Идентификатор менеджера",
                "deprecated": true,
                "example": "4062820"
              }
            }
          }
        ]
      },
      "MeEmployerProfileManager": {
        "title": "Информация о менеджере компании",
        "type": "object",
        "description": "Информация о пользователе, как о менеджере компании",
        "required": [
          "id",
          "has_admin_rights",
          "has_multiple_manager_accounts",
          "is_main_contact_person",
          "manager_settings_url"
        ],
        "properties": {
          "has_admin_rights": {
            "type": "boolean",
            "description": "Обладает ли текущий менеджер правами администратора",
            "example": "true"
          },
          "has_multiple_manager_accounts": {
            "type": "boolean",
            "description": "Существует ли у пользователя несколько [рабочих аккаунтов](#tag/Menedzhery-rabotodatelya/operation/get-manager-accounts)",
            "example": "true"
          },
          "id": {
            "type": "string",
            "description": "Идентификатор менеджера",
            "example": "87654321"
          },
          "is_main_contact_person": {
            "type": "boolean",
            "description": "Является ли текущий менеджер главным контактным лицом компании",
            "example": "true"
          },
          "manager_settings_url": {
            "type": "string",
            "description": "URL, на который нужно сделать GET запрос, чтобы получить [предпочтения менеджера](#tag/Menedzhery-rabotodatelya/operation/get-manager-settings)",
            "format": "uri",
            "example": "https://api.hh.ru/employers/1455/managers/87654321/settings"
          }
        }
      },
      "VacanciesVacancyUpgradeListResponse": {
        "title": "Список улучшений для вакансий",
        "type": "object",
        "required": [
          "items"
        ],
        "properties": {
          "items": {
            "type": "array",
            "description": "Список улучшений для вакансий",
            "items": {
              "$ref": "#/components/schemas/VacanciesVacancyUpgradeListItem"
            }
          }
        }
      },
      "VacanciesVacancyUpgradeListItem": {
        "title": "Улучшение для вакансии",
        "type": "object",
        "required": [
          "vacancy_billing_type",
          "actions"
        ],
        "properties": {
          "actions": {
            "type": "array",
            "description": "Список возможных действий",
            "items": {
              "$ref": "#/components/schemas/VacanciesUpgradeFieldsAction"
            }
          },
          "vacancy_billing_type": {
            "$ref": "#/components/schemas/VacanciesUpgradeFieldsBillingTypeFull"
          },
          "without_action": {
            "type": "array",
            "description": "Объект с описанием причины, по которой невозможно улучшить вакансию до данного типа. `Null`, если массив `actions` не пустой",
            "nullable": true,
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/VacanciesUpgradeFieldsWithoutAction"
                },
                {
                  "$ref": "#/components/schemas/_IncludesNullableObject"
                }
              ]
            }
          }
        }
      },
      "VacanciesUpgradeFieldsWithoutAction": {
        "title": "Улучшение невозможно",
        "required": [
          "reason"
        ],
        "properties": {
          "reason": {
            "type": "string",
            "description": "Описание причины, по которой улучшение вакансии до данного типа невозможно"
          }
        }
      },
      "VacanciesUpgradeFieldsBillingTypeFull": {
        "title": "Биллинговый тип вакансии",
        "allOf": [
          {
            "$ref": "#/components/schemas/VacancyBillingTypeOutput"
          },
          {
            "type": "object",
            "properties": {
              "description": {
                "type": "string",
                "description": "Описание типа вакансии"
              }
            }
          }
        ]
      },
      "VacanciesUpgradeFieldsAction": {
        "title": "Возможное действие",
        "type": "object",
        "description": "Возможное действие",
        "required": [
          "type"
        ],
        "properties": {
          "cart_id": {
            "type": "integer",
            "description": "Идентификатор заказа, ожидающего активации. Возвращается только для действий с `actions.type=activate`",
            "nullable": true
          },
          "price": {
            "type": "object",
            "description": "Стоимость публикации. Возвращается только для действий с `actions.type=buy`",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/VacanciesUpgradeFieldsPrice"
              },
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              }
            ]
          },
          "type": {
            "type": "string",
            "description": "Тип действия:\n\n* `direct_upgrade` — публикации вакансий данного типа есть на счету. Вы можете изменить тип вакансии.\n* `activate` — публикации вакансий данного типа есть в неактивированных заказах. Перейдите по ссылке, указанной в поле `actions.url`, и активируйте заказ. После этого станет доступно улучшение вакансии.\n* `buy` — нет доступных публикаций вакансий данного типа. Перейдите по ссылке, указанной в поле `actions.url`, чтобы перейти к покупке публикаций нужного типа\n"
          },
          "url": {
            "type": "string",
            "description": "Ссылка на действие",
            "nullable": true
          }
        }
      },
      "VacanciesUpgradeFieldsPrice": {
        "title": "Цена",
        "type": "object",
        "required": [
          "amount",
          "currency_code"
        ],
        "properties": {
          "amount": {
            "type": "string",
            "description": "Значение цены"
          },
          "currency_code": {
            "type": "string",
            "description": "Идентификатор валюты. Возможные значения приведены в поле `currency` [справочника полей](#tag/Obshie-spravochniki/operation/get-dictionaries)"
          }
        }
      },
      "SuggestsProfessionalRoles": {
        "title": "Подсказки по профессиональным ролям",
        "type": "object",
        "description": "Подсказки по профессиональным ролям",
        "additionalProperties": false,
        "required": [
          "items"
        ],
        "properties": {
          "items": {
            "title": "Массив найденных профессиональных ролей",
            "type": "array",
            "description": "Информация о найденных профессиональных ролях",
            "items": {
              "$ref": "#/components/schemas/SuggestsProfessionalRoleItem"
            }
          }
        }
      },
      "SuggestsProfessionalRoleItem": {
        "title": "Информация о найденных проф. ролях",
        "type": "object",
        "required": [
          "id",
          "text",
          "accept_incomplete_resumes"
        ],
        "properties": {
          "accept_incomplete_resumes": {
            "type": "boolean",
            "description": "Профессиональная роль, для которой можно принимать отклики неполным резюме",
            "example": "true"
          },
          "id": {
            "type": "string",
            "description": "Идентификатор профессиональной роли",
            "example": "21"
          },
          "text": {
            "type": "string",
            "description": "Название профессиональной роли",
            "example": "Водитель"
          }
        }
      },
      "ArtifactsPortfolioDescription": {
        "title": "Описание изображения",
        "required": [
          "description"
        ],
        "properties": {
          "description": {
            "type": "string",
            "description": "Описание изображения"
          }
        }
      },
      "EmployerManagersEmployerManagerInfo": {
        "title": "Информация о менеджере",
        "required": [
          "id",
          "email",
          "position",
          "first_name",
          "last_name",
          "is_main_contact_person",
          "phone",
          "permissions"
        ],
        "properties": {
          "additional_phone": {
            "description": "Дополнительный телефон менеджера",
            "allOf": [
              {
                "$ref": "#/components/schemas/EmployerManagersPhone"
              },
              {
                "type": "object"
              }
            ]
          },
          "area": {
            "$ref": "#/components/schemas/EmployerManagersArea"
          },
          "email": {
            "type": "string",
            "description": "Адрес электронной почты менеджера"
          },
          "first_name": {
            "type": "string",
            "description": "Имя менеджера"
          },
          "full_name": {
            "type": "string",
            "description": "Полное имя менеджера"
          },
          "id": {
            "type": "string",
            "description": "Идентификатор менеджера"
          },
          "is_main_contact_person": {
            "type": "boolean",
            "description": "Является ли менеджер основным контактным лицом"
          },
          "last_name": {
            "type": "string",
            "description": "Фамилия менеджера"
          },
          "manager_type": {
            "$ref": "#/components/schemas/EmployerManagersManagerType"
          },
          "middle_name": {
            "type": "string",
            "description": "Отчество менеджера"
          },
          "name": {
            "type": "string",
            "description": "Полное имя менеджера",
            "deprecated": true
          },
          "permissions": {
            "type": "array",
            "description": "Список [прав менеджера](#tag/Menedzhery-rabotodatelya/operation/get-employer-manager-types)",
            "items": {
              "$ref": "#/components/schemas/EmployerManagerTypesAvailablePermissions"
            }
          },
          "phone": {
            "description": "Основной телефон менеджера",
            "allOf": [
              {
                "$ref": "#/components/schemas/EmployerManagersPhone"
              },
              {
                "type": "object"
              }
            ]
          },
          "position": {
            "type": "string",
            "description": "Должность менеджера"
          },
          "vacancies_count": {
            "type": "number",
            "description": "Количество опубликованных (активных) вакансий у данного менеджера. `null` — если у пользователя нет прав на просмотр вакансий этого менеджера",
            "nullable": true
          }
        }
      },
      "EmployerManagerTypesAvailablePermissions": {
        "title": "Типы прав доступа",
        "required": [
          "id",
          "name"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "Идентификатор права"
          },
          "name": {
            "type": "string",
            "description": "Название права"
          }
        }
      },
      "EmployerManagersManagerType": {
        "title": "Тип менеджера",
        "required": [
          "id",
          "name"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "Идентификатор типа менеджера"
          },
          "name": {
            "type": "string",
            "description": "Название типа менеджера"
          }
        }
      },
      "SuggestsPositions": {
        "title": "Подсказки по должностям резюме",
        "type": "object",
        "description": "Подсказки по должностям",
        "additionalProperties": false,
        "required": [
          "items"
        ],
        "properties": {
          "items": {
            "title": "Массив найденных должностей",
            "type": "array",
            "description": "Информация о найденных должностях",
            "items": {
              "$ref": "#/components/schemas/SuggestsPositionItem"
            }
          }
        }
      },
      "SuggestsPositionItem": {
        "title": "Информация о найденных позициях",
        "type": "object",
        "required": [
          "id",
          "text",
          "professional_roles"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "Идентификатор должности",
            "example": "2063"
          },
          "professional_roles": {
            "title": "Массив профессиональных ролей, соответствующих должности",
            "type": "array",
            "description": "Информация о профессиональных ролях, соответствующих должности",
            "minItems": 1,
            "items": {
              "$ref": "#/components/schemas/SuggestsProfessionalRoleItemWithName"
            }
          },
          "specializations": {
            "title": "Массив специализаций, соответствующих должности",
            "type": "array",
            "description": "Информация о специализациях, соответствующих должности",
            "minItems": 1,
            "items": {
              "$ref": "#/components/schemas/SuggestsSpecializationsWithName"
            }
          },
          "text": {
            "type": "string",
            "description": "Название должности",
            "example": "Личный водитель"
          }
        }
      },
      "SuggestsSpecializationsWithName": {
        "title": "Информация о найденных специализациях с именем",
        "type": "object",
        "required": [
          "id",
          "name",
          "profarea_id",
          "profarea_name"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "Идентификатор специализации",
            "example": "21.17"
          },
          "name": {
            "type": "string",
            "description": "Название специализации",
            "example": "Автоперевозки"
          },
          "profarea_id": {
            "type": "string",
            "description": "Идентификатор профессиональной области",
            "example": "21"
          },
          "profarea_name": {
            "type": "string",
            "description": "Название профессиональной области",
            "example": "Транспорт, логистика"
          }
        }
      },
      "SuggestsProfessionalRoleItemWithName": {
        "title": "Информация о найденных проф. ролях с именем",
        "type": "object",
        "required": [
          "id",
          "name",
          "accept_incomplete_resumes"
        ],
        "properties": {
          "accept_incomplete_resumes": {
            "type": "boolean",
            "description": "Профессиональная роль, для которой можно принимать отклики неполным резюме",
            "example": "true"
          },
          "id": {
            "type": "string",
            "description": "Идентификатор профессиональной роли",
            "example": "21"
          },
          "name": {
            "type": "string",
            "description": "Название профессиональной роли",
            "example": "Водитель"
          }
        }
      },
      "EmployerManagerTypesResponse": {
        "title": "Успешный ответ",
        "required": [
          "items"
        ],
        "properties": {
          "items": {
            "title": "Список типов и прав менеджера",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EmployerManagerTypesEmployerManagerTypesItem"
            }
          }
        }
      },
      "EmployerManagerTypesEmployerManagerTypesItem": {
        "title": "Тип и права менеджера",
        "required": [
          "id",
          "name",
          "available_permissions"
        ],
        "properties": {
          "available_permissions": {
            "type": "array",
            "description": "Список прав, которые можно дать данному типу менеджера",
            "items": {
              "$ref": "#/components/schemas/EmployerManagerTypesAvailablePermissions"
            }
          },
          "id": {
            "type": "string",
            "description": "Идентификатор типа менеджера"
          },
          "name": {
            "type": "string",
            "description": "Название типа менеджера"
          }
        }
      },
      "ErrorsCommonBadJsonDataErrors": {
        "title": "Невалидный json",
        "description": "Информация о возникших ошибках",
        "allOf": [
          {
            "$ref": "#/components/schemas/ErrorsCommonErrorRequestId"
          },
          {
            "type": "object",
            "required": [
              "errors"
            ],
            "properties": {
              "errors": {
                "type": "array",
                "description": "Массив с данными ошибок",
                "minItems": 1,
                "items": {
                  "$ref": "#/components/schemas/ErrorsCommonBadJsonDataError"
                }
              }
            }
          }
        ]
      },
      "ErrorsCommonBadJsonDataError": {
        "title": "Общая ошибка",
        "type": "object",
        "required": [
          "type"
        ],
        "properties": {
          "description": {
            "type": "string",
            "description": "Описание ошибки",
            "nullable": true,
            "example": "Значение неправильное"
          },
          "pointer": {
            "type": "string",
            "description": "Путь до параметра, в котором возникла ошибка.\n\nДля указания параметра используется формат JsonPointer [RFC 6901](https://tools.ietf.org/html/rfc6901)\n",
            "example": "/contacts/phones/1/number"
          },
          "reason": {
            "type": "string",
            "description": "Причина ошибки. Возможные значения:\n  * `required` - отсутствует обязательное поле\n  * `invalid` - значение введено не корректно\n  * `size_less_than_min` - пустой массив\n  * `unexpected` - поле не ожидается\n  * `greater_than_max` - значение больше максимума\n",
            "example": "required",
            "enum": [
              "required",
              "invalid",
              "size_less_than_min",
              "greater_than_max",
              "unexpected"
            ]
          },
          "type": {
            "type": "string",
            "description": "Текстовый идентификатор типа ошибки",
            "example": "bad_json_data"
          },
          "value": {
            "type": "string",
            "description": "Название поля с ошибкой",
            "example": "employer_id"
          }
        }
      },
      "ProfessionalRolesCatalog": {
        "title": "Каталог профессиональных ролей",
        "type": "object",
        "description": "Каталог профессиональных ролей и категорий",
        "additionalProperties": false,
        "required": [
          "categories"
        ],
        "properties": {
          "categories": {
            "title": "Категория профессиональной роли",
            "type": "array",
            "description": "Информация о категории профессиональной роли",
            "minItems": 1,
            "items": {
              "$ref": "#/components/schemas/ProfessionalRolesCategory"
            }
          }
        }
      },
      "ProfessionalRolesCategory": {
        "title": "Категории профессиональных ролей",
        "type": "object",
        "required": [
          "id",
          "name",
          "roles"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "Идентификатор категории профессиональной роли",
            "minLength": 1,
            "example": "123"
          },
          "name": {
            "type": "string",
            "description": "Имя категории профессиональной роли",
            "minLength": 1,
            "nullable": true,
            "example": "Строительство, недвижимость"
          },
          "roles": {
            "type": "array",
            "description": "Список профессиональных ролей, входящих в эту категорию\n",
            "minItems": 1,
            "items": {
              "$ref": "#/components/schemas/ProfessionalRolesRole"
            }
          }
        }
      },
      "ProfessionalRolesRole": {
        "title": "Профессиональная роль",
        "type": "object",
        "required": [
          "id",
          "name",
          "accept_incomplete_resumes",
          "is_default"
        ],
        "properties": {
          "accept_incomplete_resumes": {
            "type": "boolean",
            "description": "На роль принимаются отклики неполным резюме",
            "example": "true"
          },
          "id": {
            "type": "string",
            "description": "Идентификатор профессиональной роли",
            "minLength": 1,
            "example": "1"
          },
          "is_default": {
            "type": "boolean",
            "description": "Дефолтная роль",
            "example": "true"
          },
          "name": {
            "type": "string",
            "description": "Имя профессиональной роли",
            "minLength": 1,
            "example": "Архитектор"
          },
          "search_deprecated": {
            "type": "boolean",
            "description": "Наличие запрета на использование в поиске при составлении поискового запроса",
            "example": "true"
          },
          "select_deprecated": {
            "type": "boolean",
            "description": "Наличие запрета на использование при создании новых сущностей (резюме или вакансии)",
            "example": "true"
          }
        }
      },
      "NegotiationsCollectionNegotiationsResponse": {
        "title": "Список откликов/приглашений коллекции",
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/_IncludesSortingType"
          },
          {
            "$ref": "#/components/schemas/_IncludesPagination"
          },
          {
            "$ref": "#/components/schemas/NegotiationsCollectionNegotiations"
          }
        ]
      },
      "_IncludesSortingType": {
        "title": "Сортировка",
        "type": "object",
        "required": [
          "ordered_by"
        ],
        "properties": {
          "ordered_by": {
            "description": "Применяемый тип сортировки",
            "allOf": [
              {
                "$ref": "#/components/schemas/_IncludesIdName"
              }
            ]
          }
        }
      },
      "NegotiationsCollectionNegotiations": {
        "title": "Поля ответа списка откликов/приглашений коллекции",
        "type": "object",
        "required": [
          "items"
        ],
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/NegotiationsObjectsTopicItemCommon"
                },
                {
                  "$ref": "#/components/schemas/NegotiationsNegotiationCommonFields"
                },
                {
                  "type": "object",
                  "required": [
                    "employer_state",
                    "templates",
                    "actions",
                    "url"
                  ],
                  "properties": {
                    "resume": {
                      "type": "object",
                      "description": "Короткое представление резюме",
                      "nullable": true,
                      "anyOf": [
                        {
                          "$ref": "#/components/schemas/ResumeResumeShortLogoUrl90"
                        },
                        {
                          "$ref": "#/components/schemas/_IncludesNullableObject"
                        }
                      ]
                    },
                    "url": {
                      "type": "string",
                      "description": "Ссылка на полную версию отклика"
                    }
                  }
                }
              ]
            }
          }
        }
      },
      "ResumeResumeShortLogoUrl90": {
        "title": "Сокращенное представление резюме",
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/ResumeResumeProfileLogoUrl90"
          },
          {
            "$ref": "#/components/schemas/ResumeResumeShortAdditionalFields"
          },
          {
            "type": "object",
            "properties": {
              "job_search_status": {
                "description": "Для получения данных нужно передать параметр `with_job_search_status=true`. \nВозможные значения перечислены в поле `job_search_statuses_employer` в [справочнике полей](#tag/Obshie-spravochniki/operation/get-dictionaries)\n",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/_IncludesIdNameLastChangeTime"
                  }
                ]
              }
            }
          }
        ]
      },
      "ResumeResumeProfileLogoUrl90": {
        "title": "Сокращенное представление резюме",
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/ResumeResumeNanoWithUrl"
          },
          {
            "type": "object",
            "required": [
              "created_at",
              "updated_at",
              "certificate",
              "education",
              "experience",
              "download",
              "hidden_fields"
            ],
            "properties": {
              "age": {
                "type": "number",
                "description": "Возраст",
                "nullable": true
              },
              "area": {
                "$ref": "#/components/schemas/ResumeObjectsArea"
              },
              "can_view_full_info": {
                "type": "boolean",
                "description": "Доступен ли просмотр контактной информации в резюме текущему работодателю",
                "nullable": true
              },
              "certificate": {
                "type": "array",
                "description": "Список сертификатов соискателя",
                "items": {
                  "$ref": "#/components/schemas/ResumeObjectsCertificate"
                }
              },
              "created_at": {
                "type": "string",
                "description": "Дата и время создания резюме"
              },
              "download": {
                "type": "object",
                "description": "Ссылки для скачивания резюме в разных форматах",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ResumeObjectsDownload"
                  }
                ]
              },
              "education": {
                "type": "object",
                "description": "Образование соискателя. \n\nОсобенности сохранения образования:\n\n* Если передать и высшее и среднее образование и уровень образования \"средний\", то сохранится только среднее образование.\n* Если передать и высшее и среднее образование и уровень образования \"высшее\", то сохранится только высшее образование\n",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ResumeObjectsEducation"
                  }
                ]
              },
              "experience": {
                "type": "array",
                "description": "Опыт работы",
                "items": {
                  "$ref": "#/components/schemas/ResumeObjectsExperiencePropertiesLogoUrl90"
                }
              },
              "first_name": {
                "type": "string",
                "description": "Имя",
                "nullable": true
              },
              "gender": {
                "$ref": "#/components/schemas/ResumeObjectsGender"
              },
              "hidden_fields": {
                "type": "array",
                "description": "Справочник [Список скрытых полей](https://github.com/hhru/api/blob/master/docs/employer_resumes.md#hidden-fields). Возможные значения элементов приведены в поле `resume_hidden_fields` [справочника полей](#tag/Obshie-spravochniki/operation/get-dictionaries)",
                "items": {
                  "$ref": "#/components/schemas/_IncludesIdName"
                }
              },
              "last_name": {
                "type": "string",
                "description": "Фамилия",
                "nullable": true
              },
              "marked": {
                "type": "boolean",
                "description": "Выделено ли резюме в поиске",
                "default": "false"
              },
              "middle_name": {
                "type": "string",
                "description": "Отчество",
                "nullable": true
              },
              "platform": {
                "type": "object",
                "description": "Ресурс, на котором было размещено резюме",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/_IncludesId"
                  }
                ]
              },
              "salary": {
                "$ref": "#/components/schemas/ResumeObjectsSalaryProperties"
              },
              "total_experience": {
                "$ref": "#/components/schemas/ResumeObjectsTotalExperience"
              },
              "updated_at": {
                "type": "string",
                "description": "Дата и время обновления резюме"
              }
            }
          }
        ]
      },
      "ResumeObjectsExperienceLogoUrl90": {
        "title": "Опыт работы в организации",
        "required": [
          "start",
          "position",
          "industries"
        ],
        "allOf": [
          {
            "$ref": "#/components/schemas/ResumeObjectsExperiencePropertiesLogoUrl90"
          }
        ]
      },
      "ResumeObjectsExperiencePropertiesLogoUrl90": {
        "title": "Опыт работы в организации",
        "type": "object",
        "properties": {
          "area": {
            "type": "object",
            "description": "Регион расположения организации. Элемент [справочника регионов](#tag/Obshie-spravochniki/operation/get-areas)",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/_IncludesIdNameUrl"
              },
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              }
            ]
          },
          "company": {
            "type": "string",
            "description": "Название организации",
            "nullable": true
          },
          "company_id": {
            "type": "string",
            "description": "Уникальный идентификатор организации",
            "nullable": true
          },
          "company_url": {
            "type": "string",
            "description": "Сайт компании",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "Обязанности, функции, достижения",
            "nullable": true
          },
          "employer": {
            "type": "object",
            "description": "Работодатель",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/EmployersEmployerInfoShortLogoUrl90"
              },
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              }
            ]
          },
          "end": {
            "type": "string",
            "description": "Окончание работы (дата в формате `ГГГГ-ММ-ДД`)",
            "nullable": true
          },
          "industries": {
            "type": "array",
            "description": "Список отраслей компании. Возможные значения приведены в [справочнике индустрий](#tag/Obshie-spravochniki/operation/get-industries)",
            "items": {
              "$ref": "#/components/schemas/_IncludesIdName"
            }
          },
          "industry": {
            "type": "object",
            "description": "Отрасль компании",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ResumeObjectsIndustry"
              },
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              }
            ]
          },
          "position": {
            "type": "string",
            "description": "Должность"
          },
          "start": {
            "type": "string",
            "description": "Начало работы (дата в формате `ГГГГ-ММ-ДД`)"
          }
        }
      },
      "EmployersEmployerInfoShortLogoUrl90": {
        "title": "Работодатель",
        "type": "object",
        "required": [
          "id",
          "name",
          "url",
          "alternate_url"
        ],
        "properties": {
          "alternate_url": {
            "type": "string",
            "description": "Ссылка на описание работодателя на сайте"
          },
          "id": {
            "type": "string",
            "description": "Идентификатор работодателя"
          },
          "logo_urls": {
            "type": "object",
            "description": "Ссылки на изображения логотипов работодателя разных размеров. `original` — это необработанный логотип, который может быть большого размера. Если изначально загруженный компанией логотип меньше, чем 240px и/или 90px по меньшей стороне, то в соответствующих ключах будут ссылки на изображения оригинального размера. Объект может быть `null`, если компания не загрузила логотип. Клиент должен предусмотреть возможность отсутствия логотипа по указанной ссылке (ответ с кодом `404 Not Found`). Логотипы 90 и 240 присутствуют не во всех компаниях",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/_IncludesLogoUrls90"
              },
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              }
            ]
          },
          "name": {
            "type": "string",
            "description": "Название работодателя"
          },
          "url": {
            "type": "string",
            "description": "URL для получения полного описания работодателя"
          }
        }
      },
      "ArtifactsArtifactPortfolioResponse": {
        "title": "Успешный ответ",
        "allOf": [
          {
            "$ref": "#/components/schemas/ArtifactsArtifactPortfolioItems"
          },
          {
            "$ref": "#/components/schemas/_IncludesPagination"
          }
        ]
      },
      "ArtifactsArtifactPortfolioItems": {
        "title": "Коллекция изображений",
        "required": [
          "items"
        ],
        "properties": {
          "items": {
            "type": "array",
            "description": "Список изображений",
            "items": {
              "$ref": "#/components/schemas/ArtifactsArtifactPortfolioItem"
            }
          }
        }
      },
      "ArtifactsArtifactPortfolioItem": {
        "title": "Изображение",
        "allOf": [
          {
            "$ref": "#/components/schemas/ArtifactsArtifactItem"
          },
          {
            "$ref": "#/components/schemas/ArtifactsPortfolioDescription"
          }
        ]
      },
      "EmployersEmployersList": {
        "title": "Успешный ответ",
        "required": [
          "items",
          "found",
          "page",
          "pages",
          "per_page"
        ],
        "properties": {
          "found": {
            "type": "number",
            "description": "Найдено результатов"
          },
          "items": {
            "type": "array",
            "description": "Найденные работодатели",
            "items": {
              "$ref": "#/components/schemas/EmployersEmployerItem"
            }
          },
          "page": {
            "type": "number",
            "description": "Номер страницы"
          },
          "pages": {
            "type": "number",
            "description": "Всего страниц"
          },
          "per_page": {
            "type": "number",
            "description": "Результатов на странице"
          }
        }
      },
      "EmployersEmployerItem": {
        "title": "Работодатель",
        "allOf": [
          {
            "$ref": "#/components/schemas/EmployersEmployerItemShort"
          },
          {
            "type": "object",
            "required": [
              "open_vacancies"
            ],
            "properties": {
              "open_vacancies": {
                "type": "number",
                "description": "Количество открытых вакансий у работодателя"
              }
            }
          }
        ]
      },
      "VacanciesVacancyConditions": {
        "title": "Условия заполнения полей",
        "type": "object",
        "description": "Условия заполнения полей при [публикации вакансии](#tag/Upravlenie-vakansiyami/operation/publish-vacancy)",
        "properties": {
          "accept_handicapped": {
            "type": "object",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              },
              {
                "$ref": "#/components/schemas/VacanciesVacancyConditionFieldsRequiredWithTitle"
              }
            ]
          },
          "accept_incomplete_resumes": {
            "type": "object",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              },
              {
                "$ref": "#/components/schemas/VacanciesVacancyConditionFieldsRequiredWithTitle"
              }
            ]
          },
          "accept_kids": {
            "type": "object",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              },
              {
                "$ref": "#/components/schemas/VacanciesVacancyConditionFieldsRequiredWithTitle"
              }
            ]
          },
          "accept_temporary": {
            "type": "object",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              },
              {
                "$ref": "#/components/schemas/VacanciesVacancyConditionFieldsRequiredWithTitle"
              }
            ]
          },
          "address": {
            "type": "object",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              },
              {
                "$ref": "#/components/schemas/VacanciesVacancyConditionFieldsAddressCondition"
              }
            ]
          },
          "allow_messages": {
            "type": "object",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              },
              {
                "$ref": "#/components/schemas/VacanciesVacancyConditionFieldsRequiredWithTitle"
              }
            ]
          },
          "area": {
            "type": "object",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              },
              {
                "$ref": "#/components/schemas/VacanciesVacancyConditionFieldsRequiredWithTitle"
              }
            ]
          },
          "billing_type": {
            "type": "object",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              },
              {
                "$ref": "#/components/schemas/VacanciesVacancyConditionFieldsRequiredWithTitle"
              }
            ]
          },
          "branded_template": {
            "type": "object",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              },
              {
                "$ref": "#/components/schemas/VacanciesVacancyConditionFieldsRequiredWithTitle"
              }
            ]
          },
          "code": {
            "type": "object",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              },
              {
                "$ref": "#/components/schemas/VacanciesVacancyConditionFieldsRequiredLengthWithTitle"
              }
            ]
          },
          "contacts": {
            "type": "object",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              },
              {
                "$ref": "#/components/schemas/VacanciesVacancyConditionFieldsContactsCondition"
              }
            ]
          },
          "custom_employer_name": {
            "type": "object",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              },
              {
                "$ref": "#/components/schemas/VacanciesVacancyConditionFieldsRequiredLengthWithTitle"
              }
            ]
          },
          "department": {
            "type": "object",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              },
              {
                "$ref": "#/components/schemas/VacanciesVacancyConditionFieldsRequiredLengthWithTitle"
              }
            ]
          },
          "description": {
            "type": "object",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              },
              {
                "$ref": "#/components/schemas/VacanciesVacancyConditionFieldsRequiredLengthWithTitle"
              }
            ]
          },
          "driver_license_types": {
            "type": "object",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              },
              {
                "$ref": "#/components/schemas/VacanciesVacancyConditionFieldsRequiredCountWithTitle"
              }
            ]
          },
          "employment": {
            "type": "object",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              },
              {
                "$ref": "#/components/schemas/VacanciesVacancyConditionFieldsRequiredWithTitle"
              }
            ]
          },
          "experience": {
            "type": "object",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              },
              {
                "$ref": "#/components/schemas/VacanciesVacancyConditionFieldsRequiredWithTitle"
              }
            ]
          },
          "key_skills": {
            "type": "object",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              },
              {
                "$ref": "#/components/schemas/VacanciesVacancyConditionFieldsRequiredCountWithTitle"
              }
            ]
          },
          "languages": {
            "type": "object",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              },
              {
                "$ref": "#/components/schemas/VacanciesVacancyConditionFieldsRequiredCountWithTitle"
              }
            ]
          },
          "manager": {
            "type": "object",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              },
              {
                "$ref": "#/components/schemas/VacanciesVacancyConditionFieldsRequiredWithTitle"
              }
            ]
          },
          "name": {
            "type": "object",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              },
              {
                "$ref": "#/components/schemas/VacanciesVacancyConditionFieldsRequiredLengthWithTitle"
              }
            ]
          },
          "professional_roles": {
            "type": "object",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              },
              {
                "$ref": "#/components/schemas/VacanciesVacancyConditionFieldsRequiredCountWithTitle"
              }
            ]
          },
          "response_letter_required": {
            "type": "object",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              },
              {
                "$ref": "#/components/schemas/VacanciesVacancyConditionFieldsRequiredWithTitle"
              }
            ]
          },
          "response_notifications": {
            "type": "object",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              },
              {
                "$ref": "#/components/schemas/VacanciesVacancyConditionFieldsRequiredWithTitle"
              }
            ]
          },
          "response_url": {
            "type": "object",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              },
              {
                "$ref": "#/components/schemas/VacanciesVacancyConditionFieldsResponseUrlCondition"
              }
            ]
          },
          "salary": {
            "type": "object",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              },
              {
                "$ref": "#/components/schemas/VacanciesVacancyConditionFieldsSalaryCondition"
              }
            ]
          },
          "schedule": {
            "type": "object",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              },
              {
                "$ref": "#/components/schemas/VacanciesVacancyConditionFieldsRequiredWithTitle"
              }
            ]
          },
          "test": {
            "type": "object",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              },
              {
                "$ref": "#/components/schemas/VacanciesVacancyConditionFieldsTestCondition"
              }
            ]
          },
          "type": {
            "type": "object",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              },
              {
                "$ref": "#/components/schemas/VacanciesVacancyConditionFieldsRequiredWithTitle"
              }
            ]
          },
          "working_days": {
            "type": "object",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              },
              {
                "$ref": "#/components/schemas/VacanciesVacancyConditionFieldsRequiredCountWithTitle"
              }
            ]
          },
          "working_time_intervals": {
            "type": "object",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              },
              {
                "$ref": "#/components/schemas/VacanciesVacancyConditionFieldsRequiredCountWithTitle"
              }
            ]
          },
          "working_time_modes": {
            "type": "object",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              },
              {
                "$ref": "#/components/schemas/VacanciesVacancyConditionFieldsRequiredCountWithTitle"
              }
            ]
          }
        }
      },
      "VacanciesVacancyConditionFieldsRequiredLengthWithTitle": {
        "title": "Условия для поля",
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/VacanciesVacancyConditionFieldsMaxMinLength"
          },
          {
            "$ref": "#/components/schemas/VacanciesVacancyConditionFieldsRequired"
          }
        ]
      },
      "VacanciesVacancyConditionFieldsMaxMinLength": {
        "title": "Длина текстовых полей",
        "type": "object",
        "properties": {
          "max_length": {
            "type": "number",
            "description": "Максимальная длина для текстовых полей",
            "nullable": true
          },
          "min_length": {
            "type": "number",
            "description": "Минимальная длина для текстовых полей",
            "nullable": true
          }
        }
      },
      "VacanciesVacancyConditionFieldsRequired": {
        "title": "Необходимость поля",
        "type": "object",
        "properties": {
          "required": {
            "type": "boolean",
            "description": "Является ли поле необходимым?",
            "nullable": true
          }
        }
      },
      "VacanciesVacancyConditionFieldsTestCondition": {
        "title": "Условия заполнения теста",
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/VacanciesVacancyConditionFieldsRequiredWithTitle"
          },
          {
            "type": "object",
            "properties": {
              "fields": {
                "$ref": "#/components/schemas/VacanciesVacancyConditionFieldsTestFields"
              }
            }
          }
        ]
      },
      "VacanciesVacancyConditionFieldsTestFields": {
        "title": "Условия для полей",
        "type": "object",
        "nullable": true,
        "properties": {
          "required": {
            "type": "object",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              },
              {
                "$ref": "#/components/schemas/VacanciesVacancyConditionFieldsRequired"
              }
            ]
          }
        }
      },
      "VacanciesVacancyConditionFieldsRequiredWithTitle": {
        "title": "Условия для поля",
        "type": "object",
        "properties": {
          "required": {
            "type": "boolean",
            "description": "Является ли поле необходимым?",
            "nullable": true
          }
        }
      },
      "VacanciesVacancyConditionFieldsContactsCondition": {
        "title": "Условия заполнения контактов",
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/VacanciesVacancyConditionFieldsRequiredWithTitle"
          },
          {
            "type": "object",
            "properties": {
              "fields": {
                "$ref": "#/components/schemas/VacanciesVacancyConditionFieldsContactFields"
              }
            }
          }
        ]
      },
      "VacanciesVacancyConditionFieldsContactFields": {
        "title": "Условия для полей",
        "type": "object",
        "nullable": true,
        "properties": {
          "email": {
            "type": "object",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              },
              {
                "$ref": "#/components/schemas/VacanciesVacancyConditionFieldsRequiredLengthWithTitle"
              }
            ]
          },
          "name": {
            "type": "object",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              },
              {
                "$ref": "#/components/schemas/VacanciesVacancyConditionFieldsRequiredLengthWithTitle"
              }
            ]
          },
          "phones": {
            "type": "object",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              },
              {
                "$ref": "#/components/schemas/VacanciesVacancyConditionFieldsPhoneCondition"
              }
            ]
          }
        }
      },
      "VacanciesVacancyConditionFieldsPhoneCondition": {
        "title": "Условия заполнения телефона",
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/VacanciesVacancyConditionFieldsRequiredCountWithTitle"
          },
          {
            "type": "object",
            "properties": {
              "fields": {
                "$ref": "#/components/schemas/VacanciesVacancyConditionFieldsPhoneFields"
              }
            }
          }
        ]
      },
      "VacanciesVacancyConditionFieldsRequiredCountWithTitle": {
        "title": "Условия для поля",
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/VacanciesVacancyConditionFieldsMaxMinCount"
          },
          {
            "$ref": "#/components/schemas/VacanciesVacancyConditionFieldsRequired"
          }
        ]
      },
      "VacanciesVacancyConditionFieldsMaxMinCount": {
        "title": "Условия по количеству для полей",
        "type": "object",
        "properties": {
          "max_count": {
            "type": "number",
            "description": "Максимальное количество объектов для полей, в которых передается список. Если `null` — количество неограниченно",
            "nullable": true
          },
          "min_count": {
            "type": "number",
            "description": "Минимальное количество объектов для полей, в которых передается список",
            "nullable": true
          }
        }
      },
      "VacanciesVacancyConditionFieldsPhoneFields": {
        "title": "Условия для полей",
        "type": "object",
        "nullable": true,
        "properties": {
          "city": {
            "type": "object",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              },
              {
                "$ref": "#/components/schemas/VacanciesVacancyConditionFieldsCityCondition"
              }
            ]
          },
          "comment": {
            "type": "object",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              },
              {
                "$ref": "#/components/schemas/VacanciesVacancyConditionFieldsRequiredLengthWithTitle"
              }
            ]
          },
          "country": {
            "type": "object",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              },
              {
                "$ref": "#/components/schemas/VacanciesVacancyConditionFieldsCountryCondition"
              }
            ]
          },
          "formatted": {
            "type": "object",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              },
              {
                "$ref": "#/components/schemas/VacanciesVacancyConditionFieldsFormattedCondition"
              }
            ]
          },
          "number": {
            "type": "object",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              },
              {
                "$ref": "#/components/schemas/VacanciesVacancyConditionFieldsNumberCondition"
              }
            ]
          }
        }
      },
      "VacanciesVacancyConditionFieldsNumberCondition": {
        "title": "Условия заполнения номера",
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/VacanciesVacancyConditionFieldsRequiredLengthWithTitle"
          },
          {
            "$ref": "#/components/schemas/VacanciesVacancyConditionFieldsRegexp"
          }
        ]
      },
      "VacanciesVacancyConditionFieldsRegexp": {
        "title": "Регулярное выражение, которому должно отвечать значение поля",
        "type": "object",
        "properties": {
          "regexp": {
            "type": "string",
            "description": "Регулярное выражение, которому должно отвечать значение поля",
            "nullable": true
          }
        }
      },
      "VacanciesVacancyConditionFieldsCountryCondition": {
        "title": "Условия заполнения страны",
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/VacanciesVacancyConditionFieldsRequiredLengthWithTitle"
          },
          {
            "$ref": "#/components/schemas/VacanciesVacancyConditionFieldsRegexp"
          }
        ]
      },
      "VacanciesVacancyConditionFieldsCityCondition": {
        "title": "Условия заполнения города",
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/VacanciesVacancyConditionFieldsRequiredLengthWithTitle"
          },
          {
            "$ref": "#/components/schemas/VacanciesVacancyConditionFieldsRegexp"
          }
        ]
      },
      "VacanciesVacancyConditionFieldsFormattedCondition": {
        "title": "Условия заполнения форматированного телефона",
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/VacanciesVacancyConditionFieldsRequiredLengthWithTitle"
          },
          {
            "$ref": "#/components/schemas/VacanciesVacancyConditionFieldsRegexp"
          }
        ]
      },
      "VacanciesVacancyConditionFieldsAddressCondition": {
        "title": "Условия заполнения адреса",
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/VacanciesVacancyConditionFieldsRequiredWithTitle"
          },
          {
            "type": "object",
            "properties": {
              "fields": {
                "$ref": "#/components/schemas/VacanciesVacancyConditionFieldsAddressFields"
              }
            }
          }
        ]
      },
      "VacanciesVacancyConditionFieldsAddressFields": {
        "title": "Условия для полей",
        "type": "object",
        "nullable": true,
        "properties": {
          "show_metro_only": {
            "type": "object",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              },
              {
                "$ref": "#/components/schemas/VacanciesVacancyConditionFieldsRequired"
              }
            ]
          }
        }
      },
      "VacanciesVacancyConditionFieldsResponseUrlCondition": {
        "title": "Условия заполнения урла",
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/VacanciesVacancyConditionFieldsRequiredLengthWithTitle"
          },
          {
            "$ref": "#/components/schemas/VacanciesVacancyConditionFieldsRegexp"
          }
        ]
      },
      "VacanciesVacancyConditionFieldsSalaryCondition": {
        "title": "Условия заполнения зарплаты",
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/VacanciesVacancyConditionFieldsRequiredWithTitle"
          },
          {
            "type": "object",
            "properties": {
              "fields": {
                "$ref": "#/components/schemas/VacanciesVacancyConditionFieldsSalaryFields"
              }
            }
          }
        ]
      },
      "VacanciesVacancyConditionFieldsSalaryFields": {
        "title": "Условия для полей",
        "type": "object",
        "nullable": true,
        "properties": {
          "currency": {
            "type": "object",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              },
              {
                "$ref": "#/components/schemas/VacanciesVacancyConditionFieldsRequiredWithTitle"
              }
            ]
          },
          "from": {
            "type": "object",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              },
              {
                "$ref": "#/components/schemas/VacanciesVacancyConditionFieldsRequiredWithTitle"
              }
            ]
          },
          "gross": {
            "type": "object",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              },
              {
                "$ref": "#/components/schemas/VacanciesVacancyConditionFieldsRequiredWithTitle"
              }
            ]
          },
          "to": {
            "type": "object",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              },
              {
                "$ref": "#/components/schemas/VacanciesVacancyConditionFieldsRequiredWithTitle"
              }
            ]
          }
        }
      },
      "ErrorsRequestEntityTooLargeErrors": {
        "title": "В запросе передана слишком большая сущность",
        "description": "Информация о возникших ошибках",
        "allOf": [
          {
            "$ref": "#/components/schemas/ErrorsCommonErrorRequestId"
          },
          {
            "type": "object",
            "required": [
              "errors"
            ],
            "properties": {
              "errors": {
                "type": "array",
                "description": "Массив с данными ошибок",
                "minItems": 1,
                "items": {
                  "$ref": "#/components/schemas/ErrorsRequestEntityTooLargeError"
                }
              }
            }
          }
        ]
      },
      "ErrorsRequestEntityTooLargeError": {
        "title": "Слишком большой файл",
        "type": "object",
        "additionalProperties": false,
        "required": [
          "type",
          "value"
        ],
        "properties": {
          "type": {
            "type": "string",
            "description": "Текстовый идентификатор типа ошибки",
            "example": "artifacts",
            "enum": [
              "artifacts"
            ]
          },
          "value": {
            "type": "string",
            "description": "Краткое текстовое описание причины ошибки",
            "example": "image_too_large",
            "enum": [
              "image_too_large"
            ]
          }
        }
      },
      "ResumesSearchForResumesResponse": {
        "title": "Результаты поиска резюме",
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/_IncludesPagination"
          },
          {
            "$ref": "#/components/schemas/ResumesSearchForResumesItems"
          }
        ]
      },
      "ResumesSearchForResumesItems": {
        "title": "Найденные резюме",
        "type": "object",
        "required": [
          "items"
        ],
        "properties": {
          "items": {
            "type": "array",
            "description": "Массив найденных резюме",
            "items": {
              "$ref": "#/components/schemas/ResumesSearchForResumesItem"
            }
          }
        }
      },
      "ResumesSearchForResumesItem": {
        "title": "Найденное резюме",
        "type": "object",
        "anyOf": [
          {
            "$ref": "#/components/schemas/ResumesSearchForEmployerAndApplicant"
          }
        ]
      },
      "ResumesSearchForEmployerAndApplicant": {
        "title": "Найденное резюме для соискателя и работодателя",
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/ResumeResumeShort"
          },
          {
            "$ref": "#/components/schemas/ResumeObjectsLastNegotiations"
          },
          {
            "$ref": "#/components/schemas/ResumesSearchForResumesPrivateFields"
          },
          {
            "type": "object",
            "properties": {
              "job_search_status": {
                "description": "Для получения данных нужно передать параметр `with_job_search_status=true`\n",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/_IncludesIdNameLastChangeTime"
                  }
                ]
              },
              "url": {
                "type": "string",
                "description": "Ссылка на резюме"
              }
            }
          }
        ]
      },
      "ResumeObjectsLastNegotiations": {
        "title": "Последний статус в истории откликов/приглашений",
        "type": "object",
        "properties": {
          "last_negotiation": {
            "type": "object",
            "description": "Информация о последнем статусе в истории откликов/приглашений",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ResumesNegotiationNano"
              },
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              }
            ]
          }
        }
      },
      "ResumesNegotiationNano": {
        "title": "Базовая информация об отклике/приглашении",
        "type": "object",
        "required": [
          "employer_state",
          "created_at"
        ],
        "properties": {
          "created_at": {
            "type": "string",
            "description": "Дата изменения состояния отклика/приглашения"
          },
          "employer_state": {
            "allOf": [
              {
                "type": "object",
                "description": "Отклик/приглашение"
              },
              {
                "$ref": "#/components/schemas/_IncludesIdName"
              }
            ]
          }
        }
      },
      "ResumesSearchForResumesPrivateFields": {
        "title": "Приватные поля при поиске резюме",
        "type": "object"
      },
      "VacancyDraftVacancyDraftCreate": {
        "title": "Объект создания черновика вакансии",
        "allOf": [
          {
            "$ref": "#/components/schemas/VacancyDraftVacancyDraftBodyCommon"
          },
          {
            "type": "object"
          }
        ]
      },
      "VacancyDraftVacancyDraftBodyCommon": {
        "title": "Объект черновика вакансии",
        "type": "object",
        "properties": {
          "accept_handicapped": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/VacancyAcceptHandicapped"
              },
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              }
            ]
          },
          "accept_incomplete_resumes": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/VacancyAcceptIncompleteResumes"
              },
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              }
            ]
          },
          "accept_kids": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/VacancyAcceptKids"
              },
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              }
            ]
          },
          "accept_temporary": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/VacancyAcceptTemporary"
              },
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              }
            ]
          },
          "address": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/VacancyDraftAddress"
              },
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              }
            ]
          },
          "allow_messages": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/VacancyAllowMessages"
              },
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              }
            ]
          },
          "area": {
            "deprecated": true,
            "anyOf": [
              {
                "$ref": "#/components/schemas/VacancyArea"
              },
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              }
            ]
          },
          "areas": {
            "description": "Можно передать не более 50 элементов",
            "anyOf": [
              {
                "$ref": "#/components/schemas/VacancyDraftAreas"
              },
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              }
            ]
          },
          "assigned_manager_id": {
            "$ref": "#/components/schemas/VacancyDraftAssignedManagerId"
          },
          "billing_type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/VacancyDraftBillingType"
              },
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              }
            ]
          },
          "branded_template": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/VacancyDraftBrandedTemplate"
              },
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              }
            ]
          },
          "code": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/VacancyDraftCode"
              },
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              }
            ]
          },
          "contacts": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/VacancyDraftContacts"
              },
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              }
            ]
          },
          "custom_employer_name": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/VacancyCustomEmployerName"
              },
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              }
            ]
          },
          "department": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/VacancyDepartment"
              },
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              }
            ]
          },
          "description": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/VacancyDraftDescription"
              },
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              }
            ]
          },
          "driver_license_types": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/VacancyDriverLicenseTypes"
              },
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              }
            ]
          },
          "employment": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/VacancyDraftEmployment"
              },
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              }
            ]
          },
          "experience": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/VacancyExperience"
              },
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              }
            ]
          },
          "key_skills": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/VacancyDraftKeySkills"
              },
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              }
            ]
          },
          "languages": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/VacancyLanguages"
              },
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              }
            ]
          },
          "name": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/VacancyDraftName"
              },
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              }
            ]
          },
          "professional_roles": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/VacancyDraftProfessionalRoles"
              },
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              }
            ]
          },
          "response_letter_required": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/VacancyResponseLetterRequired"
              },
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              }
            ]
          },
          "response_notifications": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/VacancyResponseNotifications"
              },
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              }
            ]
          },
          "response_url": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/VacancyDraftResponseUrl"
              },
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              }
            ]
          },
          "salary": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/VacancySalary"
              },
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              }
            ]
          },
          "schedule": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/VacancySchedule"
              },
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              }
            ]
          },
          "test": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/VacancyDraftTest"
              },
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              }
            ]
          },
          "type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/VacancyDraftType"
              },
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              }
            ]
          },
          "with_zp": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/VacancyDraftWithZp"
              },
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              }
            ]
          },
          "working_days": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/VacancyWorkingDays"
              },
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              }
            ]
          },
          "working_time_intervals": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/VacancyWorkingTimeIntervals"
              },
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              }
            ]
          },
          "working_time_modes": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/VacancyWorkingTimeModes"
              },
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              }
            ]
          }
        }
      },
      "VacancyDraftAssignedManagerId": {
        "title": "Менеджер, к которому перейдет вакансия после публикации",
        "type": "string",
        "description": "Идентификатор рабочего аккаунта менеджера, которому перейдет вакансия после публикации",
        "nullable": true
      },
      "VacancyDraftCode": {
        "title": "Код вакансии",
        "type": "string",
        "description": "Внутренний код вакансии",
        "minLength": 1,
        "nullable": true
      },
      "VacancyDraftEmployment": {
        "title": "Тип занятости",
        "type": "object",
        "nullable": true,
        "properties": {
          "id": {
            "type": "string",
            "description": "Тип занятости из [справочника employment](#tag/Obshie-spravochniki/operation/get-dictionaries). По умолчанию или ошибке в поле ставится full",
            "nullable": true
          }
        }
      },
      "VacancyDraftName": {
        "title": "Название",
        "type": "string",
        "description": "Название",
        "minLength": 1,
        "nullable": true
      },
      "VacancyDraftBrandedTemplate": {
        "title": "Брендированный шаблон",
        "type": "object",
        "description": "Брендированный шаблон вакансий работодателя из [списка доступных](#tag/Informaciya-o-rabotodatele/operation/get-vacancy-branded-templates-list), либо `null`, если не используется у компании\n",
        "required": [
          "id"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "Идентификатор брендированного шаблона вакансий работодателя из [списка доступных](#tag/Informaciya-o-rabotodatele/operation/get-vacancy-branded-templates-list)"
          }
        }
      },
      "VacancyDraftKeySkills": {
        "title": "Ключевые навыки",
        "type": "array",
        "description": "Список ключевых навыков, не более 30",
        "nullable": true,
        "items": {
          "$ref": "#/components/schemas/VacancyDraftKeySkillItem"
        }
      },
      "VacancyDraftKeySkillItem": {
        "title": "Объект ключевых навыков",
        "type": "object",
        "nullable": true,
        "properties": {
          "name": {
            "type": "string",
            "description": "Название ключевого навыка (максимальная длина - 100 символов)",
            "minLength": 1
          }
        }
      },
      "VacancyDraftResponseUrl": {
        "title": "URL",
        "type": "string",
        "description": "URL отклика для прямых вакансий (`type.id=direct`)",
        "minLength": 1,
        "nullable": true
      },
      "VacancyDraftBillingType": {
        "title": "Биллинговый тип",
        "type": "object",
        "nullable": true,
        "properties": {
          "id": {
            "type": "string",
            "description": "Биллинговый тип [из справочника vacancy_billing_type](#tag/Obshie-spravochniki/operation/get-dictionaries)"
          }
        }
      },
      "VacancyDraftDescription": {
        "title": "Описание",
        "type": "string",
        "description": "Описание в html, минимум 1 символ, для успешной публикации вакансии не менее 200 символов",
        "minLength": 1,
        "nullable": true
      },
      "VacancyDraftAddress": {
        "title": "Адрес",
        "type": "object",
        "description": "Адрес",
        "nullable": true,
        "properties": {
          "id": {
            "type": "string",
            "description": "Адрес из [списка доступных адресов работодателя](#tag/Adresa-rabotodatelya/operation/get-employer-addresses)",
            "pattern": "^\\d+$",
            "nullable": true
          },
          "show_metro_only": {
            "type": "boolean",
            "description": "Показывать только метро для указанного адреса",
            "nullable": true
          }
        }
      },
      "VacancyDraftAreas": {
        "title": "Регионы публикации вакансии",
        "type": "array",
        "description": "Список регионов",
        "nullable": true,
        "items": {
          "$ref": "#/components/schemas/VacancyArea"
        }
      },
      "VacancyDraftProfessionalRoles": {
        "title": "Профессиональные роли",
        "type": "array",
        "description": "Список профессиональных ролей",
        "nullable": true,
        "items": {
          "$ref": "#/components/schemas/VacancyDraftProfessionalRoleItem"
        }
      },
      "VacancyDraftProfessionalRoleItem": {
        "title": "Объект профессиональной роли",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Идентификатор профессиональной роли. Элемент справочника [professional_roles](#tag/Obshie-spravochniki/operation/get-professional-roles-dictionary)",
            "pattern": "^\\d+$"
          }
        }
      },
      "VacancyDraftContacts": {
        "title": "Контакты",
        "type": "object",
        "description": "Контактная информация",
        "nullable": true,
        "properties": {
          "email": {
            "type": "string",
            "description": "Email",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Имя менеджера",
            "nullable": true
          },
          "phones": {
            "type": "array",
            "description": "Список телефонов для связи",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/VacancyDraftPhoneItem"
            }
          }
        }
      },
      "VacancyDraftPhoneItem": {
        "title": "Объект телефона для связи",
        "oneOf": [
          {
            "$ref": "#/components/schemas/VacancyDraftPhone"
          },
          {
            "$ref": "#/components/schemas/VacancyDraftPhoneFormatted"
          }
        ]
      },
      "VacancyDraftPhone": {
        "title": "Телефон для черновика",
        "type": "object",
        "required": [
          "country",
          "city",
          "number"
        ],
        "properties": {
          "city": {
            "type": "string",
            "description": "Код города",
            "pattern": "^\\d+$"
          },
          "comment": {
            "type": "string",
            "description": "Комментарий (удобное время для звонка по этому номеру)",
            "nullable": true
          },
          "country": {
            "type": "string",
            "description": "Код страны",
            "pattern": "^\\d+$"
          },
          "number": {
            "type": "string",
            "description": "Абонентская часть телефонного номера",
            "pattern": "^\\d+$"
          }
        }
      },
      "VacancyDraftPhoneFormatted": {
        "title": "Отформатированный номер телефона",
        "type": "object",
        "required": [
          "formatted"
        ],
        "properties": {
          "comment": {
            "type": "string",
            "description": "Комментарий (удобное время для звонка по этому номеру)",
            "nullable": true
          },
          "formatted": {
            "type": "string",
            "description": "Телефонный номер целиком",
            "pattern": "^\\d+$"
          }
        }
      },
      "VacancyDraftType": {
        "title": "Тип",
        "type": "object",
        "nullable": true,
        "properties": {
          "id": {
            "type": "string",
            "description": "Тип из [справочника vacancy_type](#tag/Obshie-spravochniki/operation/get-dictionaries)",
            "minLength": 1
          }
        }
      },
      "ResumesByStatusResponse": {
        "title": "Резюме, сгруппированные по возможности отклика",
        "type": "object",
        "required": [
          "suitable",
          "not_published",
          "already_applied",
          "unavailable"
        ],
        "properties": {
          "already_applied": {
            "type": "array",
            "description": "Список резюме, уже использованных для отклика на данную вакансию",
            "items": {
              "$ref": "#/components/schemas/ResumesSuitableResumeItem"
            }
          },
          "counters": {
            "type": "object",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              },
              {
                "$ref": "#/components/schemas/ResumesByStatusCounters"
              }
            ]
          },
          "not_published": {
            "type": "array",
            "description": "Список неопубликованных резюме (в [статусе](#tag/Rezyume.-Prosmotr-informacii/Status-rezyume) `not_published` или `blocked`)",
            "items": {
              "$ref": "#/components/schemas/ResumesSuitableResumeItem"
            }
          },
          "suitable": {
            "type": "array",
            "description": "Список резюме, которыми можно откликнуться на данную вакансию",
            "items": {
              "$ref": "#/components/schemas/ResumesSuitableResumeItem"
            }
          },
          "unavailable": {
            "type": "array",
            "description": "Список резюме, которыми невозможно откликнуться на данную вакансию (например, из-за конфликтующих настроек видимости)",
            "items": {
              "$ref": "#/components/schemas/ResumesSuitableResumeItem"
            }
          }
        }
      },
      "ResumesByStatusCounters": {
        "title": "Количество резюме",
        "type": "object",
        "description": "Количество резюме в списках",
        "required": [
          "suitable",
          "not_published",
          "already_applied",
          "unavailable"
        ],
        "properties": {
          "already_applied": {
            "type": "number",
            "description": "Количество резюме, уже использованных для отклика на данную вакансию"
          },
          "not_published": {
            "type": "number",
            "description": "Количество неопубликованных резюме (в [статусе](#tag/Rezyume.-Prosmotr-informacii/Status-rezyume) `not_published` или `blocked`)"
          },
          "suitable": {
            "type": "number",
            "description": "Количество резюме, которыми можно откликнуться на данную вакансию"
          },
          "unavailable": {
            "type": "number",
            "description": "Количество резюме, которыми невозможно откликнуться на данную вакансию (например, из-за конфликтующих настроек видимости)"
          }
        }
      },
      "WebhookSendObjectBaseUser": {
        "title": "Сообщение о событии на уровне менеджера",
        "type": "object",
        "required": [
          "id",
          "subscription_id",
          "action_type",
          "user_id",
          "payload"
        ],
        "properties": {
          "action_type": {
            "type": "string",
            "description": "Тип экшена"
          },
          "id": {
            "type": "string",
            "description": "Идентификатор сообщения"
          },
          "payload": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/WebhookPayloadNewNegotiationVacancy"
              },
              {
                "$ref": "#/components/schemas/WebhookPayloadNewResponseOrInvitationVacancy"
              },
              {
                "$ref": "#/components/schemas/WebhookPayloadVacancyArchivation"
              },
              {
                "$ref": "#/components/schemas/WebhookPayloadVacancyPublicationForVacancyManager"
              },
              {
                "$ref": "#/components/schemas/WebhookPayloadVacancyProlongation"
              },
              {
                "$ref": "#/components/schemas/WebhookPayloadVacancyChange"
              },
              {
                "$ref": "#/components/schemas/WebhookPayloadNegotiationEmployerStateChange"
              }
            ]
          },
          "subscription_id": {
            "type": "string",
            "description": "Идентификатор подписки"
          },
          "user_id": {
            "type": "string",
            "description": "Идентификатор пользователя"
          }
        }
      },
      "WebhookPayloadVacancyChange": {
        "title": "VACANCY_CHANGE",
        "type": "object",
        "description": "Изменение вакансии",
        "required": [
          "vacancy_id",
          "change_date"
        ],
        "properties": {
          "change_date": {
            "type": "string",
            "description": "Дата изменения вакансии в формате [ISO 8601](http://en.wikipedia.org/wiki/ISO_8601) с точностью до секунды: `YYYY-MM-DDThh:mm:ss±hhmm`"
          },
          "vacancy_id": {
            "type": "string",
            "description": "Идентификатор вакансии"
          }
        }
      },
      "WebhookPayloadVacancyPublicationForVacancyManager": {
        "title": "VACANCY_PUBLICATION_FOR_VACANCY_MANAGER",
        "type": "object",
        "required": [
          "vacancy_id",
          "employer_manager_id",
          "creation_date"
        ],
        "properties": {
          "creation_date": {
            "type": "string",
            "description": "Дата создания вакансии в формате [ISO 8601](http://en.wikipedia.org/wiki/ISO_8601) с точностью до секунды: `YYYY-MM-DDThh:mm:ss±hhmm"
          },
          "employer_manager_id": {
            "type": "string",
            "description": "Идентификатор модератора вакансии"
          },
          "vacancy_id": {
            "type": "string",
            "description": "Идентификатор вакансии"
          }
        }
      },
      "WebhookPayloadNewResponseOrInvitationVacancy": {
        "title": "NEW_RESPONSE_OR_INVITATION_VACANCY",
        "type": "object",
        "description": "Новый отклик или приглашение на вакансии (в отличие от NEW_NEGOTIATION_VACANCY, данное событие будет вызываться как на отклик со стороны соискателя, так и на приглашение со стороны работодателя)",
        "required": [
          "topic_id",
          "resume_id",
          "vacancy_id",
          "employer_id",
          "response_date"
        ],
        "properties": {
          "employer_id": {
            "type": "string",
            "description": "Идентификатор работодателя"
          },
          "response_date": {
            "type": "string",
            "description": "Дата отклика или приглашения в формате [ISO 8601](http://en.wikipedia.org/wiki/ISO_8601) с точностью до секунды: `YYYY-MM-DDThh:mm:ss±hhmm`"
          },
          "resume_id": {
            "type": "string",
            "description": "Идентификатор резюме",
            "nullable": true
          },
          "topic_id": {
            "type": "string",
            "description": "Идентификатор топика"
          },
          "vacancy_id": {
            "type": "string",
            "description": "Идентификатор вакансии",
            "nullable": true
          }
        }
      },
      "WebhookPayloadNewNegotiationVacancy": {
        "title": "NEW_NEGOTIATION_VACANCY",
        "type": "object",
        "description": "Новый отклик на вакансию",
        "required": [
          "topic_id",
          "resume_id",
          "vacancy_id",
          "employer_id",
          "negotiation_date"
        ],
        "properties": {
          "employer_id": {
            "type": "string",
            "description": "Идентификатор работодателя"
          },
          "negotiation_date": {
            "description": "Дата отклика в формате [ISO 8601](http://en.wikipedia.org/wiki/ISO_8601) с точностью до секунды: `YYYY-MM-DDThh:mm:ss±hhmm`"
          },
          "resume_id": {
            "type": "string",
            "description": "Идентификатор резюме",
            "nullable": true
          },
          "topic_id": {
            "type": "string",
            "description": "Идентификатор топика"
          },
          "vacancy_id": {
            "type": "string",
            "description": "Идентификатор вакансии",
            "nullable": true
          }
        }
      },
      "WebhookPayloadVacancyArchivation": {
        "title": "VACANCY_ARCHIVATION",
        "type": "object",
        "description": "Архивация вакансии",
        "required": [
          "vacancy_id",
          "archivation_date"
        ],
        "properties": {
          "archivation_date": {
            "type": "string",
            "description": "Дата архивации вакансии в формате [ISO 8601](http://en.wikipedia.org/wiki/ISO_8601) с точностью до секунды: `YYYY-MM-DDThh:mm:ss±hhmm`"
          },
          "vacancy_id": {
            "type": "string",
            "description": "Идентификатор вакансии",
            "nullable": true
          }
        }
      },
      "WebhookPayloadNegotiationEmployerStateChange": {
        "title": "NEGOTIATION_EMPLOYER_STATE_CHANGE",
        "type": "object",
        "description": "Изменение этапа, на котором находится кандидат на вакансии. Содержит информацию о том кто, какое резюме с какого на какой \nстатус перевел\n",
        "required": [
          "topic_id",
          "vacancy_id",
          "from_state",
          "to_state",
          "employer_manager_id",
          "resume_id",
          "transferred_at"
        ],
        "properties": {
          "employer_manager_id": {
            "type": "string",
            "description": "Идентификатор менеджера, совершившего перевод"
          },
          "from_state": {
            "type": "string",
            "description": "С какого статуса перевели"
          },
          "resume_id": {
            "type": "string",
            "description": "Идентификатор резюме"
          },
          "to_state": {
            "type": "string",
            "description": "На какой статус перевели"
          },
          "topic_id": {
            "type": "string",
            "description": "Идентификатор топика"
          },
          "transferred_at": {
            "type": "string",
            "description": "Время перевода на новый этап"
          },
          "vacancy_id": {
            "type": "string",
            "description": "Идентификатор вакансии"
          }
        }
      },
      "WebhookPayloadVacancyProlongation": {
        "title": "VACANCY_PROLONGATION",
        "type": "object",
        "description": "Продление вакансии",
        "required": [
          "vacancy_id",
          "prolongation_date"
        ],
        "properties": {
          "prolongation_date": {
            "type": "string",
            "description": "Дата продления вакансии в формате [ISO 8601](http://en.wikipedia.org/wiki/ISO_8601) с точностью до секунды: `YYYY-MM-DDThh:mm:ss±hhmm`"
          },
          "vacancy_id": {
            "type": "string",
            "description": "Идентификатор вакансии"
          }
        }
      },
      "ErrorsCommonNotFoundErrors": {
        "title": "Не найдено",
        "description": "Информация о возникших ошибках",
        "allOf": [
          {
            "$ref": "#/components/schemas/ErrorsCommonErrorRequestId"
          },
          {
            "type": "object",
            "required": [
              "errors"
            ],
            "properties": {
              "errors": {
                "type": "array",
                "description": "Массив с данными ошибок",
                "minItems": 1,
                "items": {
                  "$ref": "#/components/schemas/ErrorsCommonNotFoundError"
                }
              }
            }
          }
        ]
      },
      "ErrorsCommonNotFoundError": {
        "title": "Ошибка",
        "type": "object",
        "additionalProperties": false,
        "required": [
          "type"
        ],
        "properties": {
          "type": {
            "type": "string",
            "description": "Текстовый идентификатор типа ошибки",
            "example": "not_found",
            "enum": [
              "not_found"
            ]
          }
        }
      },
      "VacanciesVacanciesBlacklistedResponse": {
        "title": "Скрытые вакансии",
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/_IncludesPagination"
          },
          {
            "$ref": "#/components/schemas/VacanciesVacanciesBlacklisted"
          }
        ]
      },
      "VacanciesVacanciesBlacklisted": {
        "title": "Скрытые вакансии",
        "properties": {
          "items": {
            "type": "array",
            "description": "Массив скрытых вакансий",
            "items": {
              "$ref": "#/components/schemas/VacanciesVacanciesBlacklistedItem"
            }
          },
          "limit_reached": {
            "type": "boolean",
            "description": "Превышено ли максимальное количество элементов в списке"
          }
        }
      },
      "VacanciesVacanciesBlacklistedItem": {
        "title": "Скрытая вакансия",
        "type": "object",
        "required": [
          "id",
          "premium",
          "name",
          "department",
          "has_test",
          "response_letter_required",
          "area",
          "salary",
          "type",
          "published_at",
          "archived",
          "apply_alternate_url",
          "url",
          "alternate_url",
          "relations",
          "employer"
        ],
        "properties": {
          "address": {
            "$ref": "#/components/schemas/VacancyAddress"
          },
          "adv_response_url": {
            "type": "string",
            "description": "URL для регистрации нажатия кнопки отклика"
          },
          "alternate_url": {
            "type": "string",
            "description": "Ссылка на представление вакансии на сайте"
          },
          "apply_alternate_url": {
            "type": "string",
            "description": "Ссылка на отклик на вакансию на сайте"
          },
          "archived": {
            "type": "boolean",
            "description": "Находится ли данная вакансия в архиве"
          },
          "area": {
            "$ref": "#/components/schemas/_IncludesArea"
          },
          "created_at": {
            "type": "string",
            "description": "Дата и время публикации вакансии"
          },
          "department": {
            "$ref": "#/components/schemas/VacancyDepartment"
          },
          "employer": {
            "$ref": "#/components/schemas/VacanciesEmployerPublic"
          },
          "has_test": {
            "type": "boolean",
            "description": "Информация о наличии прикрепленного тестового задании к вакансии"
          },
          "id": {
            "type": "string",
            "description": "Идентификатор вакансии"
          },
          "insider_interview": {
            "$ref": "#/components/schemas/VacanciesObjectsInsiderInterview"
          },
          "name": {
            "$ref": "#/components/schemas/VacancyName"
          },
          "premium": {
            "type": "boolean",
            "description": "Является ли данная вакансия премиум-вакансией"
          },
          "published_at": {
            "type": "string",
            "description": "Дата и время публикации вакансии"
          },
          "relations": {
            "$ref": "#/components/schemas/VacancyRelations"
          },
          "response_letter_required": {
            "$ref": "#/components/schemas/VacancyResponseLetterRequired"
          },
          "response_url": {
            "$ref": "#/components/schemas/VacancyResponseUrl"
          },
          "salary": {
            "$ref": "#/components/schemas/VacancySalary"
          },
          "sort_point_distance": {
            "$ref": "#/components/schemas/VacancySortPointDistance"
          },
          "type": {
            "$ref": "#/components/schemas/VacancyTypeOutput"
          },
          "url": {
            "type": "string",
            "description": "URL вакансии"
          }
        }
      },
      "EmployerServicesEmployerServices": {
        "title": "Перечень услуг",
        "required": [
          "items"
        ],
        "properties": {
          "items": {
            "title": "Перечень услуг",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EmployerServicesEmployerServiceItem"
            }
          }
        }
      },
      "EmployerServicesEmployerServiceItem": {
        "title": "Услуга",
        "required": [
          "id",
          "service_type",
          "activated_at",
          "expires_at"
        ],
        "properties": {
          "activated_at": {
            "type": "string",
            "description": "Время активации услуги (в формате [ISO 8601](http://en.wikipedia.org/wiki/ISO_8601) с точностью до секунды: `YYYY-MM-DDThh:mm:ss±hhmm`",
            "pattern": "^\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d(?:\\.\\d+)?((\\+|-)[0-1][0-9]{3})?$"
          },
          "balance": {
            "description": "Значения баланса. Только для пакетных услуг",
            "nullable": true,
            "$ref": "#/components/schemas/EmployerServicesBalance"
          },
          "expires_at": {
            "type": "string",
            "description": "Время истечения услуги (в формате [ISO 8601](http://en.wikipedia.org/wiki/ISO_8601) с точностью до секунды: `YYYY-MM-DDThh:mm:ss±hhmm`",
            "pattern": "^\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d(?:\\.\\d+)?((\\+|-)[0-1][0-9]{3})?$"
          },
          "id": {
            "type": "string",
            "description": "Идентификатор услуги"
          },
          "service_type": {
            "description": "Тип услуги",
            "$ref": "#/components/schemas/EmployerServicesServiceType"
          }
        }
      },
      "EmployerServicesServiceType": {
        "title": "Тип услуги",
        "required": [
          "id",
          "name"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "Идентификатор типа услуги"
          },
          "name": {
            "type": "string",
            "description": "Локализованное название типа услуги"
          }
        }
      },
      "EmployerServicesBalance": {
        "title": "Баланс услуг",
        "required": [
          "actual",
          "initial"
        ],
        "properties": {
          "actual": {
            "type": "integer",
            "description": "Текущее значение баланса"
          },
          "initial": {
            "type": "integer",
            "description": "Значение баланса на момент активации услуги"
          }
        }
      },
      "VacanciesVacancyStatsResponse": {
        "title": "Статистика по опубликованной вакансии за 5 дней",
        "type": "object",
        "required": [
          "items"
        ],
        "properties": {
          "items": {
            "type": "array",
            "description": "Статистика за последние пять дней существования вакансии",
            "maxItems": 5,
            "minItems": 5,
            "items": {
              "$ref": "#/components/schemas/VacanciesVacancyStatsItem"
            }
          }
        }
      },
      "VacanciesVacancyStatsItem": {
        "title": "Статистика по вакансии",
        "type": "object",
        "required": [
          "date"
        ],
        "properties": {
          "date": {
            "type": "string",
            "description": "Дата в формате `YYYY-MM-DD`"
          },
          "responses": {
            "type": "number",
            "description": "Количество откликов на вакансию. `null` если дата в будущем или данных на эту дату нет",
            "nullable": true
          },
          "views": {
            "type": "number",
            "description": "Количество просмотров вакансии. `null` если дата в будущем или данных на эту дату нет",
            "nullable": true
          }
        }
      },
      "VacancyDraftVacanciesDraftResponse": {
        "title": "Ответ на создание черновика",
        "type": "object",
        "nullable": false,
        "properties": {
          "vacancy_ids": {
            "type": "array",
            "minItems": 1,
            "example": [
              "30251619",
              "30251620"
            ],
            "items": {
              "type": "number"
            }
          }
        }
      },
      "ResumesResumeNegotiationsHistoryResponse": {
        "title": "История откликов/приглашений по резюме",
        "type": "object",
        "required": [
          "vacancies"
        ],
        "properties": {
          "vacancies": {
            "type": "array",
            "description": "Массив вакансий",
            "items": {
              "$ref": "#/components/schemas/ResumesResumeNegotiationsHistoryVacancy"
            }
          }
        }
      },
      "ResumesResumeNegotiationsHistoryVacancy": {
        "title": "Вакансия, связанная с резюме",
        "type": "object",
        "required": [
          "id",
          "name",
          "url",
          "archived",
          "can_edit",
          "items",
          "negotiations_url",
          "messages_url"
        ],
        "properties": {
          "archived": {
            "type": "boolean",
            "description": "Признак того, что вакансия находится в архиве"
          },
          "can_edit": {
            "type": "boolean",
            "description": "Признак того, что менеджер может редактировать данные вакансии, а также работать с информацией об откликах/приглашениях по этой вакансии"
          },
          "id": {
            "type": "string",
            "description": "Уникальный идентификатор вакансии"
          },
          "items": {
            "type": "array",
            "description": "Список последних изменений состояний откликов/приглашений по указанному резюме и данной вакансии",
            "items": {
              "$ref": "#/components/schemas/ResumesResumeNegotiationsHistoryVacancyItem"
            }
          },
          "messages_url": {
            "type": "string",
            "description": "URL, на который необходимо делать GET запрос для получения [списка сообщений в отклике/приглашении](https://github.com/hhru/api/blob/master/docs/employer_negotiations.md#get-messages). Если `can_edit` равно `false`, значение поля должно игнорироваться"
          },
          "name": {
            "type": "string",
            "description": "Название вакансии"
          },
          "negotiations_url": {
            "type": "string",
            "description": "URL, на который необходимо делать GET-запрос для получения [данных об отклике/приглашении](#tag/Otklikipriglasheniya-rabotodatelya/operation/get-negotiation-item). Если `can_edit` равно `false`, значение поля должно игнорироваться"
          },
          "url": {
            "type": "string",
            "description": "URL, на который необходимо делать GET-запрос для [получения данных о вакансии](#tag/Vakansii/operation/get-vacancy)"
          }
        }
      },
      "ResumesResumeNegotiationsHistoryVacancyItem": {
        "title": "Изменение состояния откликов/приглашений",
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/ResumesNegotiationNano"
          },
          {
            "type": "object",
            "required": [
              "with_message"
            ],
            "properties": {
              "with_message": {
                "type": "boolean",
                "description": "Признак того, что при изменении состояния отклика/приглашения было отправлено сообщение соискателю"
              }
            }
          }
        ]
      },
      "VacanciesVisitorsResponse": {
        "title": "Успешный ответ",
        "allOf": [
          {
            "$ref": "#/components/schemas/VacanciesVisitorsVisitorItems"
          },
          {
            "$ref": "#/components/schemas/_IncludesPagination"
          },
          {
            "$ref": "#/components/schemas/VacanciesVisitorsHiddenOnPage"
          }
        ]
      },
      "VacanciesVisitorsHiddenOnPage": {
        "title": "Количество удаленных или скрытых соискателями резюме",
        "type": "object",
        "required": [
          "hidden_on_page"
        ],
        "properties": {
          "hidden_on_page": {
            "type": "number",
            "description": "Количество удаленных или скрытых соискателями резюме на странице"
          }
        }
      },
      "VacanciesVisitorsVisitorItems": {
        "title": "Список резюме в сокращенном представлении",
        "required": [
          "items"
        ],
        "properties": {
          "items": {
            "type": "array",
            "description": "Список сокращенных представлений резюме",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/ResumeResumeShort"
                },
                {
                  "$ref": "#/components/schemas/_IncludesUrl"
                }
              ]
            }
          }
        }
      },
      "NegotiationsNegotiationMessageTemplates": {
        "title": "Список шаблонов откликов/приглашений",
        "type": "object",
        "required": [
          "mail"
        ],
        "properties": {
          "mail": {
            "description": "Список шаблонов сообщений",
            "$ref": "#/components/schemas/NegotiationsNegotiationMessageTemplate"
          },
          "sms": {
            "description": "Список шаблонов сообщений",
            "$ref": "#/components/schemas/NegotiationsNegotiationMessageTemplate"
          }
        }
      },
      "NegotiationsNegotiationMessageTemplate": {
        "title": "Шаблон ответа соискателю",
        "required": [
          "text",
          "template_modified"
        ],
        "properties": {
          "employer_state": {
            "type": "string",
            "description": "Работодательский статус, соответствующий данному шаблону; может отсутствовать если шаблон не связан с каким-либо статусом"
          },
          "template_modified": {
            "type": "boolean",
            "description": "Был ли изменен шаблон работодателем или же используется стандартный шаблон с текстом от Хэдхантер"
          },
          "text": {
            "type": "string",
            "description": "Текст шаблона"
          }
        }
      },
      "ResumePhoneGenerateCodeGenerateCode": {
        "title": "Сгенерированный код",
        "type": "object",
        "properties": {
          "can_request_code_again_in": {
            "type": "string",
            "description": "Ближайшая возможная повторная отправка кода в секундах",
            "example": "15"
          },
          "notification_type": {
            "type": "string",
            "description": "Тип сгенерированного сообщения",
            "example": "sms"
          }
        }
      },
      "DictionariesSalaryStatisticsProfessionalAreasResponse": {
        "title": "Список профобластей и специализаций",
        "type": "array",
        "description": "Список профобластей и специализаций",
        "items": {
          "type": "object",
          "description": "Профобласть и специализации",
          "allOf": [
            {
              "$ref": "#/components/schemas/_IncludesIdName"
            },
            {
              "$ref": "#/components/schemas/DictionariesSalaryStatisticsSpecializations"
            }
          ]
        }
      },
      "DictionariesSalaryStatisticsSpecializations": {
        "title": "Специализации",
        "type": "object",
        "required": [
          "specializations"
        ],
        "properties": {
          "specializations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/_IncludesIdNameDesc"
            }
          }
        }
      },
      "EmployerDictionariesTestsResponse": {
        "title": "Успешный ответ",
        "required": [
          "items"
        ],
        "properties": {
          "items": {
            "title": "Список тестов",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EmployerDictionariesTestItem"
            }
          }
        }
      },
      "EmployerDictionariesTestItem": {
        "title": "Тест",
        "required": [
          "id",
          "name"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "Идентификатор теста"
          },
          "name": {
            "type": "string",
            "description": "Название теста"
          }
        }
      },
      "ResumesCreationAvailability": {
        "title": "Информация о возможности создания резюме",
        "type": "object",
        "required": [
          "is_creation_available",
          "max",
          "created",
          "remaining"
        ],
        "properties": {
          "created": {
            "type": "number",
            "description": "Количество созданных резюме"
          },
          "is_creation_available": {
            "type": "boolean",
            "description": "Доступно ли создание новых резюме для данного пользователя"
          },
          "max": {
            "type": "number",
            "description": "Максимально возможное количество резюме"
          },
          "remaining": {
            "type": "number",
            "description": "Количество доступных для создания резюме"
          }
        }
      },
      "MeSetInSearch": {
        "title": "Флаг «ищу работу»",
        "type": "object",
        "required": [
          "is_in_search"
        ],
        "properties": {
          "is_in_search": {
            "type": "string",
            "description": "Флаг «ищу работу». Возможные значения: `true`/`false`",
            "example": "true"
          }
        }
      },
      "MetroMetroResponse": {
        "title": "Список всех станций метро во всех городах",
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/MetroMetroItem"
        }
      },
      "MetroMetroItem": {
        "title": "Город",
        "required": [
          "id",
          "url",
          "name",
          "lines"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "Идентификатор города"
          },
          "lines": {
            "type": "array",
            "description": "Список линий метро в городе",
            "items": {
              "$ref": "#/components/schemas/MetroMetroLineWithStations"
            }
          },
          "name": {
            "type": "string",
            "description": "Название города"
          },
          "url": {
            "type": "string",
            "description": "URL запроса"
          }
        }
      },
      "ErrorsDraftError": {
        "title": "Ошибка",
        "type": "object",
        "additionalProperties": false,
        "required": [
          "type",
          "value"
        ],
        "properties": {
          "type": {
            "type": "string",
            "description": "Текстовый идентификатор типа ошибки",
            "example": "vacancy",
            "enum": [
              "vacancy"
            ]
          },
          "value": {
            "type": "string",
            "description": "Значение ошибки",
            "example": "vacancy_draft_limit_exceeded",
            "enum": [
              "vacancy_draft_limit_exceeded"
            ]
          }
        }
      },
      "AuthRefreshToken": {
        "title": "Параметры для обновление пары access и refresh токенов",
        "type": "object",
        "additionalProperties": false,
        "required": [
          "grant_type",
          "refresh_token"
        ],
        "properties": {
          "grant_type": {
            "type": "string",
            "description": "Cпособ запроса токена",
            "example": "refresh_token",
            "enum": [
              "refresh_token"
            ]
          },
          "refresh_token": {
            "type": "string",
            "description": "Refresh-токен, полученный ранее при [получении пары токенов](#section/Avtorizaciya/Obnovlenie-pary-access-i-refresh-tokenov) или прошлом обновлении пары",
            "minLength": 1,
            "example": "xuLNvUSv7FYM4MPfXDP9aJWe"
          }
        }
      },
      "ErrorsNegotiationNegotiationsNotFoundErrors": {
        "title": "Не найдено",
        "description": "Информация о возникших ошибках",
        "oneOf": [
          {
            "$ref": "#/components/schemas/ErrorsCommonNotFoundErrors"
          },
          {
            "$ref": "#/components/schemas/ErrorsNegotiationNotFoundErrors"
          }
        ]
      },
      "ErrorsNegotiationNotFoundErrors": {
        "title": "Не найдено",
        "description": "Информация о возникших ошибках",
        "allOf": [
          {
            "$ref": "#/components/schemas/ErrorsCommonErrorRequestId"
          },
          {
            "type": "object",
            "required": [
              "errors"
            ],
            "properties": {
              "description": {
                "type": "string",
                "description": "Описание типа ошибки"
              },
              "errors": {
                "type": "array",
                "description": "Массив с данными ошибок",
                "minItems": 1,
                "items": {
                  "$ref": "#/components/schemas/ErrorsNegotiationNotFoundError"
                }
              }
            }
          }
        ]
      },
      "ErrorsNegotiationNotFoundError": {
        "title": "Ошибка",
        "type": "object",
        "additionalProperties": false,
        "required": [
          "type",
          "value"
        ],
        "properties": {
          "type": {
            "type": "string",
            "description": "Текстовый идентификатор типа ошибки",
            "example": "negotiations",
            "enum": [
              "negotiations"
            ]
          },
          "value": {
            "type": "string",
            "description": "Уточнения по ошибке",
            "example": "topic_not_found",
            "enum": [
              "topic_not_found"
            ]
          }
        }
      },
      "DictionariesCountriesResponse": {
        "title": "Список стран",
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/_IncludesArea"
        }
      },
      "NegotiationsListResponse": {
        "title": "Успешный ответ",
        "anyOf": [
          {
            "$ref": "#/components/schemas/NegotiationsApplicantNegotiationsResponse"
          },
          {
            "$ref": "#/components/schemas/NegotiationsNegotiationsCollections"
          }
        ]
      },
      "NegotiationsApplicantNegotiationsResponse": {
        "title": "Успешный ответ",
        "allOf": [
          {
            "$ref": "#/components/schemas/NegotiationsListItems"
          },
          {
            "$ref": "#/components/schemas/_IncludesPagination"
          }
        ]
      },
      "NegotiationsListItems": {
        "title": "Список откликов",
        "type": "object",
        "required": [
          "items"
        ],
        "properties": {
          "items": {
            "type": "array",
            "description": "Список откликов",
            "items": {
              "$ref": "#/components/schemas/NegotiationsListItem"
            }
          }
        }
      },
      "NegotiationsListItem": {
        "title": "Отклик",
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/NegotiationsObjectsTopicItem"
          },
          {
            "type": "object",
            "required": [
              "url"
            ],
            "properties": {
              "resume": {
                "type": "object",
                "description": "Короткое представление резюме",
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/ResumeResumeNanoWithUrl"
                  },
                  {
                    "$ref": "#/components/schemas/_IncludesNullableObject"
                  }
                ]
              },
              "url": {
                "type": "string",
                "description": "Ссылка на полную версию отклика"
              }
            }
          }
        ]
      },
      "NegotiationsNegotiationsCollections": {
        "title": "Коллекции откликов/приглашений",
        "type": "object",
        "required": [
          "collections",
          "generated_collections",
          "employer_states"
        ],
        "properties": {
          "collections": {
            "type": "array",
            "description": "Коллекции откликов/приглашений для данной вакансии",
            "items": {
              "$ref": "#/components/schemas/NegotiationsNegotiationsCollection"
            }
          },
          "employer_states": {
            "type": "array",
            "description": "Состояния [откликов/приглашений](https://github.com/hhru/api/blob/master/docs/employer_negotiations.md#term-employer-state) вакансии для работодателя\n",
            "items": {
              "$ref": "#/components/schemas/EmployersEmployersState"
            }
          },
          "generated_collections": {
            "type": "array",
            "description": "Сгенерированные коллекции откликов/приглашений для данной вакансии",
            "items": {
              "$ref": "#/components/schemas/NegotiationsNegotiationsCollection"
            }
          }
        }
      },
      "NegotiationsNegotiationsCollection": {
        "title": "Информация о коллекции",
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/NegotiationsObjectsStates"
          },
          {
            "type": "object",
            "required": [
              "order_types"
            ],
            "properties": {
              "counters": {
                "$ref": "#/components/schemas/NegotiationsObjectsEmployerCounters"
              },
              "order_types": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/NegotiationsNegotiationsOrderTypes"
                }
              }
            }
          }
        ]
      },
      "NegotiationsObjectsEmployerCounters": {
        "title": "Объект со статистикой",
        "type": "object",
        "description": "Статистика откликов/приглашений коллекции",
        "properties": {
          "total": {
            "type": "integer",
            "description": "Общее количество откликов/приглашений в коллекции"
          },
          "with_updates": {
            "type": "integer",
            "description": "Количество откликов/приглашений в коллекции, требующих внимания"
          }
        }
      },
      "NegotiationsObjectsStates": {
        "title": "Информация о коллекции",
        "type": "object",
        "required": [
          "id",
          "name",
          "description",
          "url"
        ],
        "properties": {
          "description": {
            "type": "string",
            "description": "Описание коллекции"
          },
          "id": {
            "type": "string",
            "description": "Идентификатор коллекции"
          },
          "name": {
            "type": "string",
            "description": "Название коллекции"
          },
          "url": {
            "type": "string",
            "description": "URL, [GET-запрос на который](#tag/Otklikipriglasheniya-rabotodatelya/operation/get-negotiations) возвращает список откликов/приглашений коллекции\n"
          }
        }
      },
      "NegotiationsNegotiationsOrderTypes": {
        "title": "Варианты сортировки откликов/приглашений",
        "type": "object",
        "required": [
          "id",
          "name",
          "url"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "Уникальный идентификатор варианта сортировки"
          },
          "name": {
            "type": "string",
            "description": "Название варианта сортировки"
          },
          "url": {
            "type": "string",
            "description": "URL на коллекцию откликов/приглашений, отсортированных текущим вариантом"
          }
        }
      },
      "ErrorsEmployerBlacklistedErrors": {
        "title": "Ошибка добавления работодателя в скрытые",
        "description": "Информация о возникших ошибках",
        "allOf": [
          {
            "$ref": "#/components/schemas/ErrorsCommonErrorRequestId"
          },
          {
            "type": "object",
            "required": [
              "errors"
            ],
            "properties": {
              "description": {
                "type": "string",
                "description": "Описание ошибки"
              },
              "errors": {
                "type": "array",
                "description": "Массив с данными ошибок",
                "minItems": 1,
                "items": {
                  "$ref": "#/components/schemas/ErrorsEmployerBlacklistedError"
                }
              }
            }
          }
        ]
      },
      "ErrorsEmployerBlacklistedError": {
        "title": "Ошибка в параметре запроса",
        "type": "object",
        "additionalProperties": false,
        "required": [
          "type"
        ],
        "properties": {
          "type": {
            "type": "string",
            "description": "Текстовый идентификатор типа ошибки",
            "example": "employers_blacklist",
            "enum": [
              "employers_blacklist"
            ]
          },
          "value": {
            "type": "string",
            "description": "Название поля с ошибкой:\n* `limit_exceeded` — превышен лимит на количество работодателей в списке скрытых\n",
            "example": "limit_exceeded",
            "enum": [
              "limit_exceeded"
            ]
          }
        }
      },
      "NegotiationsMessagesGetResponse": {
        "title": "Список сообщений",
        "description": "Получение списка сообщений в отклике",
        "allOf": [
          {
            "$ref": "#/components/schemas/_IncludesPagination"
          },
          {
            "type": "object",
            "properties": {
              "items": {
                "type": "array",
                "description": "Список сообщений",
                "items": {
                  "$ref": "#/components/schemas/NegotiationsMessagesGet"
                }
              }
            }
          }
        ]
      },
      "NegotiationsMessagesGet": {
        "title": "Сообщение в отклике",
        "type": "object",
        "description": "Сообщение в отклике",
        "allOf": [
          {
            "$ref": "#/components/schemas/NegotiationsMessage"
          },
          {
            "type": "object",
            "properties": {
              "address": {
                "$ref": "#/components/schemas/VacancyAddressRawOutput"
              },
              "assessments": {
                "type": "array",
                "description": "Инструменты оценки, привязанные к сообщению",
                "items": {
                  "$ref": "#/components/schemas/NegotiationsAssessment"
                }
              }
            }
          }
        ]
      },
      "NegotiationsAssessment": {
        "title": "Инструменты оценки",
        "type": "object",
        "description": "Тесты или опросники, предназначенные для прохождения соискателями",
        "allOf": [
          {
            "$ref": "#/components/schemas/_IncludesIdName"
          },
          {
            "type": "object",
            "required": [
              "actions"
            ],
            "properties": {
              "actions": {
                "type": "array",
                "description": "Инструменты оценки",
                "items": {
                  "$ref": "#/components/schemas/NegotiationsAction"
                }
              }
            }
          }
        ]
      },
      "NegotiationsAction": {
        "title": "Действие над инструментом",
        "type": "object",
        "description": "В зависимости от состояния инструмента оценки, конкретные действия над ним могут быть доступны либо нет\n",
        "required": [
          "id",
          "name",
          "enabled"
        ],
        "properties": {
          "alternate_url": {
            "type": "string",
            "description": "Ссылка на сайт, переход по которой инициирует действие"
          },
          "disable_reason": {
            "type": "string",
            "description": "Пояснение, почему действие недоступно"
          },
          "enabled": {
            "type": "boolean",
            "description": "Доступно ли действие"
          },
          "id": {
            "type": "string",
            "description": "Тип действия"
          },
          "name": {
            "type": "string",
            "description": "Описание действия"
          }
        }
      },
      "ErrorsCommonBadAuthorizationBadParameters": {
        "title": "Ошибка параметров запроса",
        "oneOf": [
          {
            "$ref": "#/components/schemas/ErrorsCommonBadAuthorizationInvalidRequestError"
          },
          {
            "$ref": "#/components/schemas/ErrorsCommonBadAuthorizationInvalidClientError"
          },
          {
            "$ref": "#/components/schemas/ErrorsCommonBadAuthorizationInvalidGrantError"
          },
          {
            "$ref": "#/components/schemas/ErrorsCommonBadAuthorizationUnsupportedGrantTypeError"
          }
        ]
      },
      "ErrorsCommonBadAuthorizationInvalidRequestError": {
        "title": "Invalid_request",
        "type": "object",
        "required": [
          "error",
          "error_description"
        ],
        "properties": {
          "error": {
            "type": "string",
            "description": "Идентификатор типа ошибки, используются значения, описанные в [документе RFC 6749](http://tools.ietf.org/html/rfc6749#section-5.2)\n",
            "example": "invalid_request",
            "enum": [
              "invalid_request"
            ]
          },
          "error_description": {
            "type": "string",
            "description": "Дополнительное описание ошибки\n* `account not found` Ошибка может возникнуть, если передана неправильная пара `client_id` и `client_secret`\n* `account is locked` Пользовательский аккаунт заблокирован. Пользователь должен обратиться в службу поддержки сайта\n* `password invalidated` Пароль от пользовательского аккаунта устарел. Пользователь должен восстановить пароль на сайте `https://hh.ru`\n* `login not verified` Пользовательский аккаунт не подтвержден. Пользователь должен обратиться в службу поддержки сайта\n* `bad redirect url` передан неправильный `redirect_url`\n* `token is empty` Не передан `refresh_token`\n* `token not found` передан не правильный `refresh_token`\n* `code not found ` переданный `authorization_code` не найден\n",
            "example": "account not found",
            "enum": [
              "account not found",
              "account is locked",
              "password invalidated",
              "login not verified",
              "bad redirect url",
              "token is empty",
              "token not found",
              "code not found"
            ]
          }
        }
      },
      "ErrorsCommonBadAuthorizationInvalidClientError": {
        "title": "Invalid_client",
        "type": "object",
        "required": [
          "error",
          "error_description"
        ],
        "properties": {
          "error": {
            "type": "string",
            "description": "Идентификатор типа ошибки, используются значения, описанные в [документе RFC 6749](http://tools.ietf.org/html/rfc6749#section-5.2)\n",
            "example": "invalid_client",
            "enum": [
              "invalid_client"
            ]
          },
          "error_description": {
            "type": "string",
            "description": "Дополнительное описание ошибки\n* `client_id or client_secret not found` Ошибка может возникнуть в случае, если данный `client_id` не найден или был удален, передан неправильный `client_secret`\n",
            "example": "client_id or client_secret not found",
            "enum": [
              "client_id or client_secret not found"
            ]
          }
        }
      },
      "ErrorsCommonBadAuthorizationUnsupportedGrantTypeError": {
        "title": "Unsupported_grant_type",
        "type": "object",
        "required": [
          "error",
          "error_description"
        ],
        "properties": {
          "error": {
            "type": "string",
            "description": "Идентификатор типа ошибки, используются значения, описанные в [документе RFC 6749](http://tools.ietf.org/html/rfc6749#section-5.2)\n",
            "example": "unsupported_grant_type",
            "enum": [
              "unsupported_grant_type"
            ]
          },
          "error_description": {
            "type": "string",
            "description": "Дополнительное описание ошибки\n* `unsupported grant_type` Возникает, если передать неправильное значение в поле `grant_type`\n",
            "example": "unsupported grant_type",
            "enum": [
              "unsupported grant_type"
            ]
          }
        }
      },
      "ErrorsCommonBadAuthorizationInvalidGrantError": {
        "title": "Invalid_grant",
        "type": "object",
        "required": [
          "error",
          "error_description"
        ],
        "properties": {
          "error": {
            "type": "string",
            "description": "Идентификатор типа ошибки, используются значения, описанные в [документе RFC 6749](http://tools.ietf.org/html/rfc6749#section-5.2)\n",
            "example": "invalid_grant",
            "enum": [
              "invalid_grant"
            ]
          },
          "error_description": {
            "type": "string",
            "description": "Дополнительное описание ошибки\n* `token has already been refreshed` Ошибка возникает при попытке воспользоваться refresh-токеном второй раз\n* `token not expired` Ошибка возникает при попытке обновить действующий access-токен. access-токен можно обновлять только после того, как он истек\n* `token was revoked` Токен был отозван. Например, токен отзывается, если время действия пароля истекло\n* `bad token ` Передано неправильное значение токена\n* `code has already been used` `authorization_code` уже был использован (его можно использовать только один раз)\n* `code expired` `authorization_code` истек\n* `code was revoke` `authorization_code` был отозван (это происходит, если время действия пароля истекло)\n* `token deactivated ` Токен был деактивирован. Токен деактивируется после того, как пользователь сменил пароль\n",
            "example": "token not expired",
            "enum": [
              "token has already been refreshed",
              "token not expired",
              "token was revoked",
              "bad token",
              "code has already been used",
              "code expired",
              "code was revoke",
              "token deactivated"
            ]
          }
        }
      },
      "ErrorsResumeBadArgumentResumeErrors": {
        "title": "Ошибки",
        "anyOf": [
          {
            "$ref": "#/components/schemas/ErrorsCommonBadArgumentErrors"
          },
          {
            "$ref": "#/components/schemas/ErrorsResumeAddEditErrors"
          }
        ]
      },
      "ErrorsCommonBadAuthorizationCommonAndPaymentMethodError": {
        "title": "Ошибка авторизации или ошибка доступа к платному методу",
        "oneOf": [
          {
            "$ref": "#/components/schemas/ErrorsCommonBadAuthorizationErrors"
          },
          {
            "$ref": "#/components/schemas/ErrorsCommonBadAuthorizationPaymentMethodErrors"
          }
        ]
      },
      "ErrorsCommonBadAuthorizationPaymentMethodErrors": {
        "title": "Ошибки при использовании платного метода",
        "description": "Информация о возникших ошибках",
        "allOf": [
          {
            "$ref": "#/components/schemas/ErrorsCommonErrorRequestId"
          },
          {
            "type": "object",
            "required": [
              "errors"
            ],
            "properties": {
              "errors": {
                "type": "array",
                "description": "Массив с данными ошибок",
                "minItems": 1,
                "items": {
                  "$ref": "#/components/schemas/ErrorsCommonBadAuthorizationPaymentMethodError"
                }
              }
            }
          }
        ]
      },
      "ErrorsCommonBadAuthorizationPaymentMethodError": {
        "title": "Ошибка при использовании платного метода",
        "type": "object",
        "additionalProperties": false,
        "required": [
          "type",
          "value"
        ],
        "properties": {
          "type": {
            "type": "string",
            "description": "Текстовый идентификатор типа ошибки",
            "example": "api_access_payment",
            "enum": [
              "api_access_payment"
            ]
          },
          "value": {
            "type": "string",
            "description": "Описание ошибки.\n\nПричина ошибки в том, что вы запрашиваете один из [платных методов](#tag/Uslugi-rabotodatelya/operation/get-payable-api-method-access) без купленного доступа\n",
            "example": "action_must_be_payed",
            "enum": [
              "action_must_be_payed"
            ]
          }
        }
      },
      "EmployerManagersEmployerManagerLimits": {
        "title": "Дневной лимит просмотра резюме",
        "required": [
          "limits",
          "spend",
          "left"
        ],
        "properties": {
          "left": {
            "description": "Количество оставшихся просмотров резюме. В этом параметре содержится лимит просмотров на компанию. Из-за этого он может быть меньше, чем доступно текущему пользователю",
            "allOf": [
              {
                "$ref": "#/components/schemas/EmployerManagersResumeView"
              }
            ]
          },
          "limits": {
            "description": "Лимит на просмотр резюме",
            "allOf": [
              {
                "$ref": "#/components/schemas/EmployerManagersResumeView"
              }
            ]
          },
          "spend": {
            "description": "Количество просмотренных резюме",
            "allOf": [
              {
                "$ref": "#/components/schemas/EmployerManagersResumeView"
              }
            ]
          }
        }
      },
      "EmployerManagersResumeView": {
        "title": "Просмотры резюме",
        "required": [
          "resume_view"
        ],
        "properties": {
          "resume_view": {
            "type": "integer",
            "description": "Просмотры резюме через сайт"
          },
          "resume_view_from_api": {
            "type": "integer",
            "description": "Просмотры резюме из API. Возвращаются, если они предусмотрены в текущей конфигурации доступа к резюме для работодателя"
          }
        }
      },
      "ErrorsBadRequestPublishResumeErrors": {
        "title": "Ошибки при публикации резюме",
        "description": "Информация о возникших ошибках",
        "allOf": [
          {
            "$ref": "#/components/schemas/ErrorsCommonErrorRequestId"
          },
          {
            "type": "object",
            "required": [
              "errors"
            ],
            "properties": {
              "description": {
                "type": "string",
                "description": "Описание причины ошибки. Возможные причины:\n\n* Не заполнены обязательные поля.\n\n  Чтобы понять, какие именно поля не заполнены, воспользуйтесь методом [просмотр резюме](#tag/Rezyume.-Prosmotr-informacii/operation/get-resume). Обязательные поля перечислены в поле `progress.mandatory`).\n\n* Не отредактированы поля после блокировки модератором.\n* Резюме находится на проверке у модератора\n"
              },
              "errors": {
                "type": "array",
                "description": "Массив с данными ошибок",
                "minItems": 1,
                "items": {
                  "$ref": "#/components/schemas/ErrorsBadRequestPublishResumeError"
                }
              }
            }
          }
        ]
      },
      "ErrorsBadRequestPublishResumeError": {
        "title": "Ошибка при публикации резюме",
        "type": "object",
        "additionalProperties": false,
        "required": [
          "type"
        ],
        "properties": {
          "type": {
            "type": "string",
            "description": "Текстовый идентификатор типа ошибки",
            "example": "bad_request",
            "enum": [
              "bad_request"
            ]
          }
        }
      },
      "ErrorsEmployerBlacklistedNotFoundErrors": {
        "title": "Не найдено",
        "description": "Информация о возникших ошибках",
        "allOf": [
          {
            "$ref": "#/components/schemas/ErrorsCommonErrorRequestId"
          },
          {
            "type": "object",
            "required": [
              "errors"
            ],
            "properties": {
              "errors": {
                "type": "array",
                "description": "Массив с данными ошибок",
                "minItems": 1,
                "items": {
                  "$ref": "#/components/schemas/ErrorsEmployerBlacklistedNotFoundError"
                }
              }
            }
          }
        ]
      },
      "ErrorsEmployerBlacklistedNotFoundError": {
        "title": "Ошибка",
        "type": "object",
        "additionalProperties": false,
        "required": [
          "type",
          "value"
        ],
        "properties": {
          "type": {
            "type": "string",
            "description": "Текстовый идентификатор типа ошибки",
            "example": "employers_blacklist",
            "enum": [
              "employers_blacklist"
            ]
          },
          "value": {
            "type": "string",
            "description": "Название поля с ошибкой. Возможные значения:\n* `not_found` — работодатель для добавления в список не найден\n",
            "example": "not_found",
            "enum": [
              "not_found"
            ]
          }
        }
      },
      "MailTemplatesMailTemplates": {
        "title": "Список доступных шаблонов ответов соискателю",
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/MailTemplatesMailTemplate"
        }
      },
      "MailTemplatesMailTemplate": {
        "title": "Шаблон ответа соискателю",
        "required": [
          "id",
          "name",
          "text",
          "variables",
          "type",
          "template_modified"
        ],
        "properties": {
          "employer_state": {
            "type": "string",
            "description": "Работодательский статус, соответствующий данному шаблону; может отсутствовать если шаблон не связан с каким-либо статусом"
          },
          "id": {
            "type": "string",
            "description": "Идентификатор шаблона"
          },
          "name": {
            "type": "string",
            "description": "Имя шаблона"
          },
          "template_modified": {
            "type": "boolean",
            "description": "Был ли изменен шаблон работодателем или же используется стандартный шаблон с текстом от Хэдхантер"
          },
          "text": {
            "type": "string",
            "description": "Текст шаблона"
          },
          "type": {
            "type": "string",
            "description": "Способ доставки сообщения сформированного из шаблона",
            "enum": [
              "SMS",
              "EMAIL"
            ]
          },
          "variables": {
            "type": "array",
            "description": "Переменные доступные для вставки в шаблон",
            "items": {
              "$ref": "#/components/schemas/_IncludesIdName"
            }
          }
        }
      },
      "ErrorsVacancyAddEditCombinedBadJsonDataErrors": {
        "title": "Ошибки",
        "anyOf": [
          {
            "$ref": "#/components/schemas/ErrorsCommonBadJsonDataErrors"
          },
          {
            "$ref": "#/components/schemas/ErrorsVacancyAddEditBadJsonDataErrors"
          }
        ]
      },
      "ErrorsVacancyAddEditBadJsonDataErrors": {
        "title": "Невалидный json",
        "description": "Информация о возникших ошибках",
        "allOf": [
          {
            "$ref": "#/components/schemas/ErrorsCommonErrorRequestId"
          },
          {
            "type": "object",
            "required": [
              "errors"
            ],
            "properties": {
              "errors": {
                "type": "array",
                "description": "Массив с данными ошибок",
                "minItems": 1,
                "items": {
                  "$ref": "#/components/schemas/ErrorsVacancyAddEditBadJsonDataError"
                }
              }
            }
          }
        ]
      },
      "ErrorsVacancyAddEditBadJsonDataError": {
        "title": "Ошибка при публикации или редактировании вакансии",
        "type": "object",
        "required": [
          "type"
        ],
        "properties": {
          "description": {
            "type": "string",
            "description": "Описание ошибки",
            "nullable": true,
            "example": "Значение неправильное"
          },
          "pointer": {
            "type": "string",
            "description": "Путь до параметра, в котором возникла ошибка.\n\nДля указания параметра используется формат JsonPointer [RFC 6901](https://tools.ietf.org/html/rfc6901)\n",
            "example": "/contacts/phones/1/number"
          },
          "reason": {
            "type": "string",
            "description": "Причина ошибки. Возможные значения:\n  * `required` - отстутствует поле в запросе\n  * `invalid` - недопустимое значение в поле запроса\n  * `is_empty` — пустое значение\n  * `wrong_size` — значение имеет неправильный размер\n  * `is_too_short` — значение имеет слишком маленький размер\n  * `is_too_long` — значение имеет слишком большой размер\n  * `currency_code_is_invalid` — валюта заработной платы введена некорректно\n  * `chosen_area_is_not_a_leaf_or_not_exist` — местоположение вакансии введено неверно (например, передан несуществующий ID) или не является конечным регионом (город, населенный пункт)\n  * `email_in_description` — в описании вакансии содержится email\n  * `anonymous_vacancy_contains_address` — в анонимной вакансии содержится адрес работодателя\n  * `anonymous_vacancy_has_real_company_name` — в названии вакансии содержится название компании работодателя\n  * `only_for_anonymous_type` — действие доступно только для анонимных вакансий\n  * `address_is_disabled` — адрес недоступен\n  * `vacancy_type_employer_billing_type_mismatch` — тип вакансии не совместим с текущим биллинг-типом\n  * `only_for_direct_type` — действие доступно только для прямых вакансий\n  * `address_is_empty_with_checked_show_metro_flag` — введен пустой адрес, но указана опция показывать метро\n  * `address_has_no_metro_but_checked_show_metro_flag` — по введенному адресу не доступно метро, но указана опция показывать метро\n  * `default_vacancy_branded_template_is_invalid_or_not_enough_purchased_services` — в запросе указан шаблон, который отсутствует в списке доступных шаблонов (этот список можно получить [запросом](#tag/Informaciya-o-rabotodatele/operation/get-vacancy-branded-templates-list)). Также шаблон может отсутствовать в списке доступных шаблонов, если не оплачена услуга использования [брендированного шаблона вакансии](https://hh.ru/price/branding)\n  * `department_code_prohibited_in_anonymous_vacancy` — нельзя указать код подразделения для анонимной вакансии\n  * `branded_template_prohibited_in_anonymous_vacancy` — использование брендированного шаблона невозможно для анонимной вакансии\n  * `value_conflict_with_business_rules` — публикация вакансии с указанным `billing_type` запрещена\n  * `can_not_accept_kids` — вакансия недоступна несовершеннолетним\n  * `can_not_edit_vacancy_after_moderation` — нельзя изменить название вакансии после модерации\n",
            "example": "is_empty",
            "enum": [
              "required",
              "invalid",
              "is_empty",
              "wrong_size",
              "is_too_short",
              "is_too_long",
              "currency_code_is_invalid",
              "chosen_area_is_not_a_leaf_or_not_exist",
              "email_in_description",
              "anonymous_vacancy_contains_address",
              "anonymous_vacancy_has_real_company_name",
              "only_for_anonymous_type",
              "address_is_disabled",
              "vacancy_type_employer_billing_type_mismatch",
              "only_for_direct_type",
              "address_is_empty_with_checked_show_metro_flag",
              "address_has_no_metro_but_checked_show_metro_flag",
              "default_vacancy_branded_template_is_invalid_or_not_enough_purchased_services",
              "department_code_prohibited_in_anonymous_vacancy",
              "branded_template_prohibited_in_anonymous_vacancy",
              "value_conflict_with_business_rules",
              "can_not_accept_kids",
              "can_not_edit_vacancy_after_moderation"
            ]
          },
          "type": {
            "type": "string",
            "description": "Текстовый идентификатор типа ошибки",
            "example": "bad_json_data",
            "enum": [
              "bad_json_data",
              "vacancies"
            ]
          },
          "value": {
            "type": "string",
            "description": "Название поля с ошибкой",
            "example": "salary"
          }
        }
      },
      "DictionariesDistrictsResponse": {
        "title": "Список всех районов во всех городах",
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/DictionariesDistrictItem"
        }
      },
      "DictionariesDistrictItem": {
        "title": "Город",
        "required": [
          "id",
          "name",
          "area_id"
        ],
        "properties": {
          "area_id": {
            "type": "string",
            "description": "Идентификатор города"
          },
          "id": {
            "type": "string",
            "description": "Идентификатор района"
          },
          "name": {
            "type": "string",
            "description": "Название района"
          }
        }
      },
      "VacancyDraftVacancyDraftEdit": {
        "title": "Объект редактирования черновика вакансии",
        "allOf": [
          {
            "$ref": "#/components/schemas/VacancyDraftVacancyDraftBodyCommon"
          }
        ]
      },
      "ErrorsVacancyProlongateForbidden": {
        "title": "Ошибки",
        "anyOf": [
          {
            "$ref": "#/components/schemas/ErrorsCommonBadAuthorizationErrors"
          },
          {
            "$ref": "#/components/schemas/ErrorsVacancyProlongateErrors"
          }
        ]
      },
      "ErrorsVacancyProlongateErrors": {
        "title": "Oшибки при продлении вакансии",
        "description": "Информация о возникших ошибках",
        "allOf": [
          {
            "$ref": "#/components/schemas/ErrorsCommonErrorRequestId"
          },
          {
            "type": "object",
            "required": [
              "errors"
            ],
            "properties": {
              "errors": {
                "type": "array",
                "description": "Массив с данными ошибок",
                "minItems": 1,
                "items": {
                  "$ref": "#/components/schemas/ErrorsVacancyProlongateError"
                }
              }
            }
          }
        ]
      },
      "ErrorsVacancyProlongateError": {
        "title": "Ошибка",
        "type": "object",
        "additionalProperties": false,
        "required": [
          "type",
          "value"
        ],
        "properties": {
          "type": {
            "type": "string",
            "description": "Тип ошибки",
            "example": "vacancies",
            "enum": [
              "vacancies"
            ]
          },
          "value": {
            "type": "string",
            "description": "Причина ошибки:\n\n* `not_enough_purchased_services` — купленных услуг недостаточно для продления данного типа вакансии.\n* `quota_exceeded` — квота менеджера на публикацию данного типа вакансии закончилась.\n* `prolongation_forbidden` — продление вакансий недоступно текущему менеджеру.\n* `unavailable_for_archived` — продление недоступно для архивной вакансии.\n* `too_early` — продление раньше времени\n",
            "example": "quota_exceeded",
            "enum": [
              "not_enough_purchased_services",
              "quota_exceeded",
              "prolongation_forbidden",
              "unavailable_for_archived",
              "too_early"
            ]
          }
        }
      },
      "ResumesGetResumeVisibilityListResponse": {
        "title": "Список работодателей, для которых резюме должно быть видимо или скрыто",
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/_IncludesPagination"
          },
          {
            "$ref": "#/components/schemas/ResumesGetResumeVisibilityListProperties"
          }
        ]
      },
      "ResumesGetResumeVisibilityListProperties": {
        "title": "Список свойств видимости резюме",
        "type": "object",
        "required": [
          "limit",
          "items"
        ],
        "properties": {
          "items": {
            "type": "array",
            "description": "Список работодателей",
            "items": {
              "$ref": "#/components/schemas/ResumesGetResumeVisibilityListItem"
            }
          },
          "limit": {
            "type": "number",
            "description": "Максимальное количество элементов в списке"
          }
        }
      },
      "MeChangeName": {
        "title": "ФИО",
        "type": "object",
        "required": [
          "last_name",
          "first_name",
          "middle_name"
        ],
        "properties": {
          "first_name": {
            "type": "string",
            "description": "Имя",
            "minLength": 1,
            "example": "Иван"
          },
          "last_name": {
            "type": "string",
            "description": "Фамилия",
            "minLength": 1,
            "example": "Иванов"
          },
          "middle_name": {
            "type": "string",
            "description": "Отчество, поле может быть пустым",
            "minLength": 0,
            "example": "Иванович"
          }
        }
      },
      "SuggestsFieldsOfStudy": {
        "title": "Подсказки по специализациям",
        "type": "object",
        "description": "Подсказки по специализациям",
        "additionalProperties": false,
        "required": [
          "items"
        ],
        "properties": {
          "items": {
            "title": "Массив специализаций",
            "type": "array",
            "description": "Информация о найденных специализациях",
            "items": {
              "$ref": "#/components/schemas/SuggestsFieldsOfStudyItem"
            }
          }
        }
      },
      "SuggestsFieldsOfStudyItem": {
        "title": "Информация о найденных специализациях",
        "type": "object",
        "required": [
          "id",
          "text"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "Идентификатор специализации"
          },
          "text": {
            "type": "string",
            "description": "Название специализации"
          }
        }
      },
      "ResumeResumeViewResponse": {
        "title": "Резюме",
        "type": "object",
        "description": "Информация о резюме",
        "anyOf": [
          {
            "$ref": "#/components/schemas/ResumeResumeForEmployer"
          },
          {
            "$ref": "#/components/schemas/ResumeResumeForApplicant"
          }
        ]
      },
      "ResumeResumeForApplicant": {
        "title": "Информация о резюме для владельца",
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/ResumeResumeFull"
          },
          {
            "$ref": "#/components/schemas/ResumeStatusReadiness"
          },
          {
            "$ref": "#/components/schemas/ResumeApplicantFields"
          },
          {
            "$ref": "#/components/schemas/ResumePhotoPortfolio"
          },
          {
            "type": "object"
          }
        ]
      },
      "ResumePhotoPortfolio": {
        "title": "Портфолио и фото пользователя",
        "type": "object",
        "required": [
          "portfolio"
        ],
        "properties": {
          "photo": {
            "$ref": "#/components/schemas/ResumeObjectsOneOfPhoto"
          },
          "portfolio": {
            "type": "array",
            "description": "Список изображений в портфолио пользователя",
            "items": {
              "$ref": "#/components/schemas/ResumeObjectsPortfolio"
            }
          }
        }
      },
      "ResumeObjectsOneOfPhoto": {
        "title": "Фотография",
        "type": "object",
        "description": "Фотография пользователя",
        "nullable": true,
        "oneOf": [
          {
            "$ref": "#/components/schemas/ResumeObjectsPhoto"
          },
          {
            "$ref": "#/components/schemas/_IncludesNullableObject"
          }
        ]
      },
      "ResumeResumeFull": {
        "title": "Полное представление резюме",
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/ResumeResumeProfile"
          },
          {
            "type": "object",
            "required": [
              "contact",
              "resume_locale",
              "citizenship",
              "work_ticket",
              "recommendation",
              "relocation",
              "employments",
              "schedule",
              "schedules",
              "site",
              "travel_time",
              "business_trip_readiness",
              "skill_set",
              "driver_license_types",
              "language",
              "paid_services"
            ],
            "properties": {
              "birth_date": {
                "type": "string",
                "description": "День рождения (в формате `ГГГГ-ММ-ДД`)",
                "nullable": true
              },
              "business_trip_readiness": {
                "description": "Готовность к командировкам. Элемент справочника [business_trip_readiness](#tag/Obshie-spravochniki/operation/get-dictionaries)",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/_IncludesIdName"
                  }
                ]
              },
              "citizenship": {
                "type": "array",
                "description": "Список гражданств соискателя. Элементы [справочника регионов](#tag/Obshie-spravochniki/operation/get-areas)",
                "items": {
                  "$ref": "#/components/schemas/_IncludesIdNameUrl"
                }
              },
              "contact": {
                "type": "array",
                "description": "Список контактов соискателя",
                "items": {
                  "$ref": "#/components/schemas/_IncludesContactProperties"
                }
              },
              "creds": {
                "$ref": "#/components/schemas/CredsResumeCreds"
              },
              "driver_license_types": {
                "type": "array",
                "description": "Список категорий водительских прав соискателя",
                "items": {
                  "$ref": "#/components/schemas/ResumeObjectsDriverLicenseTypes"
                }
              },
              "employment": {
                "deprecated": true,
                "allOf": [
                  {
                    "$ref": "#/components/schemas/_IncludesIdName"
                  }
                ]
              },
              "employments": {
                "type": "array",
                "description": "Список подходящих соискателю типов занятостей. Элементы справочника [employment](#tag/Obshie-spravochniki/operation/get-dictionaries)",
                "items": {
                  "$ref": "#/components/schemas/_IncludesIdName"
                }
              },
              "has_vehicle": {
                "type": "boolean",
                "description": "Наличие личного автомобиля у соискателя",
                "nullable": true
              },
              "language": {
                "type": "array",
                "description": "Список языков, которыми владеет соискатель. Элементы справочника [languages](#tag/Obshie-spravochniki/operation/get-languages)",
                "items": {
                  "$ref": "#/components/schemas/_IncludesLanguageProperties"
                }
              },
              "metro": {
                "$ref": "#/components/schemas/ResumeObjectsOneOfMetroStation"
              },
              "paid_services": {
                "type": "array",
                "description": "Платные услуги по резюме",
                "items": {
                  "$ref": "#/components/schemas/ResumeObjectsPaidServices"
                }
              },
              "professional_roles": {
                "type": "array",
                "description": "Массив объектов профролей",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/_IncludesIdName"
                }
              },
              "recommendation": {
                "type": "array",
                "description": "Список рекомендаций",
                "items": {
                  "$ref": "#/components/schemas/ResumeObjectsRecommendation"
                }
              },
              "relocation": {
                "type": "object",
                "description": "Возможность переезда",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ResumeObjectsRelocationPublic"
                  }
                ]
              },
              "resume_locale": {
                "type": "object",
                "description": "Язык, на котором составлено резюме (локаль). Элемент справочника [локали резюме](#tag/Obshie-spravochniki/operation/get-locales)",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/_IncludesIdName"
                  }
                ]
              },
              "schedule": {
                "deprecated": true,
                "allOf": [
                  {
                    "$ref": "#/components/schemas/_IncludesIdName"
                  }
                ]
              },
              "schedules": {
                "type": "array",
                "description": "Список подходящих соискателю графиков работы. Элементы справочника [schedule](#tag/Obshie-spravochniki/operation/get-dictionaries)",
                "items": {
                  "$ref": "#/components/schemas/_IncludesIdName"
                }
              },
              "site": {
                "type": "array",
                "description": "Профили в соц. сетях и других сервисах",
                "items": {
                  "$ref": "#/components/schemas/ResumeObjectsSite"
                }
              },
              "skill_set": {
                "type": "array",
                "description": "Ключевые навыки (список уникальных строк)",
                "items": {
                  "type": "string"
                }
              },
              "skills": {
                "type": "string",
                "description": "Дополнительная информация, описание навыков в свободной форме",
                "nullable": true
              },
              "tags": {
                "type": "array",
                "description": "Теги к резюме",
                "items": {
                  "$ref": "#/components/schemas/_IncludesId"
                }
              },
              "travel_time": {
                "description": "Желательное время в пути до работы. Элемент справочника [travel_time](#tag/Obshie-spravochniki/operation/get-dictionaries)",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/_IncludesIdName"
                  }
                ]
              },
              "work_ticket": {
                "type": "array",
                "description": "Список регионов, в которых соискатель имеет разрешение на работу. Элементы [справочника регионов](#tag/Obshie-spravochniki/operation/get-areas)\n",
                "items": {
                  "$ref": "#/components/schemas/_IncludesIdNameUrl"
                }
              }
            }
          }
        ]
      },
      "ResumeObjectsPaidServices": {
        "title": "Платная услуга",
        "type": "object",
        "required": [
          "id",
          "name",
          "active"
        ],
        "properties": {
          "active": {
            "type": "boolean",
            "description": "Активна ли в данный момент услуга"
          },
          "expires": {
            "type": "string",
            "description": "Время окончания действия услуги, если услуга активна"
          },
          "id": {
            "type": "string",
            "description": "Идентификатор услуги"
          },
          "name": {
            "type": "string",
            "description": "Название услуги"
          }
        }
      },
      "CredsResumeCreds": {
        "title": "Креды",
        "type": "object",
        "nullable": true,
        "oneOf": [
          {
            "$ref": "#/components/schemas/CredsCreds"
          },
          {
            "$ref": "#/components/schemas/_IncludesNullableObject"
          }
        ]
      },
      "CredsCreds": {
        "title": "Общее тело кредов, включает в себя список вопросов, ответов, и ответы пользователя",
        "type": "object",
        "description": "Документы, подтверждающие наличие у соискателя опыта или квалификации для выполнения определенного вида деятельности. \nЗависят от профессиональных ролей резюме\n",
        "properties": {
          "answers": {
            "title": "Ответы на креды, передается в виде answer_id -> object",
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/CredsAnswers"
            }
          },
          "question_to_answer_map": {
            "title": "Выбранные для кредов ответы пользователя",
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "questions": {
            "title": "Тело вопроса в виде question_id -> object",
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/CredsQuestions"
            }
          }
        }
      },
      "CredsAnswers": {
        "title": "Ответы",
        "type": "object",
        "properties": {
          "answer_group": {
            "type": "string",
            "description": "Группа данного ответа, positive, negative, neutral"
          },
          "answer_id": {
            "type": "string",
            "description": "Идентификатор ответа (совпадает с ключом объекта)"
          },
          "ask_questions_after": {
            "type": "array",
            "description": "Вопросы которые нужно задать после использования пользователем данного ответа",
            "items": {
              "type": "string",
              "description": "Массив из question_id"
            }
          },
          "description": {
            "type": "string",
            "description": "Описание ответа",
            "nullable": true
          },
          "positive_title": {
            "type": "string",
            "description": "Текст ответа который можно использовать для отображения без самого вопроса"
          },
          "skip_at_result": {
            "type": "boolean",
            "description": "Нужно ли пропускать данный ответ на форме с отображением кредов пользователя"
          },
          "title": {
            "type": "string",
            "description": "Текст ответа который нужно отрисовать для сбора ответов от пользователя"
          }
        }
      },
      "CredsQuestions": {
        "title": "Вопросы",
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "description": "Описание вопроса",
            "nullable": true
          },
          "is_active": {
            "type": "boolean",
            "description": "Показан ли вопрос изначально, актуально для динамических вопросов"
          },
          "possible_answers": {
            "type": "array",
            "description": "Возможные ответы на вопрос, гарантировано придут в поле answers",
            "minItems": 1,
            "items": {
              "type": "string",
              "description": "Значение гарантировано означает что есть ответ с переданным ключом"
            }
          },
          "question_id": {
            "type": "string",
            "description": "Идентификатор вопроса (совпадает с ключом объекта)"
          },
          "question_title": {
            "type": "string",
            "description": "Текст вопроса отображаемый на форме"
          },
          "question_type": {
            "type": "string",
            "description": "Возможность мульти выбора ответов на данный вопрос \"single_choice\" / \"multi_select\""
          },
          "required": {
            "type": "boolean",
            "description": "Обязателен ли вопрос для получения ответа"
          },
          "skip_title_at_view": {
            "type": "boolean",
            "description": "Пропускать ли текст вопроса на просмотре, если false - ответы внутри placeholder, если true - просто перечисляем без текста вопроса"
          },
          "view_title": {
            "type": "string",
            "description": "Текст вопроса на просмотре",
            "nullable": true
          }
        }
      },
      "ResumeObjectsOneOfMetroStation": {
        "title": "Станция метро",
        "type": "object",
        "nullable": true,
        "oneOf": [
          {
            "$ref": "#/components/schemas/ResumeObjectsMetroStation"
          },
          {
            "$ref": "#/components/schemas/_IncludesNullableObject"
          }
        ]
      },
      "ResumeObjectsMetroStation": {
        "title": "Станция метро",
        "type": "object",
        "description": "Ближайшая станция метро. Элемент справочника [metro](#tag/Obshie-spravochniki/operation/get-metro-stations)\n",
        "required": [
          "id",
          "lat",
          "lng",
          "order",
          "line"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "Идентификатор станции метро"
          },
          "lat": {
            "type": "number",
            "description": "Широта"
          },
          "line": {
            "type": "object",
            "description": "Линия метро",
            "allOf": [
              {
                "$ref": "#/components/schemas/ResumeObjectsMetroLine"
              }
            ]
          },
          "lng": {
            "type": "number",
            "description": "Долгота"
          },
          "name": {
            "type": "string",
            "description": "Название станции метро"
          },
          "order": {
            "type": "number",
            "description": "Порядковый номер станции в линии метро"
          }
        }
      },
      "ResumeObjectsMetroLine": {
        "title": "Линия метро",
        "type": "object",
        "required": [
          "id",
          "hex_color",
          "name"
        ],
        "properties": {
          "hex_color": {
            "type": "string",
            "description": "Цвет линии в HEX-формате `RRGGBB` (от `000000` до `FFFFFF`)"
          },
          "id": {
            "type": "string",
            "description": "Идентификатор линии"
          },
          "name": {
            "type": "string",
            "description": "Название линии"
          }
        }
      },
      "ResumeApplicantFields": {
        "title": "Поля, возвращаемые для автора резюме",
        "type": "object",
        "required": [
          "access",
          "total_views",
          "new_views",
          "views_url",
          "paid_services",
          "actions"
        ],
        "properties": {
          "access": {
            "$ref": "#/components/schemas/ResumeObjectsAccess"
          },
          "actions": {
            "type": "object",
            "description": "Дополнительные действия",
            "allOf": [
              {
                "$ref": "#/components/schemas/ResumeObjectsActionsForOwner"
              }
            ]
          },
          "new_views": {
            "type": "number",
            "description": "Число новых просмотров. Данный счетчик сбрасывается при получении [детальной истории просмотров](#tag/Rezyume.-Prosmotr-informacii/operation/get-resume-view-history)\n"
          },
          "next_publish_at": {
            "type": "string",
            "description": "Дата и время следующей возможной публикации/обновления. Для неопубликованных резюме возвращается `null`",
            "nullable": true
          },
          "paid_services": {
            "type": "array",
            "description": "Платные услуги по резюме для автора",
            "items": {
              "$ref": "#/components/schemas/ResumeObjectsPaidServices"
            }
          },
          "total_views": {
            "type": "number",
            "description": "Число просмотров резюме"
          },
          "views_url": {
            "type": "string",
            "description": "URL, по которому необходимо сделать GET-запрос для получения [детальной истории просмотров](#tag/Rezyume.-Prosmotr-informacii/operation/get-resume-view-history)\n"
          }
        }
      },
      "ResumeResumeForEmployer": {
        "title": "Информация о резюме для работодателя",
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/ResumeResumeFull"
          },
          {
            "$ref": "#/components/schemas/ResumeEmployerFields"
          }
        ]
      },
      "ResumeEmployerFields": {
        "title": "Поля, возвращаемые для работодателя",
        "type": "object",
        "required": [
          "negotiations_history",
          "owner",
          "favorited",
          "portfolio",
          "paid_services",
          "actions"
        ],
        "properties": {
          "actions": {
            "type": "object",
            "description": "Дополнительные действия",
            "allOf": [
              {
                "$ref": "#/components/schemas/ResumeObjectsActions"
              }
            ]
          },
          "can_view_full_info": {
            "type": "boolean",
            "description": "Наличие права просмотра контактной информации в резюме",
            "nullable": true
          },
          "favorited": {
            "type": "boolean",
            "description": "Добавлено ли резюме в избранные"
          },
          "job_search_status": {
            "description": "Для получения данных нужно передать параметр `with_job_search_status=true`. \nВозможные значения перечислены в поле `job_search_statuses_employer` в [справочнике полей](#tag/Obshie-spravochniki/operation/get-dictionaries)\n",
            "allOf": [
              {
                "$ref": "#/components/schemas/_IncludesIdNameLastChangeTime"
              }
            ]
          },
          "negotiations_history": {
            "type": "object",
            "description": "Краткая история откликов/приглашений по резюме",
            "allOf": [
              {
                "$ref": "#/components/schemas/ResumeObjectsNegotiationsHistoryForEmployer"
              }
            ]
          },
          "owner": {
            "type": "object",
            "description": "Информация о владельце резюме",
            "allOf": [
              {
                "$ref": "#/components/schemas/ResumeObjectsOwner"
              }
            ]
          },
          "paid_services": {
            "$ref": "#/components/schemas/ResumeObjectsEmployerPaidServices"
          },
          "photo": {
            "$ref": "#/components/schemas/ResumeObjectsOneOfPhotoNoId"
          },
          "portfolio": {
            "type": "array",
            "description": "Список изображений в портфолио пользователя",
            "items": {
              "$ref": "#/components/schemas/ResumeObjectsPortfolioNoId"
            }
          }
        }
      },
      "ResumeObjectsOneOfPhotoNoId": {
        "title": "Фотография",
        "type": "object",
        "description": "Фотография пользователя",
        "nullable": true,
        "oneOf": [
          {
            "$ref": "#/components/schemas/ResumeObjectsPhotoNoId"
          },
          {
            "$ref": "#/components/schemas/_IncludesNullableObject"
          }
        ]
      },
      "ResumeObjectsPortfolioNoId": {
        "title": "Портфолио",
        "type": "object",
        "required": [
          "small",
          "medium"
        ],
        "properties": {
          "description": {
            "type": "string",
            "description": "Описание изображения в портфолио"
          },
          "medium": {
            "type": "string",
            "description": "URL среднего по размеру изображения. Изображение по данному url доступно ограниченное время, после получения ответа. Приложение должно быть готово к тому, что на запрос изображения вернётся `404 Not Found`\n"
          },
          "small": {
            "type": "string",
            "description": "URL уменьшенного изображения. Изображение по данному url доступно ограниченное время, после получения ответа. Приложение должно быть готово к тому, что на запрос изображения вернётся `404 Not Found`\n"
          }
        }
      },
      "ResumeObjectsEmployerPaidServices": {
        "title": "Платные услуги по резюме",
        "type": "array",
        "description": "Платные услуги по резюме для работодателя\n\nРаботодателю может быть предложен список платных услуг по резюме.\n\nНапример, если полные данные по резюме недоступны, то будет выдано предложение покупки рекомендованной услуги, чтобы такой доступ получить\n",
        "items": {
          "type": "object",
          "required": [
            "id",
            "name",
            "price_list"
          ],
          "properties": {
            "description": {
              "type": "string",
              "description": "Примечание к использованию услуги"
            },
            "id": {
              "type": "string",
              "description": "Идентификатор услуги"
            },
            "name": {
              "type": "string",
              "description": "Название услуги"
            },
            "price_list": {
              "type": "object",
              "description": "Прайс на услугу",
              "required": [
                "alternate_url"
              ],
              "properties": {
                "alternate_url": {
                  "type": "string",
                  "description": "Ссылка на сайт, по которой доступен полный прайс на услугу"
                }
              }
            },
            "quick_purchase": {
              "type": "object",
              "description": "Описание быстрой покупки услуги, если доступно",
              "required": [
                "alternate_url",
                "currency",
                "name",
                "price"
              ],
              "properties": {
                "alternate_url": {
                  "type": "string",
                  "description": "Ссылка на сайт, по которой будет предложено купить услугу"
                },
                "currency": {
                  "type": "object",
                  "description": "Валюта услуги",
                  "required": [
                    "abbr",
                    "code",
                    "name"
                  ],
                  "properties": {
                    "abbr": {
                      "type": "string",
                      "description": "Краткое обозначение"
                    },
                    "code": {
                      "type": "string",
                      "description": "Код"
                    },
                    "name": {
                      "type": "string",
                      "description": "Название"
                    }
                  }
                },
                "name": {
                  "type": "string",
                  "description": "Название действия по заказу услуги"
                },
                "price": {
                  "type": "number",
                  "description": "Цена услуги"
                }
              }
            }
          }
        }
      },
      "ResumeObjectsNegotiationsHistoryForEmployer": {
        "title": "История откликов/приглашений",
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/ResumeObjectsNegotiationsHistoryUrl"
          },
          {
            "type": "object",
            "properties": {
              "vacancies": {
                "type": "array",
                "description": "Массив вакансий",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/ResumesResumeNegotiationsHistoryVacancy"
                }
              }
            }
          }
        ]
      },
      "ErrorsVacancyErrors": {
        "title": "Oшибки",
        "description": "Информация о возникших ошибках",
        "allOf": [
          {
            "$ref": "#/components/schemas/ErrorsCommonErrorRequestId"
          },
          {
            "type": "object",
            "required": [
              "errors"
            ],
            "properties": {
              "errors": {
                "type": "array",
                "description": "Массив с данными ошибок",
                "minItems": 1,
                "items": {
                  "$ref": "#/components/schemas/ErrorsVacancyError"
                }
              }
            }
          }
        ]
      },
      "ErrorsVacancyError": {
        "title": "Ошибка",
        "type": "object",
        "additionalProperties": false,
        "required": [
          "type",
          "value"
        ],
        "properties": {
          "found": {
            "type": "number",
            "description": "Количество найденных дублей вакансии"
          },
          "items": {
            "type": "array",
            "description": "Массив идентификаторов вакансий-дублей",
            "minItems": 1,
            "items": {
              "type": "object",
              "nullable": false,
              "required": [
                "id"
              ],
              "properties": {
                "id": {
                  "type": "number",
                  "description": "Идентификатор вакансии",
                  "example": "78789890"
                }
              }
            }
          },
          "reason": {
            "type": "string",
            "description": "Причина ошибки",
            "example": "is_empty"
          },
          "type": {
            "type": "string",
            "description": "Тип ошибки",
            "example": "bad_json_data"
          },
          "value": {
            "type": "string",
            "description": "Наименование поля с ошибкой",
            "example": "specializations"
          }
        }
      },
      "SuggestsSkillSet": {
        "title": "Подсказки по ключевым навыкам",
        "type": "object",
        "description": "Подсказки по ключевым навыкам",
        "additionalProperties": false,
        "required": [
          "items"
        ],
        "properties": {
          "items": {
            "type": "array",
            "description": "Массив найденных ключевых навыков",
            "items": {
              "$ref": "#/components/schemas/_IncludesSkillSetItem"
            }
          }
        }
      },
      "SuggestsVacancyPositions": {
        "title": "Подсказки по должностям вакансий",
        "type": "object",
        "description": "Подсказки по должностям вакансий",
        "additionalProperties": false,
        "required": [
          "items"
        ],
        "properties": {
          "items": {
            "title": "Массив найденных должностей вакансий",
            "type": "array",
            "description": "Информация о найденных должностях вакансий",
            "items": {
              "$ref": "#/components/schemas/SuggestsVacancyPositionItem"
            }
          }
        }
      },
      "SuggestsVacancyPositionItem": {
        "title": "Информация о найденных должностях",
        "type": "object",
        "required": [
          "id",
          "text",
          "professional_roles"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "Идентификатор должности",
            "example": "2063"
          },
          "professional_roles": {
            "title": "Массив профессиональных ролей, соответствующих должности",
            "type": "array",
            "description": "Информация о профессиональных ролях, соответствующих должности",
            "minItems": 1,
            "items": {
              "$ref": "#/components/schemas/SuggestsProfessionalRoleItemWithName"
            }
          },
          "text": {
            "type": "string",
            "description": "Название должности",
            "example": "Личный водитель"
          }
        }
      },
      "ErrorsVacancyApplyForbiddenErrors": {
        "title": "Ошибки при отклике на вакансию",
        "description": "Информация о возникших ошибках",
        "allOf": [
          {
            "$ref": "#/components/schemas/ErrorsCommonErrorRequestId"
          },
          {
            "type": "object",
            "required": [
              "errors"
            ],
            "properties": {
              "bad_argument": {
                "type": "string",
                "deprecated": true,
                "enum": [
                  "vacancy_id",
                  "resume_id"
                ]
              },
              "bad_arguments": {
                "type": "array",
                "deprecated": true,
                "items": {
                  "type": "object",
                  "properties": {
                    "description": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string",
                      "description": "Поле, в котором допущена ошибка. \nВозможные значения:\n* `vacancy_id` - указан не валидный идентификатор\n* `resume_id` - указан не валидный идентификатор\n",
                      "enum": [
                        "vacancy_id",
                        "resume_id"
                      ]
                    }
                  }
                }
              },
              "description": {
                "type": "string",
                "description": "Описание ошибки",
                "example": "Forbidden"
              },
              "errors": {
                "type": "array",
                "description": "Массив с данными ошибок",
                "minItems": 1,
                "items": {
                  "$ref": "#/components/schemas/ErrorsVacancyApplyForbiddenError"
                }
              }
            }
          }
        ]
      },
      "ErrorsVacancyApplyForbiddenError": {
        "title": "Ошибка при отклике на вакансию",
        "type": "object",
        "additionalProperties": false,
        "required": [
          "type",
          "value"
        ],
        "properties": {
          "type": {
            "type": "string",
            "description": "Текстовый идентификатор типа ошибки",
            "example": "negotiations",
            "enum": [
              "negotiations"
            ]
          },
          "value": {
            "type": "string",
            "description": "Ошибки при отклике на вакансию:\n  * `invalid_vacancy` — вакансия из отклика/приглашения была архивирована или скрыта.\n  * `resume_not_found` — резюме из отклика/приглашения скрыто, удалено или не найдено.\n  * `already_applied` — в системе уже есть отклик/приглашение на указанную вакансию (связка `resume_id` + `vacancy_id`)\n  * `test_required` — для отклика необходимо пройти тест.\n  * `resume_visibility_conflict` — невозможно откликнуться на анонимную вакансию, используя резюме с [типом видимости](#tag/Rezyume.-Spiski-vidimosti/operation/get-resume-access-types) `whitelist`.\n  * `edit_forbidden` — редактирование сообщения недоступно.\n  * `application_denied` — общая ошибка запрета отклика в случае, когда дополнительная информация недоступна.\n  * `limit_exceeded` — превышен лимит количества откликов/приглашений.\n  * `wrong_state` — действие по отклику/приглашению в данном статусе невозможно.\n  * `empty_message` — передан пустой текст сопроводительного письма.\n  * `too_long_message` — передан слишком длинный текст сопроводительного письма.\n  * `inappropriate_language_message` — передан текст сопроводительного письма, который содержит нецензурную лексику.\n  * `resource_policy_violation_message` — передан текст сопроводительного письма, который нарушает правила использования сервиса.  \n  * `address_not_found` — переданный адрес не существует, либо принадлежит другому работодателю.\n  * `not_enough_purchased_services` — не хватает оплаченных услуг. Например, [доступа к базе резюме](https://hh.ru/price#dbaccess).\n  * `in_a_row_limit` — превышено количество последовательных сообщений в переписке. Необходимо дождаться ответа собеседника на сообщение\n  * `overall_limit` — превышен лимит сообщений.\n  * `no_invitation` — переписка недоступна, так как в отклике ещё не было приглашения.\n  * `message_cannot_be_empty` — сообщение в переписке не может быть пустым.\n  * `disabled_by_employer` — возможность переписки по отклику отключена работодателем.\n  * `resume_deleted` — резюме, с которым совершался отклик, удалено или скрыто.\n  * `archived` — вакансия, на которую совершался отклик, заархивирована.\n  * `chat_archived` — отклик/приглашение заархивировано\n  * `topic_arcived` — отклик/приглашение заархивировано\n",
            "example": "invalid_vacancy",
            "enum": [
              "invalid_vacancy",
              "resume_not_found",
              "already_applied",
              "test_required",
              "resume_visibility_conflict",
              "edit_forbidden",
              "application_denied",
              "limit_exceeded",
              "wrong_state",
              "empty_message",
              "too_long_message",
              "inappropriate_language_message",
              "resource_policy_violation_message",
              "address_not_found",
              "not_enough_purchased_services",
              "in_a_row_limit",
              "overall_limit",
              "no_invitation",
              "message_cannot_be_empty",
              "disabled_by_employer",
              "resume_deleted",
              "archived",
              "chat_archived",
              "topic_archived"
            ]
          }
        }
      },
      "DictionariesLangResponse": {
        "title": "Список языков",
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/DictionariesLangItem"
        }
      },
      "DictionariesLangItem": {
        "title": "Язык",
        "required": [
          "id",
          "name",
          "uid"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "Идентификатор языка",
            "example": "ita"
          },
          "name": {
            "type": "string",
            "description": "Название языка",
            "example": "Итальянский"
          },
          "uid": {
            "type": "string",
            "description": "Универсальный идентификатор языка",
            "example": "17"
          }
        }
      },
      "NegotiationsNegotiationTestResultsResponse": {
        "title": "Информация о пройденных тестах",
        "type": "object",
        "required": [
          "test_result"
        ],
        "properties": {
          "test_result": {
            "type": "object",
            "description": "Пройденные тесты кандидата",
            "required": [
              "name",
              "score",
              "mark",
              "duration",
              "tasks"
            ],
            "properties": {
              "duration": {
                "type": "number",
                "description": "Время, затраченное на выполнение теста, в секундах"
              },
              "mark": {
                "type": "string",
                "description": "Дифференцированная оценка за тест:\n* `UNFAIR` — от 0 до 14 баллов;\n* `FAIR` — от 15 до 44 баллов;\n* `GOOD` — от 45 до 79 баллов;\n* `EXCELLENT` — от 80 до 100 баллов\n",
                "enum": [
                  "UNFAIR",
                  "FAIR",
                  "GOOD",
                  "EXCELLENT"
                ]
              },
              "name": {
                "type": "string",
                "description": "Наименование теста"
              },
              "score": {
                "type": "number",
                "description": "Результат прохождения теста в баллах (от 0 до 100)"
              },
              "tasks": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SkillVerificationsTestResultTasks"
                }
              }
            }
          }
        }
      },
      "SkillVerificationsTestResultTasks": {
        "title": "Вопросы теста",
        "type": "object",
        "required": [
          "question",
          "closed_answers"
        ],
        "properties": {
          "closed_answers": {
            "type": "array",
            "description": "Варианты ответов на закрытые вопросы",
            "items": {
              "type": "object",
              "properties": {
                "correct": {
                  "type": "boolean",
                  "description": "Является ли вариант ответа правильным"
                },
                "selected": {
                  "type": "boolean",
                  "description": "Выбран ли вариант ответа"
                },
                "value": {
                  "type": "string",
                  "description": "Вариант ответа на вопрос"
                }
              }
            }
          },
          "opened_answer": {
            "type": "object",
            "description": "Вариант ответа на открытый вопрос",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/SkillVerificationsOpenedAnswer"
              },
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              }
            ]
          },
          "question": {
            "type": "string",
            "description": "Текст вопроса"
          }
        }
      },
      "SkillVerificationsOpenedAnswer": {
        "title": "Ответ на открытый вопрос",
        "type": "object",
        "required": [
          "value",
          "mark"
        ],
        "properties": {
          "mark": {
            "type": "string",
            "description": "Дифференцированная оценка за ответ от работодателя:\n* `UNFAIR` — 0 баллов;\n* `FAIR` — 30 баллов;\n* `GOOD` — 60 баллов;\n* `EXCELLENT` — 100 баллов\n",
            "enum": [
              "UNFAIR",
              "FAIR",
              "GOOD",
              "EXCELLENT"
            ]
          },
          "value": {
            "type": "string",
            "description": "Ответ на вопрос"
          }
        }
      },
      "ResumesMineResponse": {
        "title": "Список резюме текущего пользователя",
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/_IncludesPagination"
          },
          {
            "$ref": "#/components/schemas/ResumesMineItems"
          }
        ]
      },
      "ResumesMineItems": {
        "title": "Список резюме",
        "type": "object",
        "required": [
          "items"
        ],
        "properties": {
          "items": {
            "type": "array",
            "description": "Список резюме текущего пользователя",
            "items": {
              "$ref": "#/components/schemas/ResumesMineItem"
            }
          }
        }
      },
      "ResumesMineItem": {
        "title": "Информация о резюме для соискателя",
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/ResumeResumeShortForOwner"
          },
          {
            "$ref": "#/components/schemas/ResumeStatus"
          },
          {
            "$ref": "#/components/schemas/ResumeApplicantFields"
          },
          {
            "type": "object",
            "required": [
              "visible",
              "created",
              "updated",
              "similar_vacancies",
              "contact"
            ],
            "properties": {
              "contact": {
                "type": "array",
                "description": "Список контактов соискателя",
                "items": {
                  "$ref": "#/components/schemas/_IncludesContactProperties"
                }
              },
              "created": {
                "type": "string",
                "description": "Дата и время создания резюме",
                "deprecated": true
              },
              "similar_vacancies": {
                "$ref": "#/components/schemas/ResumeObjectsSimilarVacancies"
              },
              "tags": {
                "type": "array",
                "description": "Теги к резюме",
                "items": {
                  "$ref": "#/components/schemas/_IncludesId"
                }
              },
              "updated": {
                "type": "string",
                "description": "Дата и время обновления резюме",
                "deprecated": true
              },
              "visible": {
                "type": "boolean",
                "description": "Видно ли резюме в поиске",
                "deprecated": true
              }
            }
          }
        ]
      },
      "ResumeObjectsSimilarVacancies": {
        "title": "Информация о похожих вакансиях",
        "type": "object",
        "description": "Информация о вакансиях, похожих на это резюме",
        "required": [
          "url",
          "counters"
        ],
        "properties": {
          "counters": {
            "$ref": "#/components/schemas/ResumeObjectsCounters"
          },
          "url": {
            "type": "string",
            "description": "URL, по которому необходимо сделать GET-запрос, для получения [вакансий, похожих на данное резюме](#tag/Poisk-vakansij-dlya-soiskatelya/operation/get-vacancies-similar-to-resume)"
          }
        }
      },
      "ResumeObjectsCounters": {
        "title": "Счетчики",
        "type": "object",
        "description": "Счетчики похожих вакансий",
        "required": [
          "total"
        ],
        "properties": {
          "total": {
            "type": "number",
            "description": "Количество подходящих вакансий"
          }
        }
      },
      "ResumesPostResumeVisibilityListBody": {
        "title": "Тело запроса для добавления работодателя в список видимости",
        "properties": {
          "items": {
            "type": "array",
            "description": "Список передаваемых идентификаторов работодателей",
            "items": {
              "$ref": "#/components/schemas/_IncludesId"
            }
          }
        }
      },
      "ManagerAccounts": {
        "title": "Рабочие аккаунты менеджера",
        "type": "object",
        "description": "Информация о рабочих аккаунтах менеджера",
        "additionalProperties": false,
        "required": [
          "items",
          "current_account_id",
          "primary_account_id",
          "is_primary_account_blocked"
        ],
        "properties": {
          "current_account_id": {
            "type": "string",
            "description": "Идентификатор текущего рабочего аккаунта менеджера. Совпадает со значением переданного в заголовке `X-Manager-Account-Id`\n",
            "example": "87654321"
          },
          "is_primary_account_blocked": {
            "type": "boolean",
            "description": "Заблокирован ли главный рабочий аккаунт менеджера",
            "example": "false"
          },
          "items": {
            "type": "array",
            "description": "Список рабочих аккаунтов менеджера",
            "items": {
              "$ref": "#/components/schemas/ManagerAccount"
            }
          },
          "primary_account_id": {
            "type": "string",
            "description": "Идентификатор главного рабочего аккаунта менеджера",
            "example": "12345678"
          }
        }
      },
      "EmployersEmployerDepartmentsResponse": {
        "title": "Департаменты работодателя",
        "required": [
          "items"
        ],
        "properties": {
          "items": {
            "type": "array",
            "description": "Список департаментов работодателя",
            "items": {
              "$ref": "#/components/schemas/_IncludesIdName"
            }
          }
        }
      },
      "AuthUserTokenAndAppToken": {
        "title": "Успешный ответ",
        "oneOf": [
          {
            "$ref": "#/components/schemas/AuthUserToken"
          },
          {
            "$ref": "#/components/schemas/AuthAppToken"
          }
        ]
      },
      "AuthAppToken": {
        "title": "Авторизация приложения",
        "type": "object",
        "additionalProperties": false,
        "required": [
          "access_token",
          "token_type"
        ],
        "properties": {
          "access_token": {
            "type": "string"
          },
          "token_type": {
            "type": "string",
            "description": "Тип выданного токена. Всегда принимает значение `bearer`",
            "enum": [
              "bearer"
            ]
          }
        }
      },
      "AuthUserToken": {
        "title": "Авторизация пользователя",
        "type": "object",
        "additionalProperties": false,
        "required": [
          "access_token",
          "token_type",
          "expires_in",
          "refresh_token"
        ],
        "properties": {
          "access_token": {
            "type": "string"
          },
          "expires_in": {
            "type": "integer",
            "description": "Время жизни токена в секундах",
            "format": "int64",
            "minimum": 0.0
          },
          "refresh_token": {
            "type": "string",
            "description": "Токен, который можно использовать для продления срока жизни соответствующего access токена"
          },
          "token_type": {
            "type": "string",
            "description": "Тип выданного токена. Всегда принимает значение `bearer`",
            "enum": [
              "bearer"
            ]
          }
        }
      },
      "SalaryStatisticsEvaluationResponse": {
        "title": "Оценка зарплат",
        "type": "object",
        "required": [
          "market_salary",
          "resulting_parameters"
        ],
        "properties": {
          "market_salary": {
            "$ref": "#/components/schemas/SalaryStatisticsMarketSalary"
          },
          "resulting_parameters": {
            "$ref": "#/components/schemas/SalaryStatisticsResultingParameters"
          }
        }
      },
      "SalaryStatisticsResultingParameters": {
        "title": "Параметры",
        "type": "object",
        "description": "Набор параметров, по которым происходил расчет",
        "required": [
          "areas",
          "sources",
          "employers_count",
          "positions_count"
        ],
        "properties": {
          "areas": {
            "type": "array",
            "description": "Коды регионов",
            "items": {
              "$ref": "#/components/schemas/_IncludesIdName"
            }
          },
          "employee_levels": {
            "type": "array",
            "description": "Уровни специалистов",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/_IncludesIdName"
            }
          },
          "employers_count": {
            "type": "number",
            "description": "Количество работодателей, позиции которых участвуют в выборке"
          },
          "excluded_areas": {
            "type": "array",
            "description": "Исключенные коды регионов",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/_IncludesIdName"
            }
          },
          "indirect_calculation": {
            "type": "object",
            "description": "Параметры косвенной оценки зарплат",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/SalaryStatisticsIndirectCalculation"
              },
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              }
            ]
          },
          "industries": {
            "type": "array",
            "description": "Отрасли",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/_IncludesIdName"
            }
          },
          "positions_count": {
            "type": "number",
            "description": "Количество позиций, по которым построена выборка"
          },
          "sources": {
            "type": "array",
            "description": "Источники данных. Возможные значения:\n\n* `SALARIES` — данные из банка зарплат;\n* `RESUMES` — данные из резюме;\n* `VACANCIES` — данные из вакансий\n",
            "items": {
              "type": "string",
              "enum": [
                "SALARIES",
                "RESUMES",
                "VACANCIES"
              ]
            }
          },
          "specialities": {
            "type": "array",
            "description": "Профессиональные области и специализаций",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/_IncludesIdName"
            }
          }
        }
      },
      "SalaryStatisticsIndirectCalculation": {
        "title": "Косвенная оценка",
        "type": "object",
        "required": [
          "indirect_regional_ratio"
        ],
        "properties": {
          "indirect_areas": {
            "type": "array",
            "description": "Регионы, использованные при получении косвенной оценки",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/_IncludesIdName"
            }
          },
          "indirect_employee_levels": {
            "type": "array",
            "description": "Уровни специалистов, включенные в выборку в регионе, использованном при получении косвенной оценки",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/_IncludesIdName"
            }
          },
          "indirect_regional_ratio": {
            "type": "number",
            "description": "Региональный коэффициент, который был использован для получения косвенной оценки зарплат"
          }
        }
      },
      "SalaryStatisticsMarketSalary": {
        "title": "Статистика рыночных зарплат",
        "type": "object",
        "required": [
          "upper",
          "minimum",
          "median",
          "average",
          "maximum",
          "bottom"
        ],
        "properties": {
          "average": {
            "type": "number",
            "description": "Среднее расчетное значение"
          },
          "bottom": {
            "type": "number",
            "description": "Нижняя граница рыночного диапазона (25-й процентиль)"
          },
          "maximum": {
            "type": "number",
            "description": "Максимальные значения (90-й процентиль)"
          },
          "median": {
            "type": "number",
            "description": "Медианное рыночное значение"
          },
          "minimum": {
            "type": "number",
            "description": "Минимальные значения (10-й процентиль)"
          },
          "upper": {
            "type": "number",
            "description": "Верхняя граница рыночного диапазона (75-й процентиль)"
          }
        }
      },
      "EmployerManagersEmployerManagerId": {
        "title": "Идентификатор менеджера",
        "required": [
          "id"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "Идентификатор менеджера"
          }
        }
      },
      "ResumeAddResumeRequest": {
        "title": "Резюме",
        "type": "object",
        "description": "Тело запроса при создании резюме",
        "allOf": [
          {
            "$ref": "#/components/schemas/ResumeNullableFields"
          },
          {
            "type": "object",
            "properties": {
              "area": {
                "description": "Город проживания. Элемент справочника [areas](#tag/Obshie-spravochniki/operation/get-areas)",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Id"
                  }
                ]
              },
              "citizenship": {
                "type": "array",
                "description": "Список гражданств соискателя. Элементы [справочника регионов](#tag/Obshie-spravochniki/operation/get-areas)",
                "items": {
                  "$ref": "#/components/schemas/_IncludesId"
                }
              },
              "contact": {
                "type": "array",
                "description": "Список контактов соискателя.\n\nПри заполнении контактов в резюме необходимо учитывать следующие условия:\n\n* В резюме обязательно должен быть указан e-mail. Он может быть только один.\n* В резюме должен быть указан хотя бы один телефон, причём можно указывать только один телефон каждого типа.\n* Комментарий можно указывать только для телефонов, для e-mail комментарий не сохранится.\n* Обязательно указать либо телефон полностью в поле `formatted`, либо все три части телефона по отдельности в трёх полях: `country`, `city` и `number`. Если указано и то, и то, используются данные из трёх полей. В поле `formatted` допустимо использовать пробелы, скобки и дефисы. В остальных полях допустимы только цифры\n",
                "items": {
                  "$ref": "#/components/schemas/_IncludesContactProperties"
                }
              },
              "education": {
                "type": "object",
                "description": "Образование соискателя.\n\nОсобенности сохранения образования:\n\n* Если передать и высшее и среднее образование и уровень образования \"средний\", то сохранится только среднее образование.\n* Если передать и высшее и среднее образование и уровень образования \"высшее\", то сохранится только высшее образование\n",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ResumeObjectsEducation"
                  }
                ]
              },
              "experience": {
                "type": "array",
                "description": "Опыт работы",
                "items": {
                  "$ref": "#/components/schemas/ResumeObjectsExperienceProperties"
                }
              },
              "gender": {
                "description": "Пол. Элемент справочника [gender](#tag/Obshie-spravochniki/operation/get-dictionaries)",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Id"
                  }
                ]
              },
              "language": {
                "type": "array",
                "description": "Список языков, которыми владеет соискатель. Элементы справочника [languages](#tag/Obshie-spravochniki/operation/get-languages)",
                "items": {
                  "$ref": "#/components/schemas/_IncludesLanguageProperties"
                }
              }
            }
          }
        ]
      },
      "ResumeObjectsExperienceCreateEditResume": {
        "title": "Опыт работы в организации",
        "required": [
          "start",
          "description",
          "position",
          "company"
        ],
        "allOf": [
          {
            "$ref": "#/components/schemas/ResumeObjectsExperienceProperties"
          }
        ]
      },
      "ResumeObjectsContact": {
        "title": "Контакт",
        "required": [
          "type",
          "value"
        ],
        "allOf": [
          {
            "$ref": "#/components/schemas/_IncludesContactProperties"
          }
        ]
      },
      "ResumeObjectsLanguage": {
        "title": "Язык и уровень владения",
        "required": [
          "level",
          "id"
        ],
        "allOf": [
          {
            "$ref": "#/components/schemas/_IncludesLanguageProperties"
          }
        ]
      },
      "ErrorsVacancyApplyBadRequestErrors": {
        "title": "Ошибки отклика на вакансию",
        "description": "Информация о возникших ошибках",
        "allOf": [
          {
            "$ref": "#/components/schemas/ErrorsCommonErrorRequestId"
          },
          {
            "type": "object",
            "required": [
              "errors"
            ],
            "properties": {
              "bad_argument": {
                "type": "string",
                "deprecated": true,
                "enum": [
                  "vacancy_id",
                  "resume_id"
                ]
              },
              "bad_arguments": {
                "type": "array",
                "deprecated": true,
                "items": {
                  "type": "object",
                  "properties": {
                    "description": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string",
                      "description": "Поле, в котором допущена ошибка. \nВозможные значения:\n* `vacancy_id` - указан не валидный идентификатор\n* `resume_id` - указан не валидный идентификатор\n",
                      "enum": [
                        "vacancy_id",
                        "resume_id"
                      ]
                    }
                  }
                }
              },
              "description": {
                "type": "string",
                "description": "Описание ошибки"
              },
              "errors": {
                "type": "array",
                "description": "Массив с данными ошибок",
                "minItems": 1,
                "items": {
                  "$ref": "#/components/schemas/ErrorsVacancyApplyBadRequestError"
                }
              }
            }
          }
        ]
      },
      "ErrorsVacancyApplyBadRequestError": {
        "title": "Ошибка в параметре запроса",
        "type": "object",
        "additionalProperties": false,
        "required": [
          "type",
          "value"
        ],
        "properties": {
          "type": {
            "type": "string",
            "description": "Текстовый идентификатор типа ошибки",
            "example": "negotiations",
            "enum": [
              "negotiations"
            ]
          },
          "value": {
            "type": "string",
            "description": "Название поля с ошибкой:\n\n* `vacancy_not_found` — вакансия не найдена.\n* `resume_not_found` — резюме из отклика/приглашения скрыто, удалено или не найдено.\n* `limit_exceeded` — превышен лимит количества откликов/приглашений\n* `resource_policy_violation` — отклик нарушает правила пользования сервисом\n* `inappropriate_language` — отклик содержит нецензурную лексику\n",
            "example": "vacancy_not_found",
            "enum": [
              "vacancy_not_found",
              "resume_not_found",
              "limit_exceeded",
              "resource_policy_violation",
              "inappropriate_language"
            ]
          }
        }
      },
      "WebhookBadDataError": {
        "title": "Ошибка параметров запроса",
        "description": "Ошибка параметров запроса",
        "oneOf": [
          {
            "$ref": "#/components/schemas/ErrorsCommonBadJsonDataErrors"
          },
          {
            "$ref": "#/components/schemas/WebhookErrors"
          }
        ]
      },
      "WebhookErrors": {
        "title": "Бизнес ошибки",
        "description": "Информация о возникших ошибках",
        "allOf": [
          {
            "$ref": "#/components/schemas/ErrorsCommonErrorRequestId"
          },
          {
            "type": "object",
            "required": [
              "errors"
            ],
            "properties": {
              "errors": {
                "type": "array",
                "description": "Массив с данными ошибок",
                "minItems": 1,
                "items": {
                  "$ref": "#/components/schemas/WebhookError"
                }
              }
            }
          }
        ]
      },
      "WebhookError": {
        "title": "Ошибка",
        "type": "object",
        "additionalProperties": false,
        "required": [
          "type",
          "value"
        ],
        "properties": {
          "type": {
            "type": "string",
            "description": "Текстовый идентификатор типа ошибки",
            "example": "notifications"
          },
          "value": {
            "type": "string",
            "description": "Описание ошибки:\n  * already_exist - У текущего пользователя/компании уже есть подписка для данного приложения (включая подписку на резюме)\n",
            "example": "already_exist",
            "enum": [
              "already_exist"
            ]
          }
        }
      },
      "SuggestsEducationalInstitutions": {
        "title": "Учебные заведения",
        "type": "object",
        "required": [
          "items"
        ],
        "properties": {
          "items": {
            "title": "Массив найденных учебных заведений",
            "type": "array",
            "description": "Информация о найденных учебных заведениях",
            "items": {
              "$ref": "#/components/schemas/_IncludesEducationalInstitutionItem"
            }
          }
        }
      },
      "_IncludesEducationalInstitutionItem": {
        "title": "Учебное заведение",
        "type": "object",
        "required": [
          "id",
          "text",
          "area"
        ],
        "properties": {
          "acronym": {
            "type": "string",
            "description": "Сокращенное название учебного заведения",
            "nullable": true
          },
          "area": {
            "description": "Регион",
            "allOf": [
              {
                "$ref": "#/components/schemas/SuggestsArea"
              },
              {
                "type": "object"
              }
            ]
          },
          "id": {
            "type": "string",
            "description": "Идентификатор учебного заведения"
          },
          "synonyms": {
            "type": "string",
            "description": "Альтернативное название учебного заведения",
            "nullable": true
          },
          "text": {
            "type": "string",
            "description": "Полное название учебного заведения"
          }
        }
      },
      "SuggestsArea": {
        "title": "Регион",
        "required": [
          "id",
          "name"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "Идентификатор региона"
          },
          "name": {
            "type": "string",
            "description": "Название региона"
          }
        }
      },
      "EmployerManagersManagerData": {
        "title": "JSON c редактируемыми параметрами менеджера",
        "properties": {
          "additional_phone": {
            "description": "Дополнительный телефон менеджера",
            "allOf": [
              {
                "$ref": "#/components/schemas/EmployerManagersPhone"
              },
              {
                "type": "object"
              }
            ]
          },
          "permissions": {
            "type": "array",
            "description": "Список прав, которые можно дать данному типу менеджера",
            "items": {
              "$ref": "#/components/schemas/EmployerManagerTypesAvailablePermissions"
            }
          },
          "phone": {
            "description": "Основной телефон менеджера",
            "allOf": [
              {
                "$ref": "#/components/schemas/EmployerManagersPhone"
              },
              {
                "type": "object"
              }
            ]
          },
          "position": {
            "title": "Должность менеджера",
            "type": "string"
          }
        }
      },
      "ErrorsResumeTooManyRequestsErrors": {
        "title": "Ошибки действий с резюме",
        "description": "Информация о возникших ошибках",
        "allOf": [
          {
            "$ref": "#/components/schemas/ErrorsCommonErrorRequestId"
          },
          {
            "type": "object",
            "required": [
              "errors"
            ],
            "properties": {
              "errors": {
                "type": "array",
                "description": "Массив с данными ошибок",
                "minItems": 1,
                "items": {
                  "$ref": "#/components/schemas/ErrorsResumeTooManyRequestsError"
                }
              }
            }
          }
        ]
      },
      "ErrorsResumeTooManyRequestsError": {
        "title": "Ошибка",
        "type": "object",
        "additionalProperties": false,
        "required": [
          "type",
          "value"
        ],
        "properties": {
          "type": {
            "type": "string",
            "description": "Текстовый идентификатор типа ошибки",
            "example": "resumes",
            "enum": [
              "resumes"
            ]
          },
          "value": {
            "type": "string",
            "description": "Значение ошибки",
            "example": "touch_limit_exceeded",
            "enum": [
              "touch_limit_exceeded"
            ]
          }
        }
      },
      "ErrorsEmployerManagerBadAuthorizationErrors": {
        "title": "Плохая авторизация",
        "description": "Информация о возникших ошибках",
        "allOf": [
          {
            "$ref": "#/components/schemas/ErrorsCommonErrorRequestId"
          },
          {
            "type": "object",
            "required": [
              "errors"
            ],
            "properties": {
              "description": {
                "type": "string",
                "description": "Описание ошибки",
                "example": "Forbidden"
              },
              "errors": {
                "type": "array",
                "description": "Массив с данными ошибок",
                "minItems": 1,
                "items": {
                  "$ref": "#/components/schemas/ErrorsEmployerManagerBadAuthorizationError"
                }
              }
            }
          }
        ]
      },
      "ErrorsEmployerManagerBadAuthorizationError": {
        "title": "Ошибка",
        "type": "object",
        "additionalProperties": false,
        "required": [
          "type"
        ],
        "properties": {
          "allowed_accounts": {
            "type": "array",
            "description": "Список доступных для токена аккаунтов менеджера в случае, если используемый рабочий аккаунт заблокирован.\nАктуально только в случае авторизации работодателя\n",
            "minItems": 1,
            "items": {
              "$ref": "#/components/schemas/ManagerAccount"
            }
          },
          "reason": {
            "type": "string",
            "description": "Ошибки при создании или редактировании менеджера работодателя:\n  * `already_exist` — Менеджер с такой почтой уже существует\n  * `creation_limit_exceeded` — Достигнут лимит на создание менеджеров\n  * `not_editable` — Поле *field_name* недоступно для редактирования\n",
            "example": "already_exist",
            "enum": [
              "already_exist",
              "creation_limit_exceeded",
              "not_editable"
            ]
          },
          "type": {
            "type": "string",
            "description": "Текстовый идентификатор типа ошибки",
            "example": "oauth",
            "enum": [
              "forbidden",
              "oauth",
              "manager_extra_accounts",
              "manager_accounts",
              "managers"
            ]
          },
          "value": {
            "type": "string",
            "description": "Общие ошибки:\n  * `bad_authorization` — Токен авторизации не существует или не валидный\n  * `token_expired` — Время жизни access_token завершилось, необходимо [выполнить обновление access_token](#section/Avtorizaciya/Obnovlenie-pary-access-i-refresh-tokenov)\n  * `token_revoked` — Токен отозван пользователем, приложению необходимо [запросить новую авторизацию](#section/Tipy-avtorizacij)\n  * `application_not_found` — Ваше приложение было удалено\n  * `used_manager_account_forbidden` — [Рабочий аккаунт заблокирован](https://github.com/hhru/api/blob/master/docs/errors.md#manager-accounts-blocked)\n  * `manager_extra_account_not_found` — В заголовке передан некорректный id аккаунта\n  * `email` — Менеджер с такой почтой уже существует\n  * `user_auth_expected` — Ожидается авторизация пользователя, передана авторизация приложения\n",
            "example": "bad_authorization",
            "enum": [
              "bad_authorization",
              "token_expired",
              "token_revoked",
              "application_not_found",
              "manager_extra_account_not_found",
              "used_manager_account_forbidden",
              "email",
              "user_auth_expected"
            ]
          }
        }
      },
      "ErrorsArtifactUploadBadJsonData": {
        "title": "Ошибки",
        "anyOf": [
          {
            "$ref": "#/components/schemas/ErrorsArtifactUploadErrors"
          },
          {
            "$ref": "#/components/schemas/ErrorsCommonBadJsonDataErrors"
          }
        ]
      },
      "ErrorsArtifactUploadErrors": {
        "title": "Ошибка при загрузке артефакта",
        "description": "Информация о возникших ошибках",
        "allOf": [
          {
            "$ref": "#/components/schemas/ErrorsCommonErrorRequestId"
          },
          {
            "type": "object",
            "required": [
              "errors"
            ],
            "properties": {
              "errors": {
                "type": "array",
                "description": "Массив с данными ошибок",
                "minItems": 1,
                "items": {
                  "$ref": "#/components/schemas/ErrorsArtifactUploadError"
                }
              }
            }
          }
        ]
      },
      "ErrorsArtifactUploadError": {
        "title": "Ошибка при загрузке артефакта",
        "type": "object",
        "additionalProperties": false,
        "required": [
          "type",
          "value"
        ],
        "properties": {
          "type": {
            "type": "string",
            "description": "Текстовый идентификатор типа ошибки",
            "example": "artifacts",
            "enum": [
              "artifacts"
            ]
          },
          "value": {
            "type": "string",
            "description": "Название поля с ошибкой. Возможные значения:\n* `file` — не указан файл, либо указано несколько.\n* `type` — некорректное значение параметра `type`.\n* `description` — слишком длинное описание.\n* `limit_exceeded` — превышено количество артефактов.\n* `unknown_format` — неизвестный формат файла\n",
            "example": "limit_exceeded",
            "enum": [
              "file",
              "type",
              "description",
              "limit_exceeded",
              "unknown_format"
            ]
          }
        }
      },
      "WebhookSubscriptionUpdate": {
        "title": "Объект подписки",
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "actions": {
            "type": "array",
            "discriminator": {
              "propertyName": "type",
              "mapping": {
                "NEGOTIATION_EMPLOYER_STATE_CHANGE": "#/components/schemas/WebhookActionNegotiationEmployerStateChange",
                "NEW_NEGOTIATION_VACANCY": "#/components/schemas/WebhookActionNewNegotiationVacancy",
                "NEW_RESPONSE_OR_INVITATION_VACANCY": "#/components/schemas/WebhookActionNewResponseOrInvitationVacancy",
                "VACANCY_ARCHIVATION": "#/components/schemas/WebhookActionVacancyArchivation",
                "VACANCY_CHANGE": "#/components/schemas/WebhookActionVacancyChange",
                "VACANCY_PROLONGATION": "#/components/schemas/WebhookActionVacancyProlongation",
                "VACANCY_PUBLICATION_FOR_VACANCY_MANAGER": "#/components/schemas/WebhookActionVacancyPublicationForVacancyManager"
              }
            },
            "description": "Cписок событий, на которые нужно подписаться",
            "minItems": 1,
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/WebhookActionNewNegotiationVacancy"
                },
                {
                  "$ref": "#/components/schemas/WebhookActionNewResponseOrInvitationVacancy"
                },
                {
                  "$ref": "#/components/schemas/WebhookActionVacancyArchivation"
                },
                {
                  "$ref": "#/components/schemas/WebhookActionVacancyChange"
                },
                {
                  "$ref": "#/components/schemas/WebhookActionVacancyProlongation"
                },
                {
                  "$ref": "#/components/schemas/WebhookActionVacancyPublicationForVacancyManager"
                },
                {
                  "$ref": "#/components/schemas/WebhookActionNegotiationEmployerStateChange"
                }
              ]
            }
          },
          "url": {
            "type": "string",
            "description": "URL, на который будет отправляться POST запрос при наступлении события",
            "format": "uri",
            "example": "http://www.example.com"
          }
        }
      },
      "EmployersEmployersBlacklistedResponse": {
        "title": "Скрытые работодатели",
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/_IncludesPagination"
          },
          {
            "$ref": "#/components/schemas/EmployersEmployersBlacklisted"
          }
        ]
      },
      "EmployersEmployersBlacklisted": {
        "title": "Чёрный список работодателей",
        "properties": {
          "items": {
            "type": "array",
            "description": "Массив скрытых работодателей",
            "items": {
              "$ref": "#/components/schemas/EmployersEmployersBlacklistedItem"
            }
          },
          "limit_reached": {
            "type": "boolean",
            "description": "Превышено ли максимальное количество элементов в списке"
          }
        }
      },
      "EmployersEmployersBlacklistedItem": {
        "title": "Информация о скрытом работодателе",
        "type": "object",
        "required": [
          "name",
          "open_vacancies"
        ],
        "properties": {
          "alternate_url": {
            "type": "string",
            "description": "Ссылка на представление компании на сайте",
            "nullable": true
          },
          "id": {
            "type": "string",
            "description": "Идентификатор компании",
            "nullable": true
          },
          "logo_urls": {
            "type": "object",
            "description": "Ссылки на логотипы работодателя разных размеров",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/_IncludesLogoUrls"
              },
              {
                "$ref": "#/components/schemas/_IncludesNullableObject"
              }
            ]
          },
          "name": {
            "type": "string",
            "description": "Название компании"
          },
          "open_vacancies": {
            "type": "number",
            "description": "Количество открытых вакансий у работодателя"
          },
          "url": {
            "type": "string",
            "description": "URL, на который нужно сделать GET-запрос, чтобы получить информацию о компании",
            "nullable": true
          },
          "vacancies_url": {
            "type": "string",
            "description": "Ссылка на поисковую выдачу вакансий данной компании",
            "nullable": true
          }
        }
      },
      "ErrorsVacancyBlacklistedBadRequestErrors": {
        "title": "Ошибка добавления вакансии в скрытые",
        "description": "Информация о возникших ошибках",
        "allOf": [
          {
            "$ref": "#/components/schemas/ErrorsCommonErrorRequestId"
          },
          {
            "type": "object",
            "required": [
              "errors"
            ],
            "properties": {
              "description": {
                "type": "string",
                "description": "Описание ошибки"
              },
              "errors": {
                "type": "array",
                "description": "Массив с данными ошибок",
                "minItems": 1,
                "items": {
                  "$ref": "#/components/schemas/ErrorsVacancyBlacklistedBadRequestError"
                }
              }
            }
          }
        ]
      },
      "ErrorsVacancyBlacklistedBadRequestError": {
        "title": "Ошибка в параметре запроса",
        "type": "object",
        "additionalProperties": false,
        "required": [
          "type"
        ],
        "properties": {
          "type": {
            "type": "string",
            "description": "Текстовый идентификатор типа ошибки",
            "example": "vacancies_blacklist",
            "enum": [
              "vacancies_blacklist"
            ]
          },
          "value": {
            "type": "string",
            "description": "Название поля с ошибкой:\n\n* `limit_exceeded` — превышен лимит на количество вакансий в списке скрытых\n",
            "example": "limit_exceeded",
            "enum": [
              "limit_exceeded"
            ]
          }
        }
      },
      "SuggestsCompanies": {
        "title": "Подсказки по организациям",
        "type": "object",
        "description": "Подсказки по организациям",
        "additionalProperties": false,
        "required": [
          "items"
        ],
        "properties": {
          "items": {
            "title": "Массив найденных организаций",
            "type": "array",
            "description": "Информация о найденных организациях",
            "items": {
              "$ref": "#/components/schemas/SuggestsCompanyItem"
            }
          }
        }
      },
      "SuggestsCompanyItem": {
        "title": "Информация о найденных компаниях",
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/SuggestsEmployerItem"
          },
          {
            "type": "object",
            "required": [
              "area"
            ],
            "properties": {
              "area": {
                "$ref": "#/components/schemas/SuggestsArea"
              },
              "industries": {
                "type": "array",
                "description": "Сферы деятельности",
                "items": {
                  "$ref": "#/components/schemas/_IncludesIdName"
                }
              }
            }
          }
        ]
      },
      "SuggestsEmployerItem": {
        "title": "Информация о найденных работодателях",
        "required": [
          "id",
          "text"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "Идентификатор организации"
          },
          "logo_urls": {
            "description": "Ссылка на логотип организации",
            "$ref": "#/components/schemas/SuggestsLogoUrl"
          },
          "text": {
            "type": "string",
            "description": "Название организации"
          },
          "url": {
            "type": "string",
            "description": "Сайт организации"
          }
        }
      },
      "SuggestsLogoUrl": {
        "title": "Ссылка на логотип",
        "required": [
          "90"
        ],
        "properties": {
          "90": {
            "type": "string",
            "description": "URL логотипа"
          }
        }
      },
      "NegotiationsNegotiationsStatisticsManagerResponse": {
        "title": "Статистика откликов для менеджера",
        "type": "object",
        "required": [
          "manager_statistics"
        ],
        "properties": {
          "manager_statistics": {
            "$ref": "#/components/schemas/NegotiationsNegotiationsStatistics"
          }
        }
      },
      "ErrorsCommonConflictBothChangedErrors": {
        "title": "Ошибка конфликта запроса при одновременном изменении параметров",
        "description": "Информация о возникших ошибках",
        "allOf": [
          {
            "$ref": "#/components/schemas/ErrorsCommonErrorRequestId"
          },
          {
            "type": "object",
            "required": [
              "errors"
            ],
            "properties": {
              "bad_argument": {
                "type": "string",
                "description": "Имя аргумента, с которым связана ошибка",
                "enum": [
                  "name",
                  "subscription"
                ]
              },
              "bad_arguments": {
                "type": "array",
                "description": "Список аргументов, с которыми связаны ошибки",
                "items": {
                  "$ref": "#/components/schemas/_IncludesNameDescription"
                }
              },
              "description": {
                "type": "string",
                "description": "Описание причины ошибки"
              },
              "errors": {
                "type": "array",
                "description": "Массив с данными ошибок",
                "minItems": 1,
                "items": {
                  "$ref": "#/components/schemas/ErrorsCommonConflictBothChangedError"
                }
              }
            }
          }
        ]
      },
      "ErrorsCommonConflictBothChangedError": {
        "title": "Ошибка конфликта запроса при одновременном изменении параметров",
        "type": "object",
        "additionalProperties": false,
        "required": [
          "type",
          "value"
        ],
        "properties": {
          "type": {
            "type": "string",
            "description": "Текстовый идентификатор типа ошибки",
            "example": "bad_argument",
            "enum": [
              "bad_argument"
            ]
          },
          "value": {
            "type": "string",
            "description": "Имя конфликтующего аргумента",
            "example": "name",
            "enum": [
              "name",
              "subscription",
              "email_subscription"
            ]
          }
        }
      },
      "ErrorsSavedSearchNotFoundErrors": {
        "title": "Автопоиск или менеджер не найден",
        "description": "Информация о возникших ошибках",
        "allOf": [
          {
            "$ref": "#/components/schemas/ErrorsCommonErrorRequestId"
          },
          {
            "type": "object",
            "required": [
              "errors"
            ],
            "properties": {
              "errors": {
                "type": "array",
                "description": "Массив с данными ошибок",
                "minItems": 1,
                "items": {
                  "$ref": "#/components/schemas/ErrorsSavedSearchNotFoundError"
                }
              }
            }
          }
        ]
      },
      "ErrorsSavedSearchNotFoundError": {
        "title": "Ошибка",
        "type": "object",
        "additionalProperties": false,
        "required": [
          "type"
        ],
        "properties": {
          "type": {
            "type": "string",
            "description": "Текстовый идентификатор типа ошибки",
            "example": "saved_searches",
            "enum": [
              "saved_searches",
              "not_found"
            ]
          },
          "value": {
            "type": "string",
            "description": "Название поля запроса с ошибкой. Возможные значения:\n* `saved_search_not_found` — автопоиск не найден или не принадлежит текущему пользователю.\n* `manager_not_found` — менеджер не найден\n",
            "example": "saved_search_not_found",
            "enum": [
              "saved_search_not_found",
              "manager_not_found"
            ]
          }
        }
      }
    },
    "responses": {
      "ErrorBadArgument": {
        "description": "Ошибка в параметре запроса",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorsCommonBadArgumentErrors"
            }
          }
        }
      },
      "ErrorBothChangedConflict": {
        "description": "Ошибка запроса при одновременном изменении параметров",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorsCommonConflictBothChangedErrors"
            }
          }
        }
      },
      "ErrorSavedSearchNotFound": {
        "description": "Автопоиск или менеджер не найден",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorsSavedSearchNotFoundErrors"
            }
          }
        }
      },
      "SuccessCreated": {
        "description": "Успешно создано",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Id"
            }
          }
        }
      },
      "ErrorBadAuthorization": {
        "description": "Ошибка авторизации пользователя",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorsCommonBadAuthorizationErrors"
            }
          }
        }
      },
      "ErrorNotFound": {
        "description": "Не найдено или не доступно текущему пользователю",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorsCommonNotFoundErrors"
            }
          }
        }
      },
      "SuccessNoContent": {
        "description": "Успешный ответ"
      }
    },
    "parameters": {
      "Locale": {
        "name": "locale",
        "in": "query",
        "description": "Идентификатор локали (см. [Локализация](#tag/Obshie-spravochniki/operation/get-locales))\n",
        "schema": {
          "type": "string",
          "default": "RU"
        },
        "example": "EN"
      },
      "Host": {
        "name": "host",
        "in": "query",
        "description": "Доменное имя сайта (см. [Выбор сайта](#section/Obshaya-informaciya/Vybor-sajta))\n",
        "schema": {
          "type": "string",
          "default": "hh.ru",
          "enum": [
            "hh.ru",
            "rabota.by",
            "hh1.az",
            "hh.uz",
            "hh.kz",
            "headhunter.ge",
            "headhunter.kg"
          ]
        },
        "example": "hh.ru"
      },
      "HHUserAgent": {
        "name": "HH-User-Agent",
        "in": "header",
        "required": true,
        "description": "Название приложения и контактная почта разработчика (см. [Информация о клиенте](#section/Obshaya-informaciya/Trebovaniya-k-zaprosam))\n",
        "schema": {
          "type": "string"
        },
        "example": "MyApp/1.0 (my-app-feedback@example.com)"
      }
    },
    "examples": {
      "EmployerAddresses": {
        "value": {
          "found": "1",
          "items": [
            {
              "building": "9с10",
              "can_edit": "true",
              "city": "Москва",
              "deleted": "false",
              "description": "На проходной потребуется паспорт",
              "id": "15",
              "lat": "55.807794",
              "lng": "37.638699",
              "manager": {
                "full_name": "Достоевский Федор Михайлович",
                "id": "11"
              },
              "metro_stations": [
                {
                  "lat": "55.728994",
                  "line_id": "5",
                  "line_name": "Кольцевая",
                  "lng": "37.622533",
                  "station_id": "5.36",
                  "station_name": "Добрынинская"
                }
              ],
              "raw": "Москва, улица Годовикова, 9с10",
              "street": "улица Годовикова"
            }
          ],
          "page": "0",
          "pages": "1",
          "per_page": "20"
        }
      },
      "EmployerAddressItem": {
        "value": {
          "building": "9с10",
          "can_edit": "true",
          "city": "Москва",
          "deleted": "false",
          "description": "На проходной потребуется паспорт",
          "id": "15",
          "lat": "55.807794",
          "lng": "37.638699",
          "manager": {
            "full_name": "Достоевский Федор Михайлович",
            "id": "11"
          },
          "metro_stations": [
            {
              "lat": "55.728994",
              "line_id": "5",
              "line_name": "Кольцевая",
              "lng": "37.622533",
              "station_id": "5.36",
              "station_name": "Добрынинская"
            }
          ],
          "raw": "Москва, улица Годовикова, 9с10",
          "street": "улица Годовикова"
        }
      },
      "VacancyDraftVacancyDraftResponse": {
        "value": {
          "id": "22",
          "ignored_fields": [
            "area",
            "salary",
            "employment"
          ],
          "name": "Новая вакансия черновик1",
          "publication_ready": "false",
          "validation_errors": [
            {
              "reason": "too_short",
              "value": "description"
            },
            {
              "reason": "too_long",
              "value": "name"
            }
          ]
        }
      },
      "ProfileVideosProfileVideosList": {
        "value": {
          "items": [
            {
              "download_url": {
                "expires_at": "2022-01-01T12:00:00+03:00",
                "url": "https://storage.yandexcloud.net/..."
              },
              "id": "ec6b42e5-b0fb-4f72-b81b-5b44f8c09968"
            }
          ]
        }
      },
      "DistrictsDistricts": {
        "value": [
          {
            "area_id": "1",
            "id": "1",
            "name": "Хорошёво-Мнёвники"
          },
          {
            "area_id": "88",
            "id": "2",
            "name": "Авиастроительный"
          },
          {
            "area_id": "96",
            "id": "3",
            "name": "Ленинский"
          }
        ]
      },
      "VacanciesAvailableVacancyType": {
        "value": {
          "items": [
            {
              "available_publications_count": "21",
              "description": "Автоматически поднимается в поисковой выдаче вакансий каждые 3 дня; размещается на 30 дней. Вакансия видна только приглашенным кандидатам. Такую вакансию нельзя будет найти через поиск и увидеть неприглашенным кандидатам",
              "name": "Стандарт: без обновления",
              "publications": [
                {
                  "areas_url": "https://api.hh.ru/areas?price_region_id=1000224&vacancy_publication_flag=true",
                  "count": "10",
                  "name": "Москва и Московская область"
                },
                {
                  "areas_url": "https://api.hh.ru/areas?vacancy_publication_flag=true",
                  "count": "11",
                  "name": "В любом регионе"
                }
              ],
              "vacancy_billing_type": {
                "id": "standart"
              },
              "vacancy_types": [
                {
                  "id": "closed"
                },
                {
                  "id": "open"
                }
              ]
            },
            {
              "available_publications_count": "0",
              "description": "Первые 7 дней публикация выделена цветом, брендирована логотипом вашей компании и находится вверху поисковой выдачи; вакансия отправляется в рассылке подходящим соискателям; размещается на 30 дней",
              "name": "Премиум: неделя в топе",
              "publications": [],
              "vacancy_billing_type": {
                "id": "free"
              },
              "vacancy_types": [
                {
                  "id": "open"
                }
              ]
            }
          ]
        }
      },
      "SalaryStatisticsEvaluation": {
        "value": {
          "market_salary": {
            "average": "50054",
            "bottom": "28500",
            "maximum": "52643",
            "median": "35000",
            "minimum": "20000",
            "upper": "50000"
          },
          "resulting_parameters": {
            "areas": [
              {
                "id": "10010",
                "name": "Южный федеральный округ"
              }
            ],
            "employee_levels": [
              {
                "id": "specialist",
                "name": "Специалист"
              }
            ],
            "employers_count": "21",
            "excluded_areas": [
              {
                "id": "1530",
                "name": "Ростовская область"
              }
            ],
            "indirect_calculation": null,
            "industries": [
              {
                "id": "7",
                "name": "Информационные технологии, системная интеграция, интернет"
              }
            ],
            "positions_count": "1648",
            "sources": [
              "SALARIES",
              "RESUMES",
              "VACANCIES"
            ],
            "specialities": [
              {
                "id": "1200000",
                "name": "Эксплуатация информационных систем"
              }
            ]
          }
        }
      },
      "VacancyDraftVacancyDraftFull": {
        "value": {
          "accept_handicapped": "false",
          "accept_incomplete_resumes": "false",
          "accept_kids": "false",
          "accept_temporary": "false",
          "address": {
            "building": "10",
            "city": "Москва",
            "description": "Направо под знак",
            "id": "4321234",
            "lat": "55.807794",
            "lng": "37.638699",
            "metro_stations": [
              {
                "lat": "55.789704",
                "line_id": "2",
                "line_name": "Замоскворецкая",
                "lng": "37.558212",
                "station_id": "6.8",
                "station_name": "Динамо"
              }
            ],
            "show_metro_only": "true",
            "street": "ул. Динамо"
          },
          "allow_messages": "true",
          "areas": [
            {
              "id": "1",
              "name": "Москва",
              "url": "https://api.hh.ru/areas/1"
            }
          ],
          "billing_type": {
            "id": "standard",
            "name": "Стандарт"
          },
          "branded_template": {
            "id": "marketing",
            "name": "Маркетинг"
          },
          "code": "HRR-3487",
          "contacts": {
            "email": "user@example.com",
            "name": "Имя",
            "phones": [
              {
                "comment": null,
                "formatted": "+7 (495) 711-11-11"
              }
            ]
          },
          "department": {
            "id": "HH-1455-TECH",
            "name": "HeadHunter::Технический департамент"
          },
          "description": "Работа хороша",
          "driver_license_types": [
            {
              "id": "A"
            },
            {
              "id": "B"
            }
          ],
          "employer": {
            "alternate_url": "https://hh.ru/employer/4011061",
            "id": "4011061",
            "logo_urls": {
              "90": "https://hh.ru/employer/logo/3568",
              "240": "https://hh.ru/employer/logo/3569"
            },
            "name": "ООО СибНефть",
            "url": "https://localhost:2000/employers/4011061"
          },
          "employer_service_id": "4325621",
          "employment": {
            "id": "full",
            "name": "Полная занятость"
          },
          "experience": {
            "id": "between1And3",
            "name": "От 1 года до 3 лет"
          },
          "has_test": "false",
          "key_skills": [
            {
              "name": "Прием посетителей"
            },
            {
              "name": "Первичный документооборот"
            }
          ],
          "languages": [
            {
              "id": "spa",
              "level": {
                "id": "b2",
                "name": "B2 — Средне-продвинутый"
              },
              "name": "Испанский"
            },
            {
              "id": "ita",
              "level": {
                "id": "a1",
                "name": "A1 — Начальный"
              },
              "name": "Итальянский"
            }
          ],
          "manager": {
            "id": "657438"
          },
          "meta_info": {
            "auto_publication": {
              "bill_uid": "4011054/3",
              "cart_id": "5967030"
            },
            "completed_fields_percentage": "100",
            "draft_id": "1110031",
            "insufficient_publications": null,
            "insufficient_quotas": null,
            "last_change_time": null,
            "publication_ready": "true",
            "required_publications": null,
            "scheduled_at": null
          },
          "name": "Секретарь",
          "professional_roles": [
            {
              "id": "96",
              "name": "Программист, разработчик"
            }
          ],
          "response_letter_required": "true",
          "response_notifications": "false",
          "response_url": null,
          "salary": {
            "currency": "RUR",
            "from": "30000",
            "gross": "true",
            "to": null
          },
          "schedule": {
            "id": "fullDay",
            "name": "Полный день"
          },
          "test": {
            "required": "false"
          },
          "type": {
            "id": "open",
            "name": "Открытая"
          },
          "with_zp": "false",
          "working_days": [
            {
              "id": "only_saturday_and_sunday",
              "name": "Работа только по сб и вс"
            }
          ],
          "working_time_intervals": [
            {
              "id": "from_four_to_six_hours_in_a_day",
              "name": "Можно работать сменами по 4-6 часов в день"
            }
          ],
          "working_time_modes": [
            {
              "id": "start_after_sixteen",
              "name": "Можно начинать работать после 16-00"
            }
          ]
        }
      },
      "ResumesByStatus": {
        "value": {
          "already_applied": [],
          "counters": {
            "already_applied": "0",
            "not_published": "0",
            "suitable": "1",
            "unavailable": "0"
          },
          "not_published": [],
          "suitable": [
            {
              "access": {
                "type": {
                  "id": "no_one",
                  "name": "не видно никому"
                }
              },
              "actions": {
                "download": {
                  "pdf": {
                    "url": "https://...?type=pdf"
                  },
                  "rtf": {
                    "url": "https://...?type=rtf"
                  }
                }
              },
              "age": null,
              "alternate_url": "https://...",
              "area": {
                "id": "1",
                "name": "Москва",
                "url": "https://..."
              },
              "certificate": [],
              "created_at": "2023-09-26T14:08:07+03:00",
              "download": {
                "pdf": {
                  "url": "https://.../download/...?type=pdf"
                },
                "rtf": {
                  "url": "https://.../download/...?type=rtf"
                }
              },
              "education": {
                "level": {
                  "id": "master",
                  "name": "Магистр"
                },
                "primary": [
                  {
                    "name": "testUniversity",
                    "name_id": null,
                    "organization": "testFaculty",
                    "organization_id": null,
                    "result": "testSpeciality",
                    "result_id": null,
                    "year": "1988"
                  }
                ]
              },
              "experience": [
                {
                  "area": {
                    "id": "1",
                    "name": "Москва",
                    "url": "https://..."
                  },
                  "company": "Компания",
                  "company_id": null,
                  "company_url": "http://url.ru",
                  "employer": null,
                  "end": "2012-02-06",
                  "industries": [],
                  "industry": {
                    "id": "1",
                    "name": "Банки/кредиты/инвестиции/лизинг"
                  },
                  "position": "Директор",
                  "start": "2011-01-02"
                }
              ],
              "finished": "true",
              "first_name": "Иван",
              "gender": {
                "id": "male",
                "name": "Мужской"
              },
              "has_errors": "false",
              "hidden_fields": [],
              "id": "someid",
              "last_name": "Иванов",
              "marked": "false",
              "middle_name": null,
              "photo": null,
              "platform": {
                "id": "headhunter"
              },
              "requires_completion": "false",
              "salary": null,
              "status": {
                "id": "published",
                "name": "опубликовано"
              },
              "title": "API Test Resume",
              "total_experience": {
                "months": "14"
              },
              "updated_at": "2023-09-26T14:08:09+03:00",
              "url": "https://..."
            }
          ],
          "unavailable": []
        }
      },
      "NegotiationsMessageSent": {
        "value": {
          "address": null,
          "author": {
            "participant_type": "applicant"
          },
          "created_at": "2013-10-08T10:12:23+04:00",
          "editable": "false",
          "id": "124",
          "state": {
            "id": "text",
            "name": "Текст"
          },
          "text": "Текст сообщения",
          "viewed_by_me": "true",
          "viewed_by_opponent": "false"
        }
      },
      "VacanciesVacancyUpgradeList": {
        "value": {
          "items": [
            {
              "actions": [
                {
                  "type": "direct_upgrade"
                },
                {
                  "cart_id": "5967035",
                  "type": "activate",
                  "url": "https://hh.ru/employer/invoice/finish?cartId=5967035"
                },
                {
                  "price": {
                    "amount": "10152.0",
                    "currency_code": "RUR"
                  },
                  "type": "buy",
                  "url": "https://hh.ru/employer/invoice/purchase?code=VPREM&count=1"
                }
              ],
              "vacancy_billing_type": {
                "description": "Максимум откликов в течение недели",
                "id": "premium",
                "name": "Публикация «Премиум»"
              },
              "without_action": null
            },
            {
              "actions": [],
              "vacancy_billing_type": {
                "description": "Максимум откликов в течение месяца",
                "id": "standard_plus",
                "name": "Публикация «Стандарт плюс»"
              },
              "without_action": [
                {
                  "reason": "Превышено количество улучшений вакансии"
                }
              ]
            }
          ]
        }
      },
      "EditEmployerManagers": {
        "value": {
          "additional_phone": {
            "city": "916",
            "comment": "личный",
            "country": "7",
            "number": "4555555"
          },
          "permissions": [
            {
              "id": "can_create_vacancy",
              "name": "Создание и продление вакансий"
            },
            {
              "id": "can_view_resume_contacts",
              "name": "Просмотр контактов соискателей"
            }
          ],
          "phone": {
            "city": "495",
            "comment": "с 9 до 17",
            "country": "7",
            "number": "1568055"
          },
          "position": "Менеджер по подбору персонала"
        }
      },
      "VacanciesVacanciesBlacklisted": {
        "value": {
          "found": "1",
          "items": [
            {
              "address": null,
              "adv_response_url": "https://api.hh.ru/vacancies/8/adv_response?host=hh.ru",
              "alternate_url": "https://hh.ru/vacancy/8",
              "apply_alternate_url": "https://hh.ru/applicant/vacancy_response?vacancyId=8",
              "archived": "false",
              "area": {
                "id": "1",
                "name": "Москва",
                "url": "https://api.hh.ru/areas/1"
              },
              "created_at": "2022-09-26T12:37:14+03:00",
              "department": null,
              "employer": {
                "alternate_url": "https://hh.ru/employer/48",
                "id": "48",
                "logo_urls": null,
                "name": "ADAGFJSKGRRKQ",
                "trusted": "true",
                "url": "https://api.hh.ru/employers/48",
                "vacancies_url": "https://api.hh.ru/vacancies?employer_id=48"
              },
              "has_test": "false",
              "id": "8",
              "insider_interview": null,
              "name": "JЛEтмюАНрG ДAsёЙtпЁёж",
              "premium": "false",
              "published_at": "2022-09-26T12:37:14+03:00",
              "relations": [
                "blacklisted"
              ],
              "response_letter_required": "false",
              "response_url": null,
              "salary": {
                "currency": "USD",
                "from": "1209",
                "gross": "true",
                "to": "1506"
              },
              "sort_point_distance": null,
              "type": {
                "id": "open",
                "name": "Открытая"
              },
              "url": "https://api.hh.ru/vacancies/8?host=hh.ru"
            }
          ],
          "limit_reached": "false",
          "page": "0",
          "pages": "1",
          "per_page": "20"
        }
      },
      "EmployerManagerInfo": {
        "value": {
          "additional_phone": {
            "city": "916",
            "comment": "личный",
            "country": "7",
            "number": "4555555"
          },
          "area": {
            "id": "1",
            "name": "Москва",
            "url": "https://api.hh.ru/areas/1"
          },
          "email": "employer@example.com",
          "first_name": "Иван",
          "full_name": "Иванов Иван Иванович",
          "id": "1507922",
          "is_main_contact_person": "false",
          "last_name": "Иванов",
          "manager_type": {
            "id": "manager",
            "name": "Менеджер"
          },
          "middle_name": "Иванович",
          "permissions": [
            {
              "id": "can_create_vacancy",
              "name": "Создание и продление вакансий"
            },
            {
              "id": "can_view_resume_contacts",
              "name": "Просмотр контактов соискателей"
            }
          ],
          "phone": {
            "city": "495",
            "comment": "с 9 до 17",
            "country": "7",
            "number": "1568055"
          },
          "position": "Менеджер по подбору персонала",
          "vacancies_count": "0"
        }
      },
      "ServicesMethodAccess": {
        "value": {
          "items": [
            {
              "access": {
                "has_access": "true"
              },
              "description": "Наличие доступа к просмотру резюме, у которого есть отклик или приглашение",
              "id": "3"
            },
            {
              "access": {
                "has_access": "false"
              },
              "description": "Наличие доступа к просмотру резюме",
              "id": "4"
            }
          ]
        }
      },
      "VacanciesVacancyStats": {
        "value": {
          "items": [
            {
              "date": "2017-01-10",
              "responses": "1",
              "views": "36"
            },
            {
              "date": "2017-01-11",
              "responses": "4",
              "views": "35"
            },
            {
              "date": "2017-01-12",
              "responses": "1",
              "views": "32"
            },
            {
              "date": "2017-01-13",
              "responses": null,
              "views": null
            },
            {
              "date": "2017-01-14",
              "responses": null,
              "views": null
            }
          ]
        }
      },
      "ResumesEditResume": {
        "value": {
          "language": [
            {
              "id": "rus",
              "level": {
                "id": "l1",
                "name": "родной"
              },
              "name": "Русский"
            },
            {
              "id": "eng",
              "level": {
                "id": "b2",
                "name": "advanced"
              },
              "name": "English"
            }
          ]
        }
      },
      "ResumesResumeNegotiationsHistory": {
        "value": {
          "vacancies": [
            {
              "archived": "false",
              "can_edit": "true",
              "id": "321",
              "items": [
                {
                  "created_at": "2017-01-30T15:06:47+03:00",
                  "employer_state": {
                    "id": "offer",
                    "name": "Предложение о работе"
                  },
                  "with_message": "true"
                }
              ],
              "messages_url": "https://api.hh.ru/negotiations/123/messages",
              "name": "Тестовая вакансия",
              "negotiations_url": "https://api.hh.ru/negotiations/123",
              "url": "https://api.hh.ru/vacancies/321"
            }
          ]
        }
      },
      "Languages": {
        "value": [
          {
            "id": "ita",
            "name": "Итальянский",
            "uid": "17"
          },
          {
            "id": "nld",
            "name": "Голландский",
            "uid": "11"
          },
          {
            "id": "ell",
            "name": "Греческий",
            "uid": "12"
          }
        ]
      },
      "ResumesCreateResume": {
        "value": {
          "area": {
            "id": "1"
          },
          "citizenship": [
            {
              "id": "113"
            }
          ],
          "contact": [
            {
              "preferred": "true",
              "type": {
                "id": "email",
                "name": "Эл. почта"
              },
              "value": "my-email@example.com"
            },
            {
              "comment": "Комментарий",
              "need_verification": "false",
              "preferred": "false",
              "type": {
                "id": "cell",
                "name": "Мобильный телефон"
              },
              "value": {
                "city": "955",
                "country": "7",
                "formatted": "7-955-000-0000",
                "number": "0000000"
              },
              "verified": "false"
            }
          ],
          "education": {
            "additional": null,
            "attestation": null,
            "elementary": null,
            "level": {
              "id": "master",
              "name": "Магистр"
            },
            "primary": [
              {
                "name": "testUniversity",
                "name_id": null,
                "organization": "testFaculty",
                "organization_id": null,
                "result": "testSpeciality",
                "result_id": null,
                "year": "1988"
              }
            ]
          },
          "experience": [
            {
              "area": null,
              "company": "Компания",
              "company_id": null,
              "company_url": "http://url.ru",
              "description": "Руководил отделом",
              "employer": null,
              "end": "2012-02-06",
              "industries": [],
              "industry": null,
              "position": "Директор",
              "start": "2011-01-02"
            }
          ],
          "first_name": "Иван",
          "gender": {
            "id": "male",
            "name": null
          },
          "language": [
            {
              "id": "eng",
              "level": {
                "id": "a1",
                "name": "A1"
              },
              "name": "Английский"
            }
          ],
          "last_name": "Иванов",
          "photo": null,
          "portfolio": null,
          "skills": "Свободное описание навыков",
          "title": "RESUME"
        }
      },
      "ArtifactsArtifactsPhoto": {
        "value": {
          "found": "1",
          "items": [
            {
              "id": "92278992",
              "medium": "http://...",
              "small": "http://...",
              "state": {
                "id": "ok",
                "name": "ok"
              }
            }
          ],
          "page": "0",
          "pages": "1",
          "per_page": "1"
        }
      },
      "NegotiationsMessageGet": {
        "value": {
          "found": "1",
          "items": [
            {
              "address": null,
              "assessments": [
                {
                  "actions": [
                    {
                      "alternate_url": "https://hh.ru/applicant/assessment/123",
                      "enabled": "true",
                      "id": "proceed",
                      "name": "Перейти к тестированию"
                    }
                  ],
                  "id": "123",
                  "name": "Динамический тест числовых способностей"
                }
              ],
              "author": {
                "participant_type": "employer"
              },
              "created_at": "2013-10-07T18:30:57+04:00",
              "editable": "false",
              "id": "123",
              "state": {
                "id": "invitation",
                "name": "Приглашение"
              },
              "text": "Вас приглашает очень крупный иностранный банк на зарплату, о которой мечтают арабские шейхи",
              "viewed_by_me": "true",
              "viewed_by_opponent": "true"
            },
            {
              "address": null,
              "author": {
                "participant_type": "applicant"
              },
              "created_at": "2013-10-08T10:12:23+04:00",
              "editable": "false",
              "id": "124",
              "state": {
                "id": "text",
                "name": "Текст"
              },
              "text": "Верблюда и коня мне!",
              "viewed_by_me": "true",
              "viewed_by_opponent": "false"
            }
          ],
          "page": "0",
          "pages": "1",
          "per_page": "20"
        }
      },
      "ResumesResumeConditions": {
        "value": {
          "access": {
            "fields": {
              "type": {
                "required": "true"
              }
            },
            "required": "true"
          },
          "area": {
            "required": "true"
          },
          "auto_hide_time": {
            "required": "false"
          },
          "birth_date": {
            "max_date": "2009-04-24",
            "min_date": "1900-01-01",
            "required": "false"
          },
          "business_trip_readiness": {
            "required": "true"
          },
          "citizenship": {
            "max_count": "3",
            "min_count": "1",
            "required": "true"
          },
          "contact": {
            "fields": {
              "comment": {
                "max_length": "255",
                "min_length": "1",
                "required": "false"
              },
              "preferred": {
                "required": "true"
              },
              "type": {
                "required": "true"
              },
              "value": {
                "required": "true"
              }
            },
            "max_count": "4",
            "min_count": "1",
            "required": "true"
          },
          "district": {
            "required": "false"
          },
          "driver_license_types": {
            "max_count": null,
            "min_count": "0",
            "required": "false"
          },
          "education": {
            "fields": {
              "additional": {
                "fields": {
                  "name": {
                    "max_length": "512",
                    "min_length": "1",
                    "required": "true"
                  },
                  "organization": {
                    "max_length": "128",
                    "min_length": "1",
                    "required": "true"
                  },
                  "result": {
                    "max_length": "128",
                    "min_length": "1",
                    "required": "false"
                  },
                  "year": {
                    "max_value": "2033",
                    "min_value": "1950",
                    "required": "true"
                  }
                },
                "max_count": "100",
                "min_count": "0",
                "required": "false"
              },
              "attestation": {
                "fields": {
                  "name": {
                    "max_length": "512",
                    "min_length": "1",
                    "required": "true"
                  },
                  "organization": {
                    "max_length": "128",
                    "min_length": "1",
                    "required": "true"
                  },
                  "result": {
                    "max_length": "128",
                    "min_length": "1",
                    "required": "false"
                  },
                  "year": {
                    "max_value": "2033",
                    "min_value": "1950",
                    "required": "true"
                  }
                },
                "max_count": "64",
                "min_count": "0",
                "required": "false"
              },
              "elementary": {
                "fields": {
                  "name": {
                    "max_length": "512",
                    "min_length": "1",
                    "required": "true"
                  },
                  "year": {
                    "max_value": "2033",
                    "min_value": "1950",
                    "required": "true"
                  }
                },
                "max_count": "64",
                "min_count": "0",
                "required": "false"
              },
              "level": {
                "required": "true"
              },
              "primary": {
                "fields": {
                  "name": {
                    "max_length": "512",
                    "min_length": "1",
                    "required": "true"
                  },
                  "organization": {
                    "max_length": "128",
                    "min_length": "1",
                    "required": "false"
                  },
                  "result": {
                    "max_length": "128",
                    "min_length": "1",
                    "required": "false"
                  },
                  "year": {
                    "max_value": "2033",
                    "min_value": "1950",
                    "required": "true"
                  }
                },
                "max_count": "64",
                "min_count": "1",
                "required": "true"
              }
            },
            "required": "true"
          },
          "employment": {
            "required": "true"
          },
          "employments": {
            "max_count": null,
            "min_count": "1",
            "required": "true"
          },
          "experience": {
            "fields": {
              "area": {
                "required": "false"
              },
              "company": {
                "max_length": "512",
                "min_length": "1",
                "required": "true"
              },
              "company_url": {
                "max_length": "255",
                "min_length": "1",
                "required": "false"
              },
              "description": {
                "max_length": "32768",
                "min_length": "1",
                "required": "true"
              },
              "end": {
                "max_date": "2023-04-24",
                "min_date": "1900-01-01",
                "required": "false"
              },
              "industries": {
                "max_count": "5",
                "min_count": "0",
                "required": "false"
              },
              "industry": {
                "required": "false"
              },
              "position": {
                "max_length": "512",
                "min_length": "1",
                "required": "true"
              },
              "start": {
                "max_date": "2023-04-24",
                "min_date": "1900-01-01",
                "required": "true"
              }
            },
            "max_count": "64",
            "min_count": "0",
            "required": "false"
          },
          "first_name": {
            "max_length": "100",
            "min_length": "1",
            "regexp": "^[ ]*[A-Z][a-z]*([ ʼ’'`-][A-Z][a-z]*)*[ ]*$",
            "required": "true"
          },
          "gender": {
            "required": "true"
          },
          "has_vehicle": {
            "required": "false"
          },
          "hidden_fields": {
            "max_count": null,
            "min_count": "0",
            "required": "false"
          },
          "language": {
            "fields": {
              "id": {
                "required": "true"
              },
              "level": {
                "required": "true"
              }
            },
            "max_count": null,
            "min_count": "1",
            "required": "true"
          },
          "last_name": {
            "max_length": "100",
            "min_length": "1",
            "regexp": "^[ ]*[A-Z][a-z]*([ ʼ’'`-][A-Z][a-z]*)*[ ]*$",
            "required": "true"
          },
          "metro": {
            "required": "false"
          },
          "middle_name": {
            "max_length": "100",
            "min_length": "1",
            "regexp": "^[ ]*[A-Z][a-z]*([ ʼ’'`-][A-Z][a-z]*)*[ ]*$",
            "required": "false"
          },
          "photo": {
            "required": "false"
          },
          "portfolio": {
            "max_count": null,
            "min_count": "0",
            "required": "false"
          },
          "professional_roles": {
            "max_count": "5",
            "min_count": "1",
            "required": "true"
          },
          "recommendation": {
            "fields": {
              "name": {
                "max_length": "128",
                "min_length": "1",
                "required": "true"
              },
              "organization": {
                "max_length": "128",
                "min_length": "1",
                "required": "true"
              },
              "position": {
                "max_length": "128",
                "min_length": "1",
                "required": "true"
              }
            },
            "max_count": null,
            "min_count": "0",
            "required": "false"
          },
          "relocation": {
            "fields": {
              "area": {
                "max_count": null,
                "min_count": "0",
                "required": "false"
              },
              "district": {
                "max_count": "512",
                "min_count": "0",
                "required": "false"
              },
              "type": {
                "required": "true"
              }
            },
            "required": "false"
          },
          "resume_locale": {
            "required": "true"
          },
          "salary": {
            "fields": {
              "amount": {
                "max_value": null,
                "min_value": "0",
                "required": "true"
              },
              "currency": {
                "required": "true"
              }
            },
            "required": "false"
          },
          "schedule": {
            "required": "true"
          },
          "schedules": {
            "max_count": null,
            "min_count": "1",
            "required": "true"
          },
          "site": {
            "fields": {
              "type": {
                "required": "true"
              },
              "url": {
                "max_length": "200",
                "min_length": "1",
                "required": "true"
              }
            },
            "max_count": "10",
            "min_count": "0",
            "required": "false"
          },
          "skill_set": {
            "max_count": "30",
            "max_length": "100",
            "min_count": "1",
            "min_length": "1",
            "required": "true"
          },
          "skills": {
            "max_length": "32768",
            "min_length": "1",
            "required": "false"
          },
          "title": {
            "max_length": "100",
            "min_length": "2",
            "not_in": [
              "TEST_RESUME"
            ],
            "required": "true"
          },
          "travel_time": {
            "required": "true"
          },
          "work_ticket": {
            "max_count": "8",
            "min_count": "0",
            "required": "false"
          }
        }
      },
      "SuggestsSuggestsPositions": {
        "value": {
          "items": [
            {
              "id": "2569",
              "professional_roles": [
                {
                  "accept_incomplete_resumes": "false",
                  "id": "70",
                  "name": "Менеджер по продажам, менеджер по работе с клиентами"
                }
              ],
              "text": "Менеджер по развитию бизнеса"
            }
          ]
        }
      },
      "VacancyCreate": {
        "value": {
          "accept_handicapped": "true",
          "accept_incomplete_resumes": "false",
          "accept_kids": "false",
          "accept_temporary": "true",
          "address": {
            "id": "123",
            "show_metro_only": "true"
          },
          "allow_messages": "true",
          "area": {
            "id": "1"
          },
          "billing_type": {
            "id": "standard"
          },
          "branded_template": {
            "id": "marketing"
          },
          "code": "код-1234",
          "contacts": {
            "email": "i.ivanov@example.com",
            "name": "Иванов Иван",
            "phones": [
              {
                "city": "495",
                "comment": "с 10 до 20",
                "country": "7",
                "formatted": "79198883344",
                "number": "1234567"
              }
            ]
          },
          "description": "Работа в дружном коллективе",
          "driver_license_types": [
            {
              "id": "A"
            },
            {
              "id": "B"
            }
          ],
          "employment": {
            "id": "full"
          },
          "experience": {
            "id": "moreThan6"
          },
          "key_skills": [
            {
              "name": "Холодные продажи"
            },
            {
              "name": "Проведение промо-акций"
            }
          ],
          "languages": [
            {
              "id": "eng",
              "level": {
                "id": "a1"
              }
            }
          ],
          "manager": {
            "id": "321"
          },
          "name": "Менеджер по продажам",
          "previous_id": "123456",
          "professional_roles": [
            {
              "id": "59"
            }
          ],
          "response_letter_required": "true",
          "response_notifications": "true",
          "salary": {
            "currency": "USD",
            "from": "100",
            "gross": "true",
            "to": "500"
          },
          "schedule": {
            "id": "flyInFlyOut"
          },
          "test": {
            "id": "42",
            "required": "true"
          },
          "type": {
            "id": "open"
          },
          "working_days": [
            {
              "id": "only_saturday_and_sunday"
            }
          ],
          "working_time_intervals": [
            {
              "id": "from_four_to_six_hours_in_a_day"
            }
          ],
          "working_time_modes": [
            {
              "id": "start_after_sixteen"
            }
          ]
        }
      },
      "EmployerDictionariesTests": {
        "value": {
          "items": [
            {
              "id": "75169",
              "name": "Базовый тест на знание C++"
            },
            {
              "id": "75168",
              "name": "Логический тест"
            }
          ]
        }
      },
      "ResumeResumeViewEmployer": {
        "value": {
          "actions": {
            "download": {
              "pdf": {
                "url": "https://api.hh.ru/resumes/09866c49/download/file-name.pdf?type=pdf"
              },
              "rtf": {
                "url": "https://api.hh.ru/resumes/09866c49/download/file-name.rtf?type=rtf"
              }
            }
          },
          "age": "29",
          "alternate_url": "https://hh.ru/resume/09866c49",
          "area": {
            "id": "1",
            "name": "Москва",
            "url": "https://api.hh.ru/areas/1"
          },
          "birth_date": "1993-06-28",
          "business_trip_readiness": {
            "id": "sometimes",
            "name": "готов к редким командировкам"
          },
          "can_view_full_info": "true",
          "certificate": [],
          "citizenship": [
            {
              "id": "113",
              "name": "Россия",
              "url": "https://api.hh.ru/areas/113"
            }
          ],
          "contact": [
            {
              "comment": "Звонить после 12",
              "need_verification": "true",
              "preferred": "false",
              "type": {
                "id": "cell",
                "name": "Мобильный телефон"
              },
              "value": {
                "city": "495",
                "country": "7",
                "formatted": "+7 (495) 552-73-67",
                "number": "5527367"
              },
              "verified": "false"
            },
            {
              "preferred": "true",
              "type": {
                "id": "email",
                "name": "Эл. почта"
              },
              "value": "my-email@example.com"
            }
          ],
          "created_at": "2023-05-25T14:22:06+03:00",
          "download": {
            "pdf": {
              "url": "https://api.hh.ru/resumes/09866c49/download/file-name.pdf?type=pdf"
            },
            "rtf": {
              "url": "https://api.hh.ru/resumes/09866c49/download/file-name.rtf?type=rtf"
            }
          },
          "driver_license_types": [
            {
              "id": "A"
            }
          ],
          "education": {
            "additional": [],
            "attestation": [],
            "elementary": [],
            "level": {
              "id": "master",
              "name": "Магистр"
            },
            "primary": [
              {
                "name": "testUniversity",
                "name_id": null,
                "organization": "testFaculty",
                "organization_id": null,
                "result": "testSpeciality",
                "result_id": null,
                "year": "1988"
              }
            ]
          },
          "employment": {
            "id": "part",
            "name": "Частичная занятость"
          },
          "employments": [
            {
              "id": "part",
              "name": "Частичная занятость"
            }
          ],
          "experience": [
            {
              "area": {
                "id": "1",
                "name": "Москва",
                "url": "https://api.hh.ru/areas/1"
              },
              "company": "Компания",
              "company_id": null,
              "company_url": "http://url.ru",
              "description": "Руководил отделом",
              "employer": null,
              "end": "2012-02-06",
              "industries": [],
              "industry": {
                "id": "1",
                "name": "Банки/кредиты/инвестиции/лизинг"
              },
              "position": "Директор",
              "start": "2011-01-02"
            }
          ],
          "favorited": "false",
          "first_name": "Иван",
          "gender": {
            "id": "male",
            "name": "Мужской"
          },
          "has_vehicle": "true",
          "hidden_fields": [],
          "id": "09866c49",
          "language": [
            {
              "id": "chv",
              "level": {
                "id": "a1",
                "name": "A1 — Начальный"
              },
              "name": "Чувашский"
            }
          ],
          "last_name": "Иванов",
          "metro": {
            "id": "6.8",
            "lat": "55.807794",
            "line": {
              "hex_color": "F07E24",
              "id": "6",
              "name": "Калужско-Рижская"
            },
            "lng": "37.638699",
            "name": "Алексеевская",
            "order": "5"
          },
          "middle_name": null,
          "negotiations_history": {
            "url": "https://api.hh.ru/resumes/09866c49/negotiations_history"
          },
          "owner": {
            "comments": {
              "counters": {
                "total": "0"
              },
              "url": "https://api.hh.ru/applicant_comments/54765267"
            },
            "id": "54765267"
          },
          "paid_services": [],
          "photo": {
            "40": "https://hhcdn.ru/photo/00970.png",
            "100": "https://hhcdn.ru/photo/00971.png",
            "500": "https://hhcdn.ru/photo/00972.png",
            "medium": "https://hhcdn.ru/photo/00972.png",
            "small": "https://hhcdn.ru/photo/00971.png"
          },
          "platform": {
            "id": "headhunter"
          },
          "portfolio": [
            {
              "description": "Portfolio description",
              "medium": "https://hhcdn.ru/photo/00976.png",
              "small": "https://hhcdn.ru/photo/00975.png"
            }
          ],
          "professional_roles": [
            {
              "id": "124",
              "name": "Тестировщик"
            }
          ],
          "recommendation": [
            {
              "contact": "",
              "name": "Ivan",
              "organization": "HH",
              "position": "CEO"
            }
          ],
          "relocation": {
            "area": [
              {
                "id": "98",
                "name": "Ульяновск",
                "url": "https://api.hh.ru/areas/98"
              }
            ],
            "district": [],
            "type": {
              "id": "relocation_possible",
              "name": "готов к переезду"
            }
          },
          "resume_locale": {
            "id": "RU",
            "name": "Русский"
          },
          "salary": {
            "amount": "10000",
            "currency": "USD"
          },
          "schedule": {
            "id": "flexible",
            "name": "Гибкий график"
          },
          "schedules": [
            {
              "id": "flexible",
              "name": "Гибкий график"
            }
          ],
          "site": [
            {
              "type": {
                "id": "icq",
                "name": "ICQ"
              },
              "url": "123321123"
            }
          ],
          "skill_set": [
            "Графика",
            "Дизайн"
          ],
          "skills": "Руководство большой командой",
          "title": "API Test Resume",
          "total_experience": {
            "months": "14"
          },
          "travel_time": {
            "id": "less_than_hour",
            "name": "Не более часа"
          },
          "updated_at": "2023-05-25T14:22:06+03:00",
          "work_ticket": [
            {
              "id": "113",
              "name": "Россия",
              "url": "https://api.hh.ru/areas/113"
            }
          ]
        }
      },
      "SavedSearchesSavedSearchResumes": {
        "value": {
          "found": "2",
          "items": [
            {
              "created_at": "2015-01-01T12:12:17+03:00",
              "id": "609535",
              "items": {
                "count": "55",
                "url": "https://api.hh.ru/resumes?order_by=publication_time&saved_search_id=123456&text=manager&area=1"
              },
              "name": "Managers in Moscow",
              "new_items": {
                "count": "15",
                "url": "https://api.hh.ru/resumes?order_by=publication_time&saved_search_id=123456&text=manager&area=1&last_used=2015-11-12T18%3A06%3A04%2B0300"
              },
              "subscription": "true"
            }
          ],
          "page": "0",
          "pages": "1",
          "per_page": "0"
        }
      },
      "VacanciesVacanciesFavorited": {
        "value": {
          "found": "20",
          "items": [
            {
              "address": null,
              "adv_response_url": "https://api.hh.ru/vacancies/239/adv_response?host=hh.ru",
              "alternate_url": "https://hh.ru/vacancy/239",
              "apply_alternate_url": "https://hh.ru/applicant/vacancy_response?vacancyId=239",
              "archived": "false",
              "area": {
                "id": "1",
                "name": "Москва",
                "url": "https://api.hh.ru/areas/1"
              },
              "created_at": "2022-09-19T12:31:51+03:00",
              "department": null,
              "employer": {
                "alternate_url": "https://hh.ru/employer/275",
                "id": "275",
                "logo_urls": null,
                "name": "JAFJGESKCUOPG",
                "trusted": "true",
                "url": "https://api.hh.ru/employers/275",
                "vacancies_url": "https://api.hh.ru/vacancies?employer_id=275"
              },
              "has_test": "false",
              "id": "239",
              "insider_interview": null,
              "name": "TEST_VACANCY 1",
              "premium": "false",
              "published_at": "2022-09-19T12:31:51+03:00",
              "relations": [
                "favorited"
              ],
              "response_letter_required": "false",
              "response_url": null,
              "salary": {
                "currency": "USD",
                "from": "1209",
                "gross": "true",
                "to": "1508"
              },
              "sort_point_distance": null,
              "type": {
                "id": "open",
                "name": "Открытая"
              },
              "url": "https://api.hh.ru/vacancies/239?host=hh.ru"
            }
          ],
          "page": "0",
          "pages": "1",
          "per_page": "20"
        }
      },
      "EmployersEmployerInfoExample": {
        "value": {
          "accredited_it_employer": "true",
          "alternate_url": "https://hh.ru/employer/1455",
          "applicant_services": {
            "target_employer": {
              "count": "2"
            }
          },
          "area": {
            "id": "113",
            "name": "Россия",
            "url": "https://api.hh.ru/areas/113"
          },
          "branded_description": "<style>...</style><div>...</div><script></script>",
          "branding": {
            "makeup": {
              "url": "/employer/makeup/webview/12"
            },
            "template_code": "makeup:123",
            "template_version_id": "10",
            "type": "makeup"
          },
          "description": "Хороший работодатель",
          "id": "1455",
          "industries": [
            {
              "id": "7.540",
              "name": "Разработка программного обеспечения"
            },
            {
              "id": "9.399",
              "name": "Мобильная связь"
            }
          ],
          "insider_interviews": [
            {
              "id": "12345",
              "title": "Лучшие из лучших",
              "url": "https://hh.ru/interview/12345?employerId=1455"
            },
            {
              "id": "54321",
              "title": "История успеха",
              "url": "https://hh.ru/interview/54321?employerId=1455"
            }
          ],
          "logo_urls": {
            "90": "https://hh.ru/employer-logo/289027.png",
            "240": "https://hh.ru/employer-logo/289169.png",
            "original": "https://hh.ru/file/2352807.png"
          },
          "name": "HeadHunter",
          "open_vacancies": "19",
          "relations": [],
          "site_url": "https://hh.ru",
          "trusted": "true",
          "type": "company",
          "vacancies_url": "https://api.hh.ru/vacancies?employer_id=1455"
        }
      },
      "EmployerManagerLimits": {
        "value": {
          "left": {
            "resume_view": "50",
            "resume_view_from_api": "48"
          },
          "limits": {
            "resume_view": "100",
            "resume_view_from_api": "50"
          },
          "spend": {
            "resume_view": "1",
            "resume_view_from_api": "2"
          }
        }
      },
      "VacanciesActiveList": {
        "value": {
          "found": "1",
          "items": [
            {
              "address": {
                "building": "15 к 2",
                "city": "Кемерово",
                "description": null,
                "id": "321123",
                "lat": "55.324417",
                "lng": "86.116411",
                "metro": null,
                "metro_stations": [],
                "raw": "Кемерово, Пр.Молодежный, 15 к 2",
                "street": "Пр.Молодежный"
              },
              "alternate_url": "https://hh.ru/vacancy/8331228",
              "apply_alternate_url": "https://hh.ru/applicant/vacancy_response?vacancyId=8331228",
              "archived": "false",
              "area": {
                "id": "1",
                "name": "Москва",
                "url": "https://api.hh.ru/areas/1"
              },
              "billing_type": {
                "id": "standard",
                "name": "Стандарт"
              },
              "can_upgrade_billing_type": "true",
              "counters": {
                "calls": "99",
                "invitations": "10",
                "invitations_and_responses": "14",
                "new_missed_calls": "11",
                "responses": "5",
                "resumes_in_progress": "5",
                "unread_responses": "3",
                "views": "100500"
              },
              "created_at": "2012-10-11T13:27:16+04:00",
              "department": {
                "id": "HH-1455-TECH",
                "name": "HeadHunter::Технический департамент"
              },
              "employer": {
                "accredited_it_employer": "false",
                "alternate_url": "https://hh.ru/employer/1455",
                "id": "1455",
                "logo_urls": {
                  "90": "https://hh.ru/employer-logo/289027.png",
                  "240": "https://hh.ru/employer-logo/289169.png",
                  "original": "https://hh.ru/file/2352807.png"
                },
                "name": "HeadHunter",
                "trusted": "true",
                "url": "https://api.hh.ru/employers/1455"
              },
              "expires_at": "2013-07-08T16:17:21+04:00",
              "has_test": "true",
              "has_updates": "false",
              "id": "8331228",
              "manager": {
                "first_name": "Петр",
                "id": "5032",
                "last_name": "Иванов",
                "middle_name": null
              },
              "name": "Секретарь",
              "negotiations_state": null,
              "premium": "false",
              "published_at": "2013-07-08T16:17:21+04:00",
              "relations": [],
              "response_letter_required": "true",
              "salary": {
                "currency": "RUR",
                "from": "30000",
                "gross": "true",
                "to": null
              },
              "type": {
                "id": "open",
                "name": "Открытая"
              },
              "url": "https://api.hh.ru/vacancies/8331228"
            }
          ],
          "page": "0",
          "pages": "1",
          "per_page": "20"
        }
      },
      "MailTemplatesMailTemplateInput": {
        "value": {
          "text": "Ваше резюме показалось нам очень интересным. Мы хотели бы пригласить Вас на интервью. Перезвоните, пожалуйста, в рабочее время по телефону [HRPhone] ([HRName])."
        }
      },
      "ResumesGetResumeVisibilityList": {
        "value": {
          "found": "1",
          "items": [
            {
              "alternate_url": "https://hh.ru/employer/1455",
              "id": "1455",
              "logo_urls": {
                "90": "https://hh.ru/employer/logo/1455"
              },
              "name": "HeadHunter",
              "url": "https://api.hh.ru/employers/1455"
            }
          ],
          "limit": "2000",
          "page": "0",
          "pages": "1",
          "per_page": "20"
        }
      },
      "ArtifactsArtifactConditions": {
        "value": {
          "counters": {
            "max": "20",
            "uploaded": "2"
          },
          "fields": {
            "description": {
              "max_length": "255",
              "min_length": "0",
              "required": "false"
            },
            "file": {
              "max_size": "6291456",
              "mime_type": [
                "image/jpeg",
                "image/png",
                "image/psd"
              ],
              "required": "true"
            },
            "type": {
              "required": "true"
            }
          }
        }
      },
      "VacancyDuplicates": {
        "value": {
          "found": "4",
          "has_duplicates": "true",
          "items": [
            "171",
            "172",
            "173",
            "174"
          ]
        }
      },
      "SavedSearchesSavedSearchesVacancies": {
        "value": {
          "found": "1",
          "items": [
            {
              "created_at": "2014-04-11T13:12:17+04:00",
              "id": "123",
              "items": {
                "count": "304234",
                "url": "https://api.hh.ru/vacancies?area=1&saved_search_id=123"
              },
              "name": "Test autosearch",
              "new_items": {
                "count": "12",
                "url": "https://api.hh.ru/vacancies?area=1&saved_search_id=123&date_from=2014-01-11T13%3A12%3A17%2B0400"
              },
              "subscription": "true"
            }
          ],
          "page": "0",
          "pages": "1",
          "per_page": "1"
        }
      },
      "LocalesLocales": {
        "value": [
          {
            "current": "true",
            "id": "RU",
            "name": "Русский"
          },
          {
            "current": "false",
            "id": "EN",
            "name": "English"
          }
        ]
      },
      "ResumesAccessTypes": {
        "value": {
          "auto_hide_time_options": [
            {
              "id": "month_12",
              "name": "1 год"
            },
            {
              "active": "true",
              "id": "month_10",
              "name": "10 месяцев"
            },
            {
              "id": "month_8",
              "name": "8 месяцев"
            }
          ],
          "items": [
            {
              "id": "everyone",
              "name": "видно всему интернету"
            },
            {
              "id": "no_one",
              "name": "не видно никому"
            },
            {
              "id": "clients",
              "name": "видно всем компаниям, зарегистрированным на HeadHunter"
            },
            {
              "id": "whitelist",
              "limit": "2000",
              "list_url": "https://api.hh.ru/resumes/012345abcde/whitelist",
              "name": "видно выбранным компаниям",
              "total": "3"
            },
            {
              "active": "true",
              "id": "blacklist",
              "limit": "2000",
              "list_url": "https://api.hh.ru/resumes/012345abcde/blacklist",
              "name": "скрыто от выбранных компаний",
              "total": "5"
            },
            {
              "id": "direct",
              "name": "доступно только по прямой ссылке"
            }
          ]
        }
      },
      "VacanciesPreferredNegotiationsOrder": {
        "value": {
          "order_type": {
            "id": "last_change_time_except_employer_inbox",
            "name": "По дате создания и активности соискателя"
          }
        }
      },
      "EmployersEmployersExample": {
        "value": {
          "found": "1",
          "items": [
            {
              "alternate_url": "https://hh.ru/employer/1455",
              "id": "1455",
              "logo_urls": {
                "90": "https://hh.ru/employer-logo/289027.png",
                "240": "https://hh.ru/employer-logo/289169.png",
                "original": "https://hh.ru/file/2352807.png"
              },
              "name": "HeadHunter",
              "open_vacancies": "19",
              "url": "https://api.hh.ru/employers/1455",
              "vacancies_url": "https://api.hh.ru/vacancies?employer_id=1455"
            }
          ],
          "page": "0",
          "pages": "1",
          "per_page": "20"
        }
      },
      "VacancyDraftVacancyDraftItems": {
        "value": {
          "found": "2",
          "items": [
            {
              "areas": [
                {
                  "id": "4786",
                  "name": "Артышта"
                },
                {
                  "id": "4787",
                  "name": "Бачатский"
                },
                {
                  "id": "1231",
                  "name": "Белово"
                }
              ],
              "auto_publication": null,
              "billing_type": {
                "id": "standard",
                "name": "Стандарт"
              },
              "completed_fields_percentage": "100",
              "draft_id": "1110032",
              "insufficient_publications": [
                {
                  "billing_type": {
                    "id": "standard",
                    "name": "Стандарт"
                  },
                  "count": "2",
                  "publication_type": "standard",
                  "vacancy_type": "open"
                }
              ],
              "insufficient_quotas": [
                {
                  "billing_type": {
                    "id": "standard",
                    "name": "Стандарт"
                  },
                  "count": "1",
                  "publication_type": "standard",
                  "vacancy_type": "open"
                }
              ],
              "last_change_time": "2021-05-18T11:20:48+03:00",
              "name": "Заведующий отделом розничных продаж",
              "publication_ready": "true",
              "publication_type": "standard",
              "required_publications": [
                {
                  "billing_type": {
                    "id": "standard",
                    "name": "Стандарт"
                  },
                  "count": "3",
                  "publication_type": "standard",
                  "vacancy_type": "open"
                }
              ],
              "scheduled_at": "2022-01-31T12:00:00+03:00",
              "url": "https://api.hh.ru/vacancies/drafts/1110032",
              "vacancy_type": "open"
            },
            {
              "areas": [
                {
                  "id": "2842",
                  "name": "Балыкчы"
                }
              ],
              "auto_publication": {
                "bill_uid": "4011054/3",
                "cart_id": "5967030"
              },
              "billing_type": {
                "id": "standard_plus",
                "name": "Стандарт плюс"
              },
              "completed_fields_percentage": "100",
              "draft_id": "1110031",
              "insufficient_publications": null,
              "insufficient_quotas": null,
              "last_change_time": null,
              "name": "Куратор",
              "publication_ready": "true",
              "publication_type": "standard_plus",
              "required_publications": null,
              "scheduled_at": null,
              "url": "https://api.hh.ru/vacancies/drafts/1110031",
              "vacancy_type": "open"
            }
          ],
          "page": "0",
          "pages": "1",
          "per_page": "20"
        }
      },
      "AreasCountries": {
        "value": [
          {
            "id": "113",
            "name": "Россия",
            "url": "https://api.hh.ru/areas/113"
          },
          {
            "id": "6",
            "name": "Австралия",
            "url": "https://api.hh.ru/areas/6"
          }
        ]
      },
      "ResumesResumeVisibilityListSearchResponse": {
        "value": {
          "found": "2",
          "items": [
            {
              "alternate_url": "https://hh.ru/employer/1455",
              "id": "1455",
              "logo_urls": {
                "90": "https://hh.ru/employer/logo/1455"
              },
              "name": "HeadHunter",
              "selected": "true",
              "url": "https://api.hh.ru/employers/1455"
            },
            {
              "alternate_url": "https://hh.ru/employer/87891",
              "id": "87891",
              "logo_urls": {
                "90": "https://hh.ru/employer/logo/87891"
              },
              "name": "HeadHunter: Казахстан",
              "selected": "false",
              "url": "https://api.hh.ru/employers/87891"
            }
          ],
          "page": "0",
          "pages": "1",
          "per_page": "20"
        }
      },
      "EmployerManagerTypes": {
        "value": {
          "items": [
            {
              "available_permissions": [
                {
                  "id": "can_create_vacancy",
                  "name": "Создание и продление вакансий"
                },
                {
                  "id": "can_view_resume_contacts",
                  "name": "Просмотр контактов соискателей"
                }
              ],
              "id": "manager",
              "name": "Менеджер"
            }
          ]
        }
      },
      "NegotiationsCollectionNegotiations": {
        "value": {
          "found": "1",
          "items": [
            {
              "actions": [
                {
                  "arguments": [
                    {
                      "id": "message",
                      "required": "false",
                      "required_arguments": []
                    },
                    {
                      "id": "send_sms",
                      "required": "false",
                      "required_arguments": [
                        {
                          "id": "message"
                        }
                      ]
                    },
                    {
                      "id": "address_id",
                      "required": "false",
                      "required_arguments": [
                        {
                          "id": "message"
                        }
                      ]
                    }
                  ],
                  "enabled": "true",
                  "id": "interview",
                  "method": "PUT",
                  "name": "Интервью",
                  "resulting_employer_state": {
                    "id": "interview",
                    "name": "Интервью"
                  },
                  "templates": [
                    {
                      "id": "interview",
                      "name": "Приглашение на Интервью",
                      "quick": "false",
                      "url": "https://api.hh.ru/message_templates/interview?topic_id=1359972474"
                    }
                  ],
                  "url": "https://api.hh.ru/negotiations/interview/1359972474"
                },
                {
                  "arguments": [
                    {
                      "id": "message",
                      "required": "false",
                      "required_arguments": []
                    },
                    {
                      "id": "send_sms",
                      "required": "false",
                      "required_arguments": [
                        {
                          "id": "message"
                        }
                      ]
                    }
                  ],
                  "enabled": "true",
                  "id": "consider",
                  "method": "PUT",
                  "name": "Подумать",
                  "resulting_employer_state": {
                    "id": "consider",
                    "name": "Подумать"
                  },
                  "templates": [
                    {
                      "id": "consider",
                      "name": "Приглашение на этап Подумать",
                      "quick": "false",
                      "url": "https://api.hh.ru/message_templates/consider?topic_id=1359972474"
                    }
                  ],
                  "url": "https://api.hh.ru/negotiations/consider/1359972474"
                },
                {
                  "arguments": [
                    {
                      "id": "message",
                      "required": "false",
                      "required_arguments": []
                    },
                    {
                      "id": "send_sms",
                      "required": "false",
                      "required_arguments": [
                        {
                          "id": "message"
                        }
                      ]
                    },
                    {
                      "id": "address_id",
                      "required": "false",
                      "required_arguments": [
                        {
                          "id": "message"
                        }
                      ]
                    }
                  ],
                  "enabled": "true",
                  "id": "phone_interview",
                  "method": "PUT",
                  "name": "Телефонное интервью",
                  "resulting_employer_state": {
                    "id": "phone_interview",
                    "name": "Тел. интервью"
                  },
                  "templates": [
                    {
                      "id": "invite",
                      "name": "Приглашение на Телефонное интервью",
                      "quick": "false",
                      "url": "https://api.hh.ru/message_templates/invite?topic_id=1359972474"
                    },
                    {
                      "id": "invite_after_response",
                      "name": "Приглашение откликнувшегося соискателя на Телефонное интервью",
                      "quick": "false",
                      "url": "https://api.hh.ru/message_templates/invite_after_response?topic_id=1359972474"
                    }
                  ],
                  "url": "https://api.hh.ru/negotiations/phone_interview/1359972474"
                },
                {
                  "arguments": [
                    {
                      "id": "message",
                      "required": "false",
                      "required_arguments": []
                    },
                    {
                      "id": "send_sms",
                      "required": "false",
                      "required_arguments": [
                        {
                          "id": "message"
                        }
                      ]
                    }
                  ],
                  "enabled": "true",
                  "id": "assessment",
                  "method": "PUT",
                  "name": "Оценка",
                  "resulting_employer_state": {
                    "id": "assessment",
                    "name": "Оценка"
                  },
                  "templates": [
                    {
                      "id": "assessment_owner_tool",
                      "name": "Приглашение на Оценку (свой инструмент оценки)",
                      "quick": "false",
                      "url": "https://api.hh.ru/message_templates/assessment_owner_tool?topic_id=1359972474"
                    }
                  ],
                  "url": "https://api.hh.ru/negotiations/assessment/1359972474"
                },
                {
                  "arguments": [
                    {
                      "id": "message",
                      "required": "false",
                      "required_arguments": []
                    },
                    {
                      "id": "send_sms",
                      "required": "false",
                      "required_arguments": [
                        {
                          "id": "message"
                        }
                      ]
                    },
                    {
                      "id": "address_id",
                      "required": "false",
                      "required_arguments": [
                        {
                          "id": "message"
                        }
                      ]
                    }
                  ],
                  "enabled": "true",
                  "id": "hired",
                  "method": "PUT",
                  "name": "Выход на работу",
                  "resulting_employer_state": {
                    "id": "hired",
                    "name": "Выход на работу"
                  },
                  "templates": [
                    {
                      "id": "hired",
                      "name": "Приглашение на Выход на работу",
                      "quick": "false",
                      "url": "https://api.hh.ru/message_templates/hired?topic_id=1359972474"
                    }
                  ],
                  "url": "https://api.hh.ru/negotiations/hired/1359972474"
                },
                {
                  "arguments": [
                    {
                      "id": "message",
                      "required": "false",
                      "required_arguments": []
                    }
                  ],
                  "enabled": "true",
                  "id": "discard_by_employer",
                  "method": "PUT",
                  "name": "Отказ",
                  "resulting_employer_state": {
                    "id": "discard_by_employer",
                    "name": "Отказано"
                  },
                  "templates": [
                    {
                      "id": "discard_after_interview",
                      "name": "Отказ",
                      "quick": "false",
                      "url": "https://api.hh.ru/message_templates/discard_after_interview?topic_id=1359972474"
                    },
                    {
                      "id": "discard_after_response",
                      "name": "Отказ откликнувшемуся на вакансию соискателю",
                      "quick": "false",
                      "url": "https://api.hh.ru/message_templates/discard_after_response?topic_id=1359972474"
                    },
                    {
                      "id": "quick_discard_after_response",
                      "name": "Шаблон быстрого отказа на отклик",
                      "quick": "true",
                      "url": "https://api.hh.ru/message_templates/quick_discard_after_response?topic_id=1359972474"
                    }
                  ],
                  "url": "https://api.hh.ru/negotiations/discard_by_employer/1359972474"
                },
                {
                  "arguments": [
                    {
                      "id": "message",
                      "required": "false",
                      "required_arguments": []
                    },
                    {
                      "id": "send_sms",
                      "required": "false",
                      "required_arguments": [
                        {
                          "id": "message"
                        }
                      ]
                    }
                  ],
                  "enabled": "true",
                  "id": "offer",
                  "method": "PUT",
                  "name": "Предложение о работе",
                  "resulting_employer_state": {
                    "id": "offer",
                    "name": "Предложение о работе"
                  },
                  "templates": [
                    {
                      "id": "offer",
                      "name": "Приглашение на Предложение о работе",
                      "quick": "false",
                      "url": "https://api.hh.ru/message_templates/offer?topic_id=1359972474"
                    }
                  ],
                  "url": "https://api.hh.ru/negotiations/offer/1359972474"
                }
              ],
              "chat_id": "1831",
              "chat_states": {
                "response_reminder_state": {
                  "allowed": "false"
                }
              },
              "counters": {
                "messages": "0",
                "unread_messages": "0"
              },
              "created_at": "2022-05-19T18:14:13+03:00",
              "employer_state": {
                "id": "response",
                "name": "Отклик"
              },
              "has_updates": "true",
              "id": "1359972474",
              "messages_url": "https://api.hh.ru/negotiations/1359972474/messages",
              "messaging_status": "ok",
              "resume": {
                "actions": {
                  "download": {
                    "pdf": {
                      "url": "https://api.hh.ru/resumes/0123456789abcdef/download/Lndihedidxsoacg%20Fndihedhjdxkxxy%20Mndihedjsdlshsf.pdf?type=pdf&topic_id=1359972474&vacancy_id=30251545"
                    },
                    "rtf": {
                      "url": "https://api.hh.ru/resumes/0123456789abcdef/download/Lndihedidxsoacg%20Fndihedhjdxkxxy%20Mndihedjsdlshsf.rtf?type=rtf&topic_id=1359972474&vacancy_id=30251545"
                    }
                  }
                },
                "age": "55",
                "alternate_url": "https://hh.ru/resume/0123456789abcdef?t=1359972474&vacancyId=30251545",
                "area": {
                  "id": "1",
                  "name": "Москва",
                  "url": "https://api.hh.ru/areas/1"
                },
                "can_view_full_info": "true",
                "certificate": [],
                "created_at": "2022-05-19T11:19:47+03:00",
                "download": {
                  "pdf": {
                    "url": "https://api.hh.ru/resumes/0123456789abcdef/download/Lndihedidxsoacg%20Fndihedhjdxkxxy%20Mndihedjsdlshsf.pdf?type=pdf&topic_id=1359972474&vacancy_id=30251545"
                  },
                  "rtf": {
                    "url": "https://api.hh.ru/resumes/0123456789abcdef/download/Lndihedidxsoacg%20Fndihedhjdxkxxy%20Mndihedjsdlshsf.rtf?type=rtf&topic_id=1359972474&vacancy_id=30251545"
                  }
                },
                "education": {
                  "level": {
                    "id": "higher",
                    "name": "Высшее"
                  },
                  "primary": [
                    {
                      "name": "Российский государственный социальный университет, Москва",
                      "name_id": "39420",
                      "organization": "Факультет информационных технологий",
                      "organization_id": null,
                      "result": "",
                      "result_id": null,
                      "year": "2019"
                    }
                  ]
                },
                "experience": [
                  {
                    "area": {
                      "id": "1",
                      "name": "Москва",
                      "url": "https://api.hh.ru/areas/1"
                    },
                    "company": "DHL Express",
                    "company_id": "272",
                    "company_url": "http://some-kind.ru",
                    "employer": {
                      "alternate_url": "https://hh.ru/employer/272",
                      "id": "272",
                      "logo_urls": {
                        "90": "https://hh.ru/employer/logo/272"
                      },
                      "name": "DHL Express",
                      "url": "https://api.hh.ru/employers/272"
                    },
                    "end": "2022-05-19",
                    "industries": [
                      {
                        "id": "5.467",
                        "name": "Курьерская, почтовая доставка"
                      },
                      {
                        "id": "5.461",
                        "name": "Авиаперевозки"
                      },
                      {
                        "id": "5.465",
                        "name": "Транспортно-логистические комплексы, порты (воздушный, водный, железнодорожный)"
                      },
                      {
                        "id": "5.464",
                        "name": "Морские, речные перевозки"
                      },
                      {
                        "id": "5.463",
                        "name": "Железнодорожные перевозки"
                      }
                    ],
                    "industry": null,
                    "position": "Тестировщик",
                    "start": "2021-01-04"
                  }
                ],
                "favorited": "false",
                "first_name": "Иван",
                "gender": {
                  "id": "male",
                  "name": "Мужской"
                },
                "hidden_fields": [],
                "id": "0123456789abcdef",
                "last_name": "Иванов",
                "marked": "false",
                "middle_name": "Иванович",
                "negotiations_history": {
                  "url": "https://api.hh.ru/resumes/0123456789abcdef/negotiations_history"
                },
                "owner": {
                  "comments": {
                    "counters": {
                      "total": "0"
                    },
                    "url": "https://api.hh.ru/applicant_comments/54761929"
                  },
                  "id": "54761929"
                },
                "photo": null,
                "salary": {
                  "amount": "1500",
                  "currency": "USD"
                },
                "title": "Начинающий специалист",
                "total_experience": {
                  "months": "17"
                },
                "updated_at": "2022-05-20T10:49:47+03:00",
                "url": "https://api.hh.ru/resumes/0123456789abcdef?topic_id=1359972474",
                "viewed": "false"
              },
              "source": "NEGOTIATION",
              "state": {
                "id": "response",
                "name": "Отклик"
              },
              "templates": [
                {
                  "id": "interview",
                  "name": "Приглашение на Интервью",
                  "quick": "false",
                  "url": "https://api.hh.ru/message_templates/interview?topic_id=1359972474"
                },
                {
                  "id": "consider",
                  "name": "Приглашение на этап Подумать",
                  "quick": "false",
                  "url": "https://api.hh.ru/message_templates/consider?topic_id=1359972474"
                },
                {
                  "id": "invite",
                  "name": "Приглашение на Телефонное интервью",
                  "quick": "false",
                  "url": "https://api.hh.ru/message_templates/invite?topic_id=1359972474"
                },
                {
                  "id": "invite_after_response",
                  "name": "Приглашение откликнувшегося соискателя на Телефонное интервью",
                  "quick": "false",
                  "url": "https://api.hh.ru/message_templates/invite_after_response?topic_id=1359972474"
                },
                {
                  "id": "assessment_owner_tool",
                  "name": "Приглашение на Оценку (свой инструмент оценки)",
                  "quick": "false",
                  "url": "https://api.hh.ru/message_templates/assessment_owner_tool?topic_id=1359972474"
                },
                {
                  "id": "hired",
                  "name": "Приглашение на Выход на работу",
                  "quick": "false",
                  "url": "https://api.hh.ru/message_templates/hired?topic_id=1359972474"
                },
                {
                  "id": "discard_after_interview",
                  "name": "Отказ",
                  "quick": "false",
                  "url": "https://api.hh.ru/message_templates/discard_after_interview?topic_id=1359972474"
                },
                {
                  "id": "discard_after_response",
                  "name": "Отказ откликнувшемуся на вакансию соискателю",
                  "quick": "false",
                  "url": "https://api.hh.ru/message_templates/discard_after_response?topic_id=1359972474"
                },
                {
                  "id": "quick_discard_after_response",
                  "name": "Шаблон быстрого отказа на отклик",
                  "quick": "true",
                  "url": "https://api.hh.ru/message_templates/quick_discard_after_response?topic_id=1359972474"
                },
                {
                  "id": "offer",
                  "name": "Приглашение на Предложение о работе",
                  "quick": "false",
                  "url": "https://api.hh.ru/message_templates/offer?topic_id=1359972474"
                }
              ],
              "updated_at": "2022-05-19T18:14:13+03:00",
              "url": "https://api.hh.ru/negotiations/1359972474",
              "viewed_by_opponent": "true"
            }
          ],
          "ordered_by": {
            "id": "last_change_time_except_employer_inbox",
            "name": "По дате создания и активности соискателя"
          },
          "page": "0",
          "pages": "1",
          "per_page": "20"
        }
      },
      "AddEmployerManager": {
        "value": {
          "additional_phone": {
            "city": "916",
            "comment": "личный",
            "country": "7",
            "number": "4555555"
          },
          "area": {
            "id": "1"
          },
          "email": "employer@example.com",
          "first_name": "Илья",
          "is_main_contact_person": "false",
          "last_name": "Федотов",
          "manager_type": {
            "id": "manager"
          },
          "middle_name": "Игоревич",
          "permissions": [
            {
              "id": "can_create_vacancy"
            },
            {
              "id": "can_view_resume_contacts"
            }
          ],
          "phone": {
            "city": "495",
            "comment": "с 9 до 17",
            "country": "7",
            "number": "1568055"
          },
          "position": "Менеджер по подбору персонала"
        }
      },
      "VacanciesVisitors": {
        "value": {
          "found": "2",
          "hidden_on_page": "0",
          "items": [
            {
              "actions": {
                "download": {
                  "pdf": {
                    "url": "https://api.hh.ru/resumes/c1e693d00000000014000000264a64655a3036/download/TEST_RESUME_DECDHAEFEMAEN.pdf?type=pdf&vacancy_id=28"
                  },
                  "rtf": {
                    "url": "https://api.hh.ru/resumes/c1e693d00000000014000000264a64655a3036/download/TEST_RESUME_DECDHAEFEMAEN.rtf?type=rtf&vacancy_id=28"
                  }
                },
                "download_with_contact": {
                  "pdf": {
                    "url": "https://api.hh.ru/resumes/c1e693d00000000014000000264a64655a3036/download/TEST_RESUME_DECDHAEFEMAEN.pdf?type=pdf&vacancy_id=28&with_contact=77da67de52a447c3dd5b5b06dab2d8ef"
                  },
                  "rtf": {
                    "url": "https://api.hh.ru/resumes/c1e693d00000000014000000264a64655a3036/download/TEST_RESUME_DECDHAEFEMAEN.rtf?type=rtf&vacancy_id=28&with_contact=77da67de52a447c3dd5b5b06dab2d8ef"
                  }
                },
                "get_with_contact": {
                  "url": "https://api.hh.ru/resumes/c1e693d00000000014000000264a64655a3036?with_contact=77da67de52a447c3dd5b5b06dab2d8ef"
                }
              },
              "age": "56",
              "alternate_url": "https://hh.ru/resume/c1e693d00000000014000000264a64655a3036?vacancyId=28",
              "area": {
                "id": "1",
                "name": "Москва",
                "url": "https://api.hh.ru/areas/1"
              },
              "can_view_full_info": "false",
              "certificate": [],
              "created_at": "2023-03-07T14:25:42+03:00",
              "download": {
                "pdf": {
                  "url": "https://api.hh.ru/resumes/c1e693d00000000014000000264a64655a3036/download/TEST_RESUME_DECDHAEFEMAEN.pdf?type=pdf&vacancy_id=28"
                },
                "rtf": {
                  "url": "https://api.hh.ru/resumes/c1e693d00000000014000000264a64655a3036/download/TEST_RESUME_DECDHAEFEMAEN.rtf?type=rtf&vacancy_id=28"
                }
              },
              "education": {
                "level": {
                  "id": "higher",
                  "name": "Высшее"
                },
                "primary": [
                  {
                    "name": "МАИ",
                    "name_id": null,
                    "organization": "Аэрокосмический",
                    "organization_id": null,
                    "result": "Архитектура, магистр архитектуры",
                    "result_id": null,
                    "year": "2020"
                  }
                ]
              },
              "experience": [
                {
                  "area": {
                    "id": "1",
                    "name": "Москва",
                    "url": "https://api.hh.ru/areas/1"
                  },
                  "company": "DHL Express",
                  "company_id": "2",
                  "company_url": "http://some-kind.ru",
                  "employer": null,
                  "end": "2023-03-07",
                  "industries": [
                    {
                      "id": "19.623",
                      "name": "Столярно-строительные изделия (продвижение, оптовая торговля)"
                    },
                    {
                      "id": "52.651",
                      "name": "Архив, библиотека, искусствоведение"
                    }
                  ],
                  "industry": {
                    "id": "52",
                    "name": "Искусство, культура"
                  },
                  "position": "Тестировщик",
                  "start": "2021-10-23"
                }
              ],
              "favorited": "false",
              "first_name": null,
              "gender": {
                "id": "male",
                "name": "Мужской"
              },
              "hidden_fields": [],
              "id": "c1e693d00000000014000000264a64655a3036",
              "last_name": null,
              "marked": "false",
              "middle_name": null,
              "negotiations_history": {
                "url": "https://api.hh.ru/resumes/c1e693d00000000014000000264a64655a3036/negotiations_history"
              },
              "owner": {
                "comments": {
                  "counters": {
                    "total": "0"
                  },
                  "url": "https://api.hh.ru/applicant_comments/54751648"
                },
                "id": "54751648"
              },
              "photo": null,
              "platform": {
                "id": "headhunter"
              },
              "salary": {
                "amount": "1500",
                "currency": "USD"
              },
              "title": "TEST_RESUME_DECDHAEFEMAEN",
              "total_experience": {
                "months": "17"
              },
              "updated_at": "2023-03-07T14:25:42+03:00",
              "url": "https://api.hh.ru/resumes/c1e693d00000000014000000264a64655a3036",
              "viewed": "false"
            },
            {
              "actions": {
                "download": {
                  "pdf": {
                    "url": "https://api.hh.ru/resumes/414fa29f00000000130000002641686c723935/download/TEST_RESUME_DEAJCCHYGGWZJ.pdf?type=pdf&vacancy_id=28"
                  },
                  "rtf": {
                    "url": "https://api.hh.ru/resumes/414fa29f00000000130000002641686c723935/download/TEST_RESUME_DEAJCCHYGGWZJ.rtf?type=rtf&vacancy_id=28"
                  }
                },
                "download_with_contact": {
                  "pdf": {
                    "url": "https://api.hh.ru/resumes/414fa29f00000000130000002641686c723935/download/TEST_RESUME_DEAJCCHYGGWZJ.pdf?type=pdf&vacancy_id=28&with_contact=80ffa749334f07f12311cc9f9034a7cb"
                  },
                  "rtf": {
                    "url": "https://api.hh.ru/resumes/414fa29f00000000130000002641686c723935/download/TEST_RESUME_DEAJCCHYGGWZJ.rtf?type=rtf&vacancy_id=28&with_contact=80ffa749334f07f12311cc9f9034a7cb"
                  }
                },
                "get_with_contact": {
                  "url": "https://api.hh.ru/resumes/414fa29f00000000130000002641686c723935?with_contact=80ffa749334f07f12311cc9f9034a7cb"
                }
              },
              "age": "56",
              "alternate_url": "https://hh.ru/resume/414fa29f00000000130000002641686c723935?vacancyId=28",
              "area": {
                "id": "1",
                "name": "Москва",
                "url": "https://api.hh.ru/areas/1"
              },
              "can_view_full_info": "false",
              "certificate": [],
              "created_at": "2023-03-07T14:25:40+03:00",
              "download": {
                "pdf": {
                  "url": "https://api.hh.ru/resumes/414fa29f00000000130000002641686c723935/download/TEST_RESUME_DEAJCCHYGGWZJ.pdf?type=pdf&vacancy_id=28"
                },
                "rtf": {
                  "url": "https://api.hh.ru/resumes/414fa29f00000000130000002641686c723935/download/TEST_RESUME_DEAJCCHYGGWZJ.rtf?type=rtf&vacancy_id=28"
                }
              },
              "education": {
                "level": {
                  "id": "higher",
                  "name": "Высшее"
                },
                "primary": [
                  {
                    "name": "МАИ",
                    "name_id": null,
                    "organization": "Аэрокосмический",
                    "organization_id": null,
                    "result": "Архитектура, магистр архитектуры",
                    "result_id": null,
                    "year": "2020"
                  }
                ]
              },
              "experience": [
                {
                  "area": {
                    "id": "1",
                    "name": "Москва",
                    "url": "https://api.hh.ru/areas/1"
                  },
                  "company": "DHL Express",
                  "company_id": "2",
                  "company_url": "http://some-kind.ru",
                  "employer": null,
                  "end": "2023-03-07",
                  "industries": [
                    {
                      "id": "19.623",
                      "name": "Столярно-строительные изделия (продвижение, оптовая торговля)"
                    },
                    {
                      "id": "52.651",
                      "name": "Архив, библиотека, искусствоведение"
                    }
                  ],
                  "industry": {
                    "id": "52",
                    "name": "Искусство, культура"
                  },
                  "position": "Тестировщик",
                  "start": "2021-10-23"
                }
              ],
              "favorited": "false",
              "first_name": null,
              "gender": {
                "id": "male",
                "name": "Мужской"
              },
              "hidden_fields": [],
              "id": "414fa29f00000000130000002641686c723935",
              "last_name": null,
              "marked": "false",
              "middle_name": null,
              "negotiations_history": {
                "url": "https://api.hh.ru/resumes/414fa29f00000000130000002641686c723935/negotiations_history"
              },
              "owner": {
                "comments": {
                  "counters": {
                    "total": "0"
                  },
                  "url": "https://api.hh.ru/applicant_comments/54751647"
                },
                "id": "54751647"
              },
              "photo": null,
              "platform": {
                "id": "headhunter"
              },
              "salary": {
                "amount": "1500",
                "currency": "USD"
              },
              "title": "TEST_RESUME_DEAJCCHYGGWZJ",
              "total_experience": {
                "months": "17"
              },
              "updated_at": "2023-03-07T14:25:40+03:00",
              "url": "https://api.hh.ru/resumes/414fa29f00000000130000002641686c723935",
              "viewed": "false"
            }
          ],
          "page": "0",
          "pages": "1",
          "per_page": "20"
        }
      },
      "EmployerManagers": {
        "value": {
          "found": "1",
          "items": [
            {
              "additional_phone": {
                "city": "916",
                "comment": "личный",
                "country": "7",
                "number": "4555555"
              },
              "area": {
                "id": "1",
                "name": "Москва",
                "url": "https://api.hh.ru/areas/1"
              },
              "email": "employer@example.com",
              "first_name": "Иван",
              "full_name": "Иванов Иван Иванович",
              "id": "1507922",
              "is_main_contact_person": "false",
              "last_name": "Иванов",
              "middle_name": "Иванович",
              "phone": {
                "city": "495",
                "comment": "с 9 до 17",
                "country": "7",
                "number": "1568055"
              },
              "position": "Менеджер по подбору персонала",
              "vacancies_count": "0"
            }
          ],
          "page": "0",
          "pages": "1",
          "per_page": "20"
        }
      },
      "LocalesResumeLocales": {
        "value": [
          {
            "id": "RU",
            "name": "Русский"
          },
          {
            "id": "EN",
            "name": "English"
          }
        ]
      },
      "AreasAreaItem": {
        "value": {
          "areas": [
            {
              "areas": [],
              "id": "6251",
              "name": "Абай",
              "parent_id": "40"
            }
          ],
          "id": "40",
          "name": "Казахстан",
          "parent_id": null
        }
      },
      "NegotiationsNegotiationItem": {
        "value": {
          "created_at": "2013-10-05T19:51:38+04:00",
          "decline_allowed": "true",
          "has_updates": "true",
          "hidden": "false",
          "id": "123",
          "messaging_status": "ok",
          "phone_calls": {
            "items": [
              {
                "creation_time": "2022-03-04T16:39:58.857853Z",
                "duration_seconds": null,
                "id": "123",
                "last_change_time": null,
                "status": "call_in_progress"
              },
              {
                "creation_time": "2022-03-01T16:39:58.857853Z",
                "duration_seconds": "120",
                "id": "111",
                "last_change_time": "2022-03-01T16:41:58.857853Z",
                "status": "call_ended"
              }
            ],
            "picked_up_phone_by_opponent": "true"
          },
          "source": "NEGOTIATION",
          "state": {
            "id": "invitation",
            "name": "Приглашение"
          },
          "updated_at": "2013-10-07T18:30:57+04:00",
          "url": "https://api.hh.ru/negotiations/123",
          "viewed_by_opponent": "true"
        }
      },
      "ApplicantCommentsApplicantCommentsListExample": {
        "value": {
          "found": "2",
          "items": [
            {
              "access_type": {
                "id": "coworkers",
                "name": "Виден мне и моим коллегам"
              },
              "author": {
                "full_name": "Иванов Иван Иванович"
              },
              "created_at": "2015-08-27T10:19:55+03:00",
              "id": "123456",
              "is_mine": "false",
              "text": "обратить внимание на данного кандидата\nсрочно!"
            },
            {
              "access_type": {
                "id": "owner",
                "name": "Виден только мне"
              },
              "author": {
                "full_name": "Иванова Мария Ивановна"
              },
              "created_at": "2015-08-27T10:30:14+03:00",
              "id": "123654",
              "is_mine": "true",
              "text": "не считаю нужным"
            }
          ],
          "page": "0",
          "pages": "1",
          "per_page": "20"
        }
      },
      "EmployersEmployerDepartments": {
        "value": {
          "items": [
            {
              "id": "18320489-18320489-dept1",
              "name": "DEPT#1"
            },
            {
              "id": "18320489-18320489-dept2",
              "name": "DEPT#2"
            }
          ]
        }
      },
      "DictionariesSkills": {
        "value": {
          "items": [
            {
              "id": "2716",
              "text": "Системы тепло - и холодоснабжения"
            },
            {
              "id": "3019",
              "text": "Холодный цех"
            }
          ]
        }
      },
      "VacanciesVacancy": {
        "value": {
          "accept_handicapped": "false",
          "accept_incomplete_resumes": "false",
          "accept_kids": "false",
          "accept_temporary": "false",
          "address": {
            "building": "9с10",
            "city": "Москва",
            "description": "На проходной потребуется паспорт",
            "lat": "55.807794",
            "lng": "37.638699",
            "metro_stations": [
              {
                "lat": "55.807794",
                "line_id": "6",
                "line_name": "Калужско-Рижская",
                "lng": "37.638699",
                "station_id": "6.8",
                "station_name": "Алексеевская"
              }
            ],
            "street": "улица Годовикова"
          },
          "allow_messages": "true",
          "alternate_url": "https://hh.ru/vacancy/8331228",
          "apply_alternate_url": "https://hh.ru/applicant/vacancy_response?vacancyId=8331228",
          "approved": "false",
          "archived": "false",
          "area": {
            "id": "1",
            "name": "Москва",
            "url": "https://api.hh.ru/areas/1"
          },
          "billing_type": {
            "id": "standard",
            "name": "Стандарт"
          },
          "branded_description": "<style>...</style><div>...</div><script></script>",
          "branded_template": {
            "id": "1",
            "name": "test"
          },
          "can_upgrade_billing_type": "true",
          "code": "HRR-3487",
          "contacts": {
            "email": "user@example.com",
            "name": "Имя",
            "phones": [
              {
                "city": "985",
                "comment": null,
                "country": "7",
                "number": "000-00-00"
              }
            ]
          },
          "created_at": "2013-07-08T16:17:21+04:00",
          "department": {
            "id": "HH-1455-TECH",
            "name": "HeadHunter::Технический департамент"
          },
          "description": "Работа хороша",
          "driver_license_types": [
            {
              "id": "A"
            },
            {
              "id": "B"
            }
          ],
          "employer": {
            "alternate_url": "https://hh.ru/employer/1455",
            "blacklisted": "false",
            "id": "1455",
            "logo_urls": {
              "90": "https://hh.ru/employer-logo/289027.png",
              "240": "https://hh.ru/employer-logo/289169.png",
              "original": "https://hh.ru/file/2352807.png"
            },
            "name": "HeadHunter",
            "trusted": "true",
            "url": "https://api.hh.ru/employers/1455"
          },
          "employment": {
            "id": "full",
            "name": "Полная занятость"
          },
          "experience": {
            "id": "between1And3",
            "name": "От 1 года до 3 лет"
          },
          "expires_at": "2013-08-08T16:17:21+04:00",
          "has_test": "true",
          "hidden": "false",
          "id": "8331228",
          "initial_created_at": "2013-06-08T16:17:21+04:00",
          "insider_interview": {
            "id": "12345",
            "url": "https://hh.ru/interview/12345?employerId=777"
          },
          "key_skills": [
            {
              "name": "Прием посетителей"
            },
            {
              "name": "Первичный документооборот"
            }
          ],
          "languages": [
            {
              "id": "eng",
              "level": {
                "id": "b2",
                "name": "B2 — Средне-продвинутый"
              },
              "name": "Английский"
            }
          ],
          "manager": {
            "id": "1"
          },
          "name": "Секретарь",
          "premium": "true",
          "previous_id": "123456",
          "professional_roles": [
            {
              "id": "96",
              "name": "Программист, разработчик"
            }
          ],
          "published_at": "2013-07-08T16:17:21+04:00",
          "response_letter_required": "true",
          "response_notifications": "true",
          "response_url": null,
          "salary": {
            "currency": "RUR",
            "from": "30000",
            "gross": "true",
            "to": null
          },
          "schedule": {
            "id": "fullDay",
            "name": "Полный день"
          },
          "test": {
            "required": "false"
          },
          "type": {
            "id": "open",
            "name": "Открытая"
          },
          "video_vacancy": {
            "cover_picture": {
              "resized_height": "444",
              "resized_path": "https://img.hhcdn.ru/branding-pictures-original/2229739.png",
              "resized_width": "788"
            },
            "video_url": "https://host/video/123"
          },
          "working_days": [
            {
              "id": "only_saturday_and_sunday",
              "name": "Работа только по сб и вс"
            }
          ],
          "working_time_intervals": [
            {
              "id": "from_four_to_six_hours_in_a_day",
              "name": "Можно работать сменами по 4-6 часов в день"
            }
          ],
          "working_time_modes": [
            {
              "id": "start_after_sixteen",
              "name": "Можно начинать работать после 16-00"
            }
          ]
        }
      },
      "ResumeStatusReadiness": {
        "value": {
          "blocked": "false",
          "can_publish_or_update": "false",
          "finished": "false",
          "moderation_note": [
            {
              "id": "bad",
              "name": "Резюме составлено небрежно."
            },
            {
              "field": "education",
              "id": "block_no_education_place_or_date",
              "name": "Отсутствуют данные об учебном заведении и дате его окончания."
            }
          ],
          "progress": {
            "mandatory": [
              {
                "id": "citizenship",
                "name": "Гражданство"
              },
              {
                "id": "language",
                "name": "Язык"
              },
              {
                "id": "area",
                "name": "Город проживания"
              },
              {
                "id": "skills",
                "name": "Ключевые навыки"
              },
              {
                "id": "contact",
                "name": "Контакты"
              },
              {
                "id": "education",
                "name": "Образование"
              }
            ],
            "percentage": "42",
            "recommended": [
              {
                "id": "salary",
                "name": "Заработная плата"
              },
              {
                "id": "middle_name",
                "name": "Отчество"
              },
              {
                "id": "work_ticket",
                "name": "Разрешение на работу"
              },
              {
                "id": "site",
                "name": "Сайт"
              },
              {
                "id": "recommendation",
                "name": "Рекомендации"
              },
              {
                "id": "birth_date",
                "name": "Дата рождения"
              }
            ]
          },
          "publish_url": "https://api.hh.ru/resumes/12345678901234567890123456789012abcdef/publish",
          "status": {
            "id": "not_published",
            "name": "не опубликовано"
          }
        }
      },
      "ArtifactsArtifactUpload": {
        "value": {
          "id": "123456",
          "medium": null,
          "small": null,
          "state": {
            "id": "processing",
            "name": "processing"
          }
        }
      },
      "VacanciesVacancyProlongateAvailable": {
        "value": {
          "actions": [
            {
              "enabled": "true",
              "id": "prolongate",
              "method": "POST",
              "url": "https://api.hh.ru/vacancies/123456789/prolongate"
            }
          ],
          "expires_at": "2015-11-19T17:10:48+03:00",
          "id": "123456789"
        }
      },
      "DictionariesSalaryStatisticsProfessionalAreas": {
        "value": [
          {
            "id": "1030000",
            "name": "Административная поддержка",
            "specializations": [
              {
                "description": "Организация социальной работы с сотрудниками, распределение фонда материальной и социальной помощи",
                "id": "1030015",
                "name": "Архив"
              }
            ]
          }
        ]
      },
      "ResumeResumeViewApplicant": {
        "value": {
          "_progress": {
            "mandatory": [],
            "percentage": "55",
            "recommended": [
              "birth_date",
              "portfolio",
              "photo",
              "driver_license_types",
              "district",
              "hidden_fields",
              "work_ticket",
              "education",
              "has_vehicle",
              "salary",
              "skill_set",
              "recommendation",
              "middle_name",
              "metro",
              "site"
            ]
          },
          "access": {
            "type": {
              "id": "clients",
              "name": "видно всем компаниям, зарегистрированным на HeadHunter"
            }
          },
          "actions": {
            "download": {
              "pdf": {
                "url": "https://api.hh.ru/resumes/ca9fb415848/download/pdf-file.pdf?type=pdf"
              },
              "rtf": {
                "url": "https://api.hh.ru/resumes/ca9fb415848/download/rtf-file.rtf?type=rtf"
              }
            }
          },
          "age": null,
          "alternate_url": "https://hh.ru/resume/ca9fb415848",
          "area": {
            "id": "1",
            "name": "Москва",
            "url": "https://api.hh.ru/areas/1"
          },
          "birth_date": null,
          "blocked": "false",
          "business_trip_readiness": {
            "id": "never",
            "name": "не готов к командировкам"
          },
          "can_publish_or_update": "false",
          "certificate": [],
          "citizenship": [
            {
              "id": "113",
              "name": "Россия",
              "url": "https://api.hh.ru/areas/113"
            }
          ],
          "contact": [
            {
              "comment": "Звонить после 12",
              "need_verification": "true",
              "preferred": "false",
              "type": {
                "id": "cell",
                "name": "Мобильный телефон"
              },
              "value": {
                "city": "495",
                "country": "7",
                "formatted": "+7 (495) 808-12-51",
                "number": "8081251"
              },
              "verified": "false"
            },
            {
              "preferred": "true",
              "type": {
                "id": "email",
                "name": "Эл. почта"
              },
              "value": "my-email@example.com"
            }
          ],
          "created_at": "2023-05-25T14:19:02+03:00",
          "creds": {
            "answers": {
              "27": {
                "answer_group": "positive",
                "answer_id": "27",
                "ask_questions_after": [],
                "description": null,
                "positive_title": "Есть опыт работы поваром, пекарем или кондитером",
                "skip_at_result": "false",
                "title": "Да"
              },
              "28": {
                "answer_group": "negative",
                "answer_id": "28",
                "ask_questions_after": [],
                "description": null,
                "positive_title": "Нет опыта работы поваром, пекарем или кондитером",
                "skip_at_result": "true",
                "title": "Нет опыта"
              },
              "29": {
                "answer_group": "positive",
                "answer_id": "29",
                "ask_questions_after": [],
                "description": null,
                "positive_title": "Есть кулинарное образование",
                "skip_at_result": "false",
                "title": "Да, есть"
              },
              "30": {
                "answer_group": "negative",
                "answer_id": "30",
                "ask_questions_after": [],
                "description": null,
                "positive_title": "Нет кулинарного образования",
                "skip_at_result": "true",
                "title": "Нет образования"
              }
            },
            "question_to_answer_map": {
              "14": [
                "27"
              ]
            },
            "questions": {
              "14": {
                "description": null,
                "is_active": "true",
                "possible_answers": [
                  "27",
                  "28"
                ],
                "question_id": "14",
                "question_title": "Работали раньше поваром, пекарем или кондитером?",
                "question_type": "single_choice",
                "required": "true",
                "skip_title_at_view": "true",
                "view_title": null
              },
              "15": {
                "description": null,
                "is_active": "true",
                "possible_answers": [
                  "29",
                  "30"
                ],
                "question_id": "15",
                "question_title": "У вас есть кулинарное образование?",
                "question_type": "single_choice",
                "required": "true",
                "skip_title_at_view": "true",
                "view_title": null
              }
            }
          },
          "download": {
            "pdf": {
              "url": "https://api.hh.ru/resumes/ca9fb415848/download/pdf-file.pdf?type=pdf"
            },
            "rtf": {
              "url": "https://api.hh.ru/resumes/ca9fb415848/download/rtf-file.rtf?type=rtf"
            }
          },
          "driver_license_types": [],
          "education": {
            "additional": [],
            "attestation": [],
            "elementary": [],
            "level": {
              "id": "master",
              "name": "Магистр"
            },
            "primary": [
              {
                "name": "testUniversity",
                "name_id": null,
                "organization": "testFaculty",
                "organization_id": null,
                "result": "testSpeciality",
                "result_id": null,
                "year": "1988"
              }
            ]
          },
          "employment": {
            "id": "full",
            "name": "Полная занятость"
          },
          "employments": [
            {
              "id": "full",
              "name": "Полная занятость"
            }
          ],
          "experience": [
            {
              "area": {
                "id": "1",
                "name": "Москва",
                "url": "https://api.hh.ru/areas/1"
              },
              "company": "Компания",
              "company_id": null,
              "company_url": "http://url.ru",
              "description": "Руководил отделом",
              "employer": null,
              "end": "2012-02-06",
              "industries": [],
              "industry": {
                "id": "1",
                "name": "Банки/кредиты/инвестиции/лизинг"
              },
              "position": "Директор",
              "start": "2011-01-02"
            }
          ],
          "finished": "true",
          "first_name": "Иван",
          "gender": {
            "id": "male",
            "name": "Мужской"
          },
          "has_vehicle": null,
          "hidden_fields": [],
          "id": "ca9fb415848",
          "language": [
            {
              "id": "chv",
              "level": {
                "id": "a1",
                "name": "A1 — Начальный"
              },
              "name": "Чувашский"
            }
          ],
          "last_name": "Иванов",
          "metro": null,
          "middle_name": null,
          "moderation_note": [],
          "new_views": "0",
          "next_publish_at": "2023-05-25T18:19:03+03:00",
          "paid_services": [
            {
              "active": "false",
              "id": "resume_autoupdating",
              "name": "Автоподнятие резюме"
            },
            {
              "active": "false",
              "id": "resume_marked",
              "name": "Яркое резюме"
            }
          ],
          "photo": null,
          "platform": {
            "id": "headhunter"
          },
          "portfolio": [],
          "professional_roles": [
            {
              "id": "124",
              "name": "Тестировщик"
            }
          ],
          "progress": {
            "mandatory": [],
            "percentage": "55",
            "recommended": [
              {
                "id": "birth_date",
                "name": "Дата рождения"
              },
              {
                "id": "portfolio",
                "name": "Портфолио"
              },
              {
                "id": "photo",
                "name": "Фото"
              },
              {
                "id": "driver_license_types",
                "name": "Категория водительских прав"
              },
              {
                "id": "district",
                "name": "Район проживания"
              },
              {
                "id": "hidden_fields",
                "name": "Список скрытых полей"
              },
              {
                "id": "work_ticket",
                "name": "Разрешение на работу"
              },
              {
                "id": "education",
                "name": "Образование"
              },
              {
                "id": "has_vehicle",
                "name": "Наличие автомобиля"
              },
              {
                "id": "salary",
                "name": "Зарплата"
              },
              {
                "id": "skill_set",
                "name": "Ключевые навыки"
              },
              {
                "id": "recommendation",
                "name": "Рекомендации"
              },
              {
                "id": "middle_name",
                "name": "Отчество"
              },
              {
                "id": "metro",
                "name": "Ближайшая станция метро"
              },
              {
                "id": "site",
                "name": "Дополнительные способы связи"
              }
            ]
          },
          "publish_url": "https://api.hh.ru/resumes/ca9fb415848/publish",
          "recommendation": [],
          "relocation": {
            "area": [],
            "district": [],
            "type": {
              "id": "no_relocation",
              "name": "не готов к переезду"
            }
          },
          "resume_locale": {
            "id": "RU",
            "name": "Русский"
          },
          "salary": {
            "amount": "10000",
            "currency": "USD"
          },
          "schedule": {
            "id": "fullDay",
            "name": "Полный день"
          },
          "schedules": [
            {
              "id": "fullDay",
              "name": "Полный день"
            }
          ],
          "site": [],
          "skill_set": [],
          "skills": "Руководство большой командой",
          "status": {
            "id": "published",
            "name": "опубликовано"
          },
          "tags": [
            {
              "id": "EXPERT_IS_WORKING"
            }
          ],
          "title": "API Test Resume",
          "total_experience": {
            "months": "14"
          },
          "total_views": "0",
          "travel_time": {
            "id": "any",
            "name": "Не имеет значения"
          },
          "updated_at": "2023-05-25T14:19:03+03:00",
          "views_url": "https://api.hh.ru/resumes/ca9fb415848/views",
          "work_ticket": []
        }
      },
      "VacanciesVacancies": {
        "value": {
          "arguments": [
            {
              "argument": "area",
              "cluster_group": {
                "id": "area",
                "name": "Регион"
              },
              "disable_url": "https://...",
              "value": "1",
              "value_description": "Москва"
            },
            {
              "argument": "area",
              "cluster_group": {
                "id": "area",
                "name": "Регион"
              },
              "disable_url": "https://...",
              "value": "2",
              "value_description": "Санкт-Петербург"
            },
            {
              "argument": "text",
              "cluster_group": null,
              "disable_url": "https://...",
              "value": "менеджер по продажам",
              "value_description": null
            },
            {
              "argument": "search_field",
              "cluster_group": null,
              "disable_url": "https://...",
              "value": "name",
              "value_description": "в названии вакансии"
            },
            {
              "argument": "experience",
              "cluster_group": {
                "id": "experience",
                "name": "Опыт работы"
              },
              "disable_url": "https://...",
              "value": "between3And6",
              "value_description": "От 3 до 6 лет"
            },
            {
              "argument": "employment",
              "cluster_group": {
                "id": "employment",
                "name": "Тип занятости"
              },
              "disable_url": "https://...",
              "value": "full",
              "value_description": "Полная занятость"
            },
            {
              "argument": "schedule",
              "cluster_group": {
                "id": "schedule",
                "name": "График работы"
              },
              "disable_url": "https://...",
              "value": "fullDay",
              "value_description": "Полный день"
            },
            {
              "argument": "metro",
              "cluster_group": {
                "id": "metro",
                "name": "Метро"
              },
              "disable_url": "https://...",
              "hex_color": "13703a",
              "metro_type": "station",
              "value": "2.133",
              "value_description": "Сокол"
            },
            {
              "argument": "industry",
              "cluster_group": {
                "id": "industry",
                "name": "Отрасль компании"
              },
              "disable_url": "https://...",
              "value": "51",
              "value_description": "ЖКХ"
            },
            {
              "argument": "industry",
              "cluster_group": {
                "id": "sub_industry",
                "name": "Сфера компании"
              },
              "disable_url": "https://...",
              "value": "51.675",
              "value_description": "Энергосбережение"
            },
            {
              "argument": "label",
              "cluster_group": {
                "id": "label",
                "name": "Исключение"
              },
              "disable_url": "https://...",
              "value": "not_from_agency",
              "value_description": "Без вакансий агентств"
            },
            {
              "argument": "currency",
              "cluster_group": null,
              "disable_url": "https://...",
              "value": "USD",
              "value_description": null
            },
            {
              "argument": "only_with_salary",
              "cluster_group": {
                "id": "salary",
                "name": "Зарплата"
              },
              "disable_url": "https://...",
              "value": "true",
              "value_description": "Указана зарплата"
            },
            {
              "argument": "salary",
              "cluster_group": {
                "id": "salary",
                "name": "Зарплата"
              },
              "disable_url": "https://...",
              "value": "1500",
              "value_description": "от 1500 USD"
            },
            {
              "argument": "bottom_lat",
              "cluster_group": null,
              "disable_url": "https://...",
              "value": "55.58",
              "value_description": null
            },
            {
              "argument": "left_lng",
              "cluster_group": null,
              "disable_url": "https://...",
              "value": "37.52",
              "value_description": null
            },
            {
              "argument": "top_lat",
              "cluster_group": null,
              "disable_url": "https://...",
              "value": "55.74",
              "value_description": null
            },
            {
              "argument": "right_lng",
              "cluster_group": null,
              "disable_url": "https://...",
              "value": "37.86",
              "value_description": null
            },
            {
              "argument": "date_from",
              "cluster_group": null,
              "disable_url": "https://...",
              "value": "2017-02-01",
              "value_description": null
            },
            {
              "argument": "date_to",
              "cluster_group": null,
              "disable_url": "https://...",
              "value": "2017-02-10",
              "value_description": null
            },
            {
              "argument": "order_by",
              "cluster_group": null,
              "disable_url": "https://...",
              "value": "salary_desc",
              "value_description": "По убыванию зарплат"
            },
            {
              "argument": "sort_point_lat",
              "cluster_group": null,
              "disable_url": "https://...",
              "value": "55.74",
              "value_description": null
            },
            {
              "argument": "sort_point_lng",
              "cluster_group": null,
              "disable_url": "https://...",
              "value": "37.86",
              "value_description": null
            },
            {
              "argument": "period",
              "cluster_group": null,
              "disable_url": "https://...",
              "value": "7",
              "value_description": "За неделю"
            },
            {
              "argument": "employer_id",
              "cluster_group": null,
              "disable_url": "https://...",
              "value": "1455",
              "value_description": "HeadHunter"
            },
            {
              "argument": "search_period",
              "cluster_group": null,
              "disable_url": "https://...",
              "value": "7",
              "value_description": "За неделю"
            },
            {
              "argument": "no_magic",
              "cluster_group": null,
              "disable_url": "https://...",
              "value": "true",
              "value_description": null
            },
            {
              "argument": "host",
              "cluster_group": null,
              "disable_url": "https://...",
              "value": "hh.kz",
              "value_description": null
            },
            {
              "argument": "per_page",
              "cluster_group": null,
              "disable_url": "https://...",
              "value": "10",
              "value_description": null
            },
            {
              "argument": "page",
              "cluster_group": null,
              "disable_url": "https://...",
              "value": "0",
              "value_description": null
            },
            {
              "argument": "professional_role",
              "cluster_group": {
                "id": "professional_role",
                "name": "Профессиональная роль"
              },
              "disable_url": "https://...",
              "value": "90",
              "value_description": "Охранник"
            }
          ],
          "clusters": null,
          "fixes": null,
          "found": "13",
          "items": [
            {
              "accept_incomplete_resumes": "false",
              "address": {
                "building": "9с10",
                "city": "Москва",
                "description": "На проходной потребуется паспорт",
                "lat": "55.807794",
                "lng": "37.638699",
                "metro_stations": [
                  {
                    "lat": "55.807794",
                    "line_id": "6",
                    "line_name": "Калужско-Рижская",
                    "lng": "37.638699",
                    "station_id": "6.8",
                    "station_name": "Алексеевская"
                  }
                ],
                "street": "улица Годовикова"
              },
              "alternate_url": "https://hh.ru/vacancy/8331228",
              "apply_alternate_url": "https://hh.ru/applicant/vacancy_response?vacancyId=8331228",
              "area": {
                "id": "1",
                "name": "Москва",
                "url": "https://api.hh.ru/areas/1"
              },
              "brand_snippet": {
                "background": {
                  "color": null,
                  "gradient": {
                    "angle": "45",
                    "color_list": [
                      {
                        "color": "#FF0000",
                        "position": "10"
                      },
                      {
                        "color": "#FA0000",
                        "position": "9"
                      }
                    ]
                  }
                },
                "logo": "https://hhcdn.ru/00001.png",
                "logo_xs": "https://hhcdn.ru/00002.png",
                "picture": "https://hhcdn.ru/00003.png",
                "picture_xs": "https://hhcdn.ru/00004.png"
              },
              "branding": {
                "tariff": "BASIC",
                "type": "CONSTRUCTOR"
              },
              "contacts": {
                "email": "user@example.com",
                "name": "Имя",
                "phones": [
                  {
                    "city": "985",
                    "comment": null,
                    "country": "7",
                    "number": "000-00-00"
                  }
                ]
              },
              "counters": {
                "responses": "0"
              },
              "department": {
                "id": "HH-1455-TECH",
                "name": "HeadHunter::Технический департамент"
              },
              "employer": {
                "accredited_it_employer": "false",
                "alternate_url": "https://hh.ru/employer/1455",
                "id": "1455",
                "logo_urls": {
                  "90": "https://hh.ru/employer-logo/289027.png",
                  "240": "https://hh.ru/employer-logo/289169.png",
                  "original": "https://hh.ru/file/2352807.png"
                },
                "name": "HeadHunter",
                "trusted": "true",
                "url": "https://api.hh.ru/employers/1455"
              },
              "has_test": "true",
              "id": "8331228",
              "insider_interview": {
                "id": "12345",
                "url": "https://hh.ru/interview/12345?employerId=777"
              },
              "name": "Секретарь",
              "personal_data_resale": "false",
              "professional_roles": [
                {
                  "id": "90",
                  "name": "Охранник"
                }
              ],
              "published_at": "2013-07-08T16:17:21+04:00",
              "relations": [],
              "response_letter_required": "true",
              "response_url": null,
              "salary": {
                "currency": "RUR",
                "from": "30000",
                "gross": "true",
                "to": null
              },
              "schedule": {
                "id": "fullDay",
                "name": "Полный день"
              },
              "show_logo_in_search": "true",
              "snippet": {
                "requirement": "Высшее образование. Опыт работы в качестве <highlighttext>секретаря</highlighttext>, офис-менеджера. Знание делопроизводства, документооборота. Коммуникативные навыки.",
                "responsibility": "Документооборот (регистрация, отправка, контроль исполнения писем, ведение протоколов, отчетность). Распределение корреспонденции. Прием и распределение телефонных звонков."
              },
              "sort_point_distance": "226.001293",
              "type": {
                "id": "open",
                "name": "Открытая"
              },
              "url": "https://api.hh.ru/vacancies/8331228"
            }
          ],
          "page": "0",
          "pages": "13",
          "per_page": "1",
          "suggests": null
        }
      },
      "ResumesResumeViewHistory": {
        "value": {
          "found": "1",
          "items": [
            {
              "created_at": "2014-02-05T19:05:58+04:00",
              "employer": {
                "alternate_url": "https://hh.ru/employer/1455",
                "id": "1455",
                "logo_urls": {
                  "90": "https://hh.ru/employer/logo/1455"
                },
                "name": "HeadHunter",
                "url": "https://api.hh.ru/employers/1455",
                "vacancies_url": "https://api.hh.ru/vacancies?employer_id=1455"
              },
              "viewed": "true"
            }
          ],
          "page": "0",
          "pages": "1",
          "per_page": "20",
          "resume": {
            "alternate_url": "https://hh.ru/resumes/555aaaabbbfrfs123",
            "id": "555aaaabbbfrfs123",
            "title": "Консультант",
            "url": "https://api.hh.ru/resumes/555aaaabbbfrfs123"
          }
        }
      },
      "ArtifactsPortfolioDescription": {
        "value": {
          "description": "Описание портфолио"
        }
      },
      "MetroCityMetro": {
        "value": {
          "id": "1",
          "lines": [
            {
              "hex_color": "339999",
              "id": "11",
              "name": "Каховская",
              "stations": [
                {
                  "id": "11.46",
                  "lat": "55.654327",
                  "line": {
                    "hex_color": "88CDCF",
                    "id": "11",
                    "name": "Каховская"
                  },
                  "lng": "37.647705",
                  "name": "Каширская",
                  "order": "1"
                }
              ]
            }
          ],
          "name": "Москва"
        }
      },
      "VacanciesVacancyConditions": {
        "value": {
          "accept_handicapped": {
            "required": "false"
          },
          "accept_incomplete_resumes": {
            "required": "false"
          },
          "accept_kids": {
            "required": "false"
          },
          "accept_temporary": {
            "required": "false"
          },
          "address": {
            "fields": {
              "show_metro_only": {
                "required": "false"
              }
            },
            "required": "false"
          },
          "allow_messages": {
            "required": "false"
          },
          "area": {
            "required": "true"
          },
          "billing_type": {
            "required": "true"
          },
          "branded_template": {
            "required": "false"
          },
          "code": {
            "max_length": "50",
            "min_length": "0",
            "required": "false"
          },
          "contacts": {
            "fields": {
              "email": {
                "max_length": "255",
                "min_length": "0",
                "required": "false"
              },
              "name": {
                "max_length": "255",
                "min_length": "0",
                "required": "true"
              },
              "phones": {
                "fields": {
                  "city": {
                    "max_length": "6",
                    "min_length": "1",
                    "regexp": "^\\d{0,6}$",
                    "required": "true"
                  },
                  "comment": {
                    "max_length": "255",
                    "min_length": "0",
                    "required": "false"
                  },
                  "country": {
                    "max_length": "6",
                    "min_length": "1",
                    "regexp": "^\\+?\\d{0,5}$",
                    "required": "true"
                  },
                  "formatted": {
                    "max_length": "43",
                    "min_length": "6",
                    "regexp": "^\\d{6,43}$",
                    "required": "false"
                  },
                  "number": {
                    "max_length": "32",
                    "min_length": "4",
                    "regexp": "^[\\d -]{4,32}$",
                    "required": "true"
                  }
                },
                "max_count": "2",
                "min_count": "0",
                "required": "true"
              }
            },
            "required": "false"
          },
          "custom_employer_name": {
            "max_length": "150",
            "min_length": "0",
            "required": "false"
          },
          "department": {
            "max_length": "32",
            "min_length": "0",
            "required": "false"
          },
          "description": {
            "max_length": "10000",
            "min_length": "0",
            "required": "true"
          },
          "driver_license_types": {
            "max_count": null,
            "min_count": "0",
            "required": "false"
          },
          "employment": {
            "required": "false"
          },
          "experience": {
            "required": "false"
          },
          "key_skills": {
            "max_count": "30",
            "min_count": "0",
            "required": "false"
          },
          "languages": {
            "max_count": null,
            "min_count": "0",
            "required": "false"
          },
          "manager": {
            "required": "false"
          },
          "name": {
            "max_length": "100",
            "min_length": "0",
            "required": "true"
          },
          "professional_roles": {
            "max_count": "1",
            "min_count": "1",
            "required": "true"
          },
          "response_letter_required": {
            "required": "false"
          },
          "response_notifications": {
            "required": "false"
          },
          "response_url": {
            "max_length": "511",
            "min_length": "0",
            "regexp": "^(http|https)://.+$",
            "required": "false"
          },
          "salary": {
            "fields": {
              "currency": {
                "required": "false"
              },
              "from": {
                "required": "false"
              },
              "gross": {
                "required": "false"
              },
              "to": {
                "required": "false"
              }
            },
            "required": "false"
          },
          "schedule": {
            "required": "false"
          },
          "test": {
            "fields": {
              "required": {
                "required": "false"
              }
            },
            "required": "false"
          },
          "type": {
            "required": "true"
          },
          "working_days": {
            "max_count": null,
            "min_count": "0",
            "required": "false"
          },
          "working_time_intervals": {
            "max_count": null,
            "min_count": "0",
            "required": "false"
          },
          "working_time_modes": {
            "max_count": null,
            "min_count": "0",
            "required": "false"
          }
        }
      },
      "VacancyDraftVacancyDraftCreate": {
        "value": {
          "accept_handicapped": "true",
          "accept_incomplete_resumes": "false",
          "accept_kids": "false",
          "accept_temporary": "false",
          "address": {
            "id": "123",
            "show_metro_only": "true"
          },
          "allow_messages": "true",
          "areas": [
            {
              "id": "1"
            },
            {
              "id": "7"
            }
          ],
          "billing_type": {
            "id": "standard"
          },
          "branded_template": {
            "id": "marketing"
          },
          "code": "код-1234",
          "contacts": {
            "email": "i.ivanov@example.com",
            "name": "Иванов Иван",
            "phones": [
              {
                "comment": "с 10 до 20",
                "formatted": "79198883344"
              }
            ]
          },
          "department": {
            "id": "1",
            "name": "Спецотдел"
          },
          "description": "Приветствуется опыт работы менеджером по продажам",
          "driver_license_types": [
            {
              "id": "A"
            },
            {
              "id": "B"
            }
          ],
          "employment": {
            "id": "full"
          },
          "experience": {
            "id": "moreThan6"
          },
          "key_skills": [
            {
              "name": "Холодные продажи"
            },
            {
              "name": "Проведение промо акций"
            }
          ],
          "languages": [
            {
              "id": "spa",
              "level": {
                "id": "b2"
              }
            },
            {
              "id": "ita",
              "level": {
                "id": "a1"
              }
            }
          ],
          "name": "Менеджер по продажам",
          "professional_roles": [
            {
              "id": "59"
            }
          ],
          "response_letter_required": "true",
          "response_notifications": "true",
          "salary": {
            "currency": "USD",
            "from": "100",
            "gross": "true",
            "to": "500"
          },
          "schedule": {
            "id": "flyInFlyOut"
          },
          "test": {
            "id": "42",
            "required": "true"
          },
          "type": {
            "id": "open"
          },
          "with_zp": "true",
          "working_days": [
            {
              "id": "only_saturday_and_sunday"
            }
          ],
          "working_time_intervals": [
            {
              "id": "from_four_to_six_hours_in_a_day"
            }
          ],
          "working_time_modes": [
            {
              "id": "start_after_sixteen"
            }
          ]
        }
      },
      "NegotiationsNegotiationTestResults": {
        "value": {
          "test_result": {
            "duration": "10",
            "mark": "EXCELLENT",
            "name": "name",
            "score": "100",
            "tasks": [
              {
                "closed_answers": [
                  {
                    "correct": "false",
                    "selected": "true",
                    "value": "«Государство и революция»"
                  },
                  {
                    "correct": "true",
                    "selected": "false",
                    "value": "«Три источника и три составных части марксизма»"
                  }
                ],
                "opened_answer": {
                  "mark": "UNFAIR",
                  "value": " «Материализм и эмпириокритицизм»"
                },
                "question": "В какой работе Ленина появляется знаменитая фраза «Учение Маркса всесильно, потому что оно верно»?"
              },
              {
                "closed_answers": [],
                "opened_answer": {
                  "mark": "EXCELLENT",
                  "value": "чтобы изменить его"
                },
                "question": "Закончите фразу Маркса: «Философы лишь различным образом объясняли мир, но дело заключается в том…»"
              }
            ]
          }
        }
      },
      "DictionariesSalaryStatisticsSalaryAreas": {
        "value": [
          {
            "areas": [
              {
                "areas": [
                  {
                    "areas": [],
                    "id": "3",
                    "name": "Алейск"
                  }
                ],
                "id": "2",
                "name": "Алтайский край"
              }
            ],
            "id": "1",
            "name": "Россия"
          }
        ]
      },
      "ApplicantCommentsAddApplicantCommentExample": {
        "value": {
          "access_type": {
            "id": "owner",
            "name": "Виден только мне"
          },
          "author": {
            "full_name": "Иванова Мария Ивановна"
          },
          "created_at": "2015-08-27T10:30:14+03:00",
          "id": "123654",
          "is_mine": "true",
          "text": "не считаю нужным"
        }
      },
      "NegotiationsNegotiationsStatisticsManager": {
        "value": {
          "manager_statistics": {
            "average_reply_time": "1",
            "politeness": {
              "article_url": "https://hh.ru/article/23734",
              "description": "Индекс вежливости видят соискатели после отклика на вакансию. Компании с низким Индексом теряют доверие соискателей и рискуют пропустить подходящих кандидатов",
              "hint": "У вас низкий Индекс вежливости, но вы можете его повысить!",
              "index": "19",
              "index_change": "0"
            },
            "received": "20",
            "replied_percent": "0",
            "viewed_percent": "23"
          }
        }
      },
      "VacanciesMatchList": {
        "value": {
          "found": "1",
          "items": [
            {
              "address": {
                "building": "15 к 2",
                "city": "Кемерово",
                "description": null,
                "id": "321123",
                "lat": "55.324417",
                "lng": "86.116411",
                "metro": null,
                "metro_stations": [],
                "raw": "Кемерово, Пр.Молодежный, 15 к 2",
                "street": "Пр.Молодежный"
              },
              "alternate_url": "https://hh.ru/vacancy/123456",
              "apply_alternate_url": "https://hh.ru/applicant/vacancy_response?vacancyId=123456",
              "archived": "false",
              "area": {
                "id": "1",
                "name": "Москва",
                "url": "https://api.hh.ru/areas/1"
              },
              "can_invite": "true",
              "created_at": "2012-10-11T13:27:16+04:00",
              "department": null,
              "employer": {
                "alternate_url": "https://hh.ru/employer/1455",
                "id": "1455",
                "logo_urls": {
                  "90": "https://hh.ru/employer-logo/1455.png",
                  "240": "https://hh.ru/employer-logo/1455.png",
                  "original": "https://hh.ru/file/1455.png"
                },
                "name": "HeadHunter",
                "trusted": "true",
                "url": "https://api.hh.ru/employers/1455"
              },
              "employer_negotiations_state": null,
              "has_test": "true",
              "id": "123456",
              "manager": {
                "first_name": "Иван",
                "id": "3",
                "last_name": "Ивановски",
                "middle_name": "Иваныч"
              },
              "name": "Специалист по автоматизации тестирования (Java, Selenium)",
              "negotiations_actions": [
                {
                  "arguments": [
                    {
                      "id": "resume_id",
                      "required": "true",
                      "required_arguments": []
                    },
                    {
                      "id": "vacancy_id",
                      "required": "true",
                      "required_arguments": []
                    },
                    {
                      "id": "message",
                      "required": "true",
                      "required_arguments": []
                    },
                    {
                      "id": "send_sms",
                      "required": "false",
                      "required_arguments": [
                        {
                          "id": "message"
                        }
                      ]
                    },
                    {
                      "id": "address_id",
                      "required": "false",
                      "required_arguments": [
                        {
                          "id": "message"
                        }
                      ]
                    }
                  ],
                  "enabled": "true",
                  "id": "invitation",
                  "method": "POST",
                  "name": "Пригласить",
                  "resulting_employer_state": {
                    "id": "invitation",
                    "name": "Приглашение"
                  },
                  "templates": [
                    {
                      "id": "invite",
                      "name": "Приглашение на вакансию",
                      "quick": "false",
                      "url": "https://api.hh.ru/message_templates/invite?resume_id=0123456789abcdef&vacancy_id=123456"
                    }
                  ],
                  "url": "https://api.hh.ru/negotiations/invited"
                }
              ],
              "negotiations_state": null,
              "premium": "true",
              "published_at": "2013-10-11T13:27:16+04:00",
              "relations": [],
              "response_letter_required": "false",
              "salary": {
                "currency": "RUR",
                "from": "100000",
                "to": null
              },
              "type": {
                "id": "open",
                "name": "Открытая"
              },
              "url": "https://api.hh.ru/vacancies/123456"
            }
          ],
          "page": "0",
          "pages": "1",
          "per_page": "20"
        }
      },
      "EmployersEmployersBlacklisted": {
        "value": {
          "found": "1",
          "items": [
            {
              "alternate_url": "https://hh.ru/employer/40",
              "id": "40",
              "logo_urls": {
                "90": "https://hhcdn.ru/employer-logo/00003.jpeg",
                "240": "https://hhcdn.ru/employer-logo/00004.jpeg",
                "original": "https://hhcdn.ru/employer-logo-original/1.jpeg"
              },
              "name": "test name",
              "open_vacancies": "0",
              "url": "https://api.hh.ru/employers/40",
              "vacancies_url": "https://api.hh.ru/vacancies?employer_id=40"
            }
          ],
          "limit_reached": "false",
          "page": "0",
          "pages": "1",
          "per_page": "20"
        }
      },
      "VacanciesArchivedVacancyList": {
        "value": {
          "found": "1",
          "items": [
            {
              "address": null,
              "alternate_url": "https://hh.ru/vacancy/8331228",
              "apply_alternate_url": "https://hh.ru/applicant/vacancy_response?vacancyId=8331228",
              "archived": "true",
              "archived_at": "2013-08-08T16:17:21+04:00",
              "area": {
                "id": "1",
                "name": "Москва",
                "url": "https://api.hh.ru/areas/1"
              },
              "counters": {
                "invitations_and_responses": "5",
                "responses": "3"
              },
              "created_at": "2012-07-08T16:17:21+04:00",
              "department": {
                "id": "HH-1455-TECH",
                "name": "HeadHunter::Технический департамент"
              },
              "employer": {
                "accredited_it_employer": "false",
                "alternate_url": "https://hh.ru/employer/1455",
                "id": "1455",
                "logo_urls": {
                  "90": "https://hh.ru/employer-logo/289027.png",
                  "240": "https://hh.ru/employer-logo/289169.png",
                  "original": "https://hh.ru/file/2352807.png"
                },
                "name": "HeadHunter",
                "trusted": "true",
                "url": "https://api.hh.ru/employers/1455"
              },
              "has_test": "false",
              "id": "8331228",
              "name": "Секретарь",
              "premium": "false",
              "published_at": "2013-07-08T16:17:21+04:00",
              "relations": [],
              "response_letter_required": "true",
              "salary": {
                "currency": "RUR",
                "from": "30000",
                "gross": "true",
                "to": null
              },
              "type": {
                "id": "open",
                "name": "Открытая"
              },
              "url": "https://api.hh.ru/vacancies/8331228"
            }
          ],
          "page": "0",
          "pages": "1",
          "per_page": "20"
        }
      },
      "NegotiationsEmployerListResponse": {
        "value": {
          "collections": [
            {
              "counters": {
                "total": "5",
                "with_updates": "4"
              },
              "description": "Описание коллекции",
              "id": "somecollection",
              "name": "Название коллекции",
              "order_types": [
                {
                  "id": "last_change_time_except_employer_inbox",
                  "name": "По дате создания и активности соискателя",
                  "url": "https://api.hh.ru/negotiations/somecollection?vacancy_id=123456&order_by=last_change_time_except_employer_inbox"
                },
                {
                  "id": "relevance",
                  "name": "лучшие",
                  "url": "https://api.hh.ru/negotiations/somecollection?vacancy_id=123456&order_by=relevance"
                }
              ],
              "url": "https://api.hh.ru/negotiations/somecollection?vacancy_id=123456"
            },
            {
              "counters": {
                "total": "1",
                "with_updates": "0"
              },
              "description": "Описание другой коллекции",
              "id": "anothercollection",
              "name": "Название другой коллекции",
              "order_types": [
                {
                  "id": "last_change_time_except_employer_inbox",
                  "name": "По дате создания и активности соискателя",
                  "url": "https://api.hh.ru/negotiations/anothercollection?vacancy_id=123456&order_by=last_change_time_except_employer_inbox"
                }
              ],
              "url": "https://api.hh.ru/negotiations/anothercollection?vacancy_id=123456"
            }
          ],
          "employer_states": [
            {
              "id": "response",
              "name": "Отклик"
            },
            {
              "id": "invitation",
              "name": "Приглашение"
            },
            {
              "id": "discard",
              "name": "Отказ"
            },
            {
              "id": "discard_after_interview",
              "name": "Отказ после интервью"
            }
          ],
          "generated_collections": [
            {
              "counters": {
                "total": "5",
                "with_updates": "4"
              },
              "description": "Описание сгенерированной коллекции",
              "id": "some_generated_collection",
              "name": "Название сгенерированной коллекции",
              "order_types": [
                {
                  "id": "last_change_time_except_employer_inbox",
                  "name": "По дате создания и активности соискателя",
                  "url": "https://api.hh.ru/negotiations/some_generated_collection?vacancy_id=123456&order_by=last_change_time_except_employer_inbox"
                },
                {
                  "id": "relevance",
                  "name": "лучшие",
                  "url": "https://api.hh.ru/negotiations/some_generated_collection?vacancy_id=123456&order_by=relevance"
                }
              ],
              "url": "https://api.hh.ru/negotiations/some_generated_collection?vacancy_id=123456"
            }
          ]
        }
      },
      "SavedSearchesSavedSearchVacancyItem": {
        "value": {
          "created_at": "2014-04-11T13:12:17+04:00",
          "id": "123",
          "items": {
            "count": "304234",
            "url": "https://api.hh.ru/vacancies?area=1&saved_search_id=123"
          },
          "name": "Test autosearch",
          "new_items": {
            "count": "12",
            "url": "https://api.hh.ru/vacancies?area=1&saved_search_id=123&date_from=2014-01-11T13%3A12%3A17%2B0400"
          },
          "subscription": "true"
        }
      },
      "ArtifactsArtifactsPortfolio": {
        "value": {
          "found": "1",
          "items": [
            {
              "description": "Описание",
              "id": "92278992",
              "medium": "http://...",
              "small": "http://...",
              "state": {
                "id": "ok",
                "name": "ok"
              }
            }
          ],
          "page": "0",
          "pages": "1",
          "per_page": "1"
        }
      },
      "NegotiationsEmployerNegotiationItem": {
        "value": {
          "actions": [
            {
              "arguments": [
                {
                  "id": "message",
                  "required": "false",
                  "required_arguments": []
                },
                {
                  "id": "send_sms",
                  "required": "false",
                  "required_arguments": [
                    {
                      "id": "message"
                    }
                  ]
                }
              ],
              "enabled": "true",
              "id": "offer",
              "method": "PUT",
              "name": "Предложение о работе",
              "resulting_employer_state": {
                "id": "offer",
                "name": "Предложение о работе"
              },
              "templates": [
                {
                  "id": "offer",
                  "name": "Приглашение на Предложение о работе",
                  "quick": "false",
                  "url": "https://api.hh.ru/message_templates/offer?topic_id=123456789"
                }
              ],
              "url": "https://api.hh.ru/negotiations/offer/123456789"
            }
          ],
          "chat_id": "3490",
          "chat_states": {
            "response_reminder_state": {
              "allowed": "false"
            }
          },
          "counters": {
            "messages": "1",
            "unread_messages": "1"
          },
          "created_at": "2024-02-20T10:24:48+03:00",
          "employer_state": {
            "id": "response",
            "name": "Отклик"
          },
          "has_updates": "true",
          "id": "123456789",
          "messages_url": "https://api.hh.ru/negotiations/123456789/messages",
          "messaging_status": "ok",
          "resume": {
            "actions": {
              "download": {
                "pdf": {
                  "url": "https://api.hh.ru/resumes/0123456789abcdef/download/%D0%98%D0%B2%D0%B0%D0%BD%D0%BE%D0%B2%20%D0%98%D0%B2%D0%B0%D0%BD.pdf?type=pdf&topic_id=123456789&vacancy_id=123456789"
                },
                "rtf": {
                  "url": "https://api.hh.ru/resumes/0123456789abcdef/download/%D0%98%D0%B2%D0%B0%D0%BD%D0%BE%D0%B2%20%D0%98%D0%B2%D0%B0%D0%BD.rtf?type=rtf&topic_id=123456789&vacancy_id=123456789"
                }
              }
            },
            "age": null,
            "alternate_url": "https://hh.ru/resume/0123456789abcdef?t=123456789&vacancyId=123456789",
            "area": {
              "id": "1",
              "name": "Москва",
              "url": "https://api.hh.ru/areas/1"
            },
            "can_view_full_info": "true",
            "certificate": [],
            "created_at": "2024-02-20T10:24:47+03:00",
            "download": {
              "pdf": {
                "url": "https://api.hh.ru/resumes/0123456789abcdef/download/%D0%98%D0%B2%D0%B0%D0%BD%D0%BE%D0%B2%20%D0%98%D0%B2%D0%B0%D0%BD.pdf?type=pdf&topic_id=123456789&vacancy_id=123456789"
              },
              "rtf": {
                "url": "https://api.hh.ru/resumes/0123456789abcdef/download/%D0%98%D0%B2%D0%B0%D0%BD%D0%BE%D0%B2%20%D0%98%D0%B2%D0%B0%D0%BD.rtf?type=rtf&topic_id=123456789&vacancy_id=123456789"
              }
            },
            "education": {
              "level": {
                "id": "master",
                "name": "Магистр"
              },
              "primary": [
                {
                  "name": "Российский государственный социальный университет, Москва",
                  "name_id": "39420",
                  "organization": "Факультет информационных технологий",
                  "organization_id": null,
                  "result": "",
                  "result_id": null,
                  "year": "2012"
                }
              ]
            },
            "experience": [
              {
                "area": {
                  "id": "1",
                  "name": "Москва",
                  "url": "https://api.hh.ru/areas/1"
                },
                "company": "HeadHunter",
                "company_id": null,
                "company_url": "http://url.ru",
                "employer": null,
                "end": "2012-02-06",
                "industries": [],
                "industry": {
                  "id": "1",
                  "name": "Банки/кредиты/инвестиции/лизинг"
                },
                "position": "Директор",
                "start": "2011-01-02"
              }
            ],
            "favorited": "false",
            "first_name": "Иван",
            "gender": {
              "id": "male",
              "name": "Мужской"
            },
            "hidden_fields": [],
            "id": "0123456789abcdef",
            "last_name": "Иванов",
            "marked": "false",
            "middle_name": null,
            "negotiations_history": {
              "url": "https://api.hh.ru/resumes/0123456789abcdef/negotiations_history"
            },
            "owner": {
              "comments": {
                "counters": {
                  "total": "0"
                },
                "url": "https://api.hh.ru/applicant_comments/54769355"
              },
              "id": "54769355"
            },
            "photo": null,
            "platform": {
              "id": "headhunter"
            },
            "salary": null,
            "title": "Начинающий специалист",
            "total_experience": {
              "months": "14"
            },
            "updated_at": "2024-02-20T10:24:47+03:00",
            "url": "https://api.hh.ru/resumes/0123456789abcdef?topic_id=123456789",
            "viewed": "false"
          },
          "source": "NEGOTIATION",
          "state": {
            "id": "response",
            "name": "Отклик"
          },
          "updated_at": "2024-02-20T10:24:48+03:00",
          "url": "https://api.hh.ru/negotiations/123456789",
          "vacancy": {
            "address": {
              "building": "10",
              "city": "Москва",
              "description": null,
              "id": "1118",
              "lat": "35",
              "lng": "30",
              "metro": {
                "lat": "55.789704",
                "line_id": "2",
                "line_name": "Замоскворецкая",
                "lng": "37.558212",
                "station_id": "2.34",
                "station_name": "Динамо"
              },
              "metro_stations": [
                {
                  "lat": "55.789704",
                  "line_id": "2",
                  "line_name": "Замоскворецкая",
                  "lng": "37.558212",
                  "station_id": "2.34",
                  "station_name": "Динамо"
                }
              ],
              "raw": "Москва, ул. Динамо, 10",
              "street": "ул. Динамо"
            },
            "alternate_url": "https://hh.ru/vacancy/123456789",
            "apply_alternate_url": "https://hh.ru/applicant/vacancy_response?vacancyId=123456789",
            "archived": "false",
            "area": {
              "id": "98",
              "name": "Ульяновск",
              "url": "https://api.hh.ru/areas/98"
            },
            "created_at": "2024-02-20T10:24:43+03:00",
            "department": null,
            "employer": {
              "accredited_it_employer": "false",
              "alternate_url": "https://hh.ru/employer/8183",
              "id": "8183",
              "logo_urls": null,
              "name": "HeadHunter",
              "trusted": "true",
              "url": "https://api.hh.ru/employers/8183",
              "vacancies_url": "https://api.hh.ru/vacancies?employer_id=8183"
            },
            "has_test": "false",
            "id": "123456789",
            "insider_interview": null,
            "name": "Менеджер",
            "premium": "false",
            "professional_roles": [
              {
                "id": "32",
                "name": "Менеджер"
              }
            ],
            "published_at": "2024-02-20T10:24:43+03:00",
            "response_letter_required": "false",
            "response_url": null,
            "salary": null,
            "sort_point_distance": null,
            "type": {
              "id": "open",
              "name": "Открытая"
            },
            "url": "https://api.hh.ru/vacancies/123456789?host=hh.ru"
          },
          "viewed_by_opponent": "true"
        }
      },
      "ResumesSearchForResumes": {
        "value": {
          "found": "1",
          "items": [
            {
              "actions": {
                "download": {
                  "pdf": {
                    "url": "https://api.hh.ru/resumes/ABCDEF01234567890/download/Lnhfbjibfvcixqb%20Fnhfbjiaxluffhw%20Mnhfbjicdkicrzl.pdf?type=pdf"
                  },
                  "rtf": {
                    "url": "https://api.hh.ru/resumes/ABCDEF01234567890/download/Lnhfbjibfvcixqb%20Fnhfbjiaxluffhw%20Mnhfbjicdkicrzl.rtf?type=rtf"
                  }
                },
                "download_with_contact": {
                  "pdf": {
                    "url": "https://api.hh.ru/resumes/ABCDEF01234567890/download/Lnhfbjibfvcixqb%20Fnhfbjiaxluffhw%20Mnhfbjicdkicrzl.pdf?type=pdf&with_contact=ab65a8562d85e1798ad90d67fe8f5253"
                  },
                  "rtf": {
                    "url": "https://api.hh.ru/resumes/ABCDEF01234567890/download/Lnhfbjibfvcixqb%20Fnhfbjiaxluffhw%20Mnhfbjicdkicrzl.pdf?type=rtf&with_contact=ab65a8562d85e1798ad90d67fe8f5253"
                  }
                },
                "get_with_contact": {
                  "url": "https://api.hh.ru/resumes/ABCDEF01234567890?with_contact=ab65a8562d85e1798ad90d67fe8f5253"
                }
              },
              "age": "56",
              "alternate_url": "https://hh.ru/resume/ABCDEF01234567890",
              "area": {
                "id": "1",
                "name": "Москва",
                "url": "https://api.hh.ru/areas/1"
              },
              "can_view_full_info": "false",
              "certificate": [],
              "created_at": "2023-08-04T16:20:48+03:00",
              "download": {
                "pdf": {
                  "url": "https://api.hh.ru/resumes/ABCDEF01234567890/download/Lnhfbjibfvcixqb%20Fnhfbjiaxluffhw%20Mnhfbjicdkicrzl.pdf?type=pdf"
                },
                "rtf": {
                  "url": "https://api.hh.ru/resumes/ABCDEF01234567890/download/Lnhfbjibfvcixqb%20Fnhfbjiaxluffhw%20Mnhfbjicdkicrzl.pdf?type=rtf"
                }
              },
              "education": {
                "level": {
                  "id": "higher",
                  "name": "Высшее"
                },
                "primary": [
                  {
                    "name": "МАИ",
                    "name_id": null,
                    "organization": "Аэрокосмический",
                    "organization_id": null,
                    "result": "Архитектура, магистр архитектуры",
                    "result_id": null,
                    "year": "2020"
                  }
                ]
              },
              "experience": [
                {
                  "area": {
                    "id": "1",
                    "name": "Москва",
                    "url": "https://api.hh.ru/areas/1"
                  },
                  "company": "Роскосмос",
                  "company_id": "2",
                  "company_url": "http://some-kind.ru",
                  "employer": null,
                  "end": "2023-08-04",
                  "industries": [
                    {
                      "id": "19.623",
                      "name": "Столярно-строительные изделия (продвижение, оптовая торговля)"
                    },
                    {
                      "id": "52.651",
                      "name": "Архив, библиотека, искусствоведение"
                    }
                  ],
                  "industry": {
                    "id": "52",
                    "name": "Искусство, культура"
                  },
                  "position": "Тестировщик",
                  "start": "2022-03-22"
                }
              ],
              "favorited": "true",
              "first_name": null,
              "gender": {
                "id": "male",
                "name": "Male"
              },
              "hidden_fields": [],
              "id": "ABCDEF01234567890",
              "last_name": null,
              "last_negotiation": null,
              "marked": "false",
              "middle_name": null,
              "negotiations_history": {
                "url": "https://api.hh.ru/resumes/ABCDEF01234567890/negotiations_history"
              },
              "owner": {
                "comments": {
                  "counters": {
                    "total": "1"
                  },
                  "url": "https://api.hh.ru/applicant_comments/54752012"
                },
                "id": "54751619"
              },
              "photo": null,
              "platform": {
                "id": "headhunter"
              },
              "salary": {
                "amount": "1500",
                "currency": "USD"
              },
              "title": "TEST_RESUME",
              "total_experience": {
                "months": "18"
              },
              "updated_at": "2023-08-04T16:20:48+03:00",
              "url": "https://api.hh.ru/resumes/ABCDEF01234567890",
              "viewed": "false"
            }
          ],
          "page": "0",
          "pages": "1",
          "per_page": "20"
        }
      },
      "NegotiationsNegotiationMessageTemplates": {
        "value": {
          "mail": {
            "employer_state": "PHONE_INTERVIEW",
            "template_modified": "false",
            "text": "Здравствуйте, Иван Иванович! Благодарим Вас за отклик на вакансию... "
          }
        }
      },
      "DictionariesSalaryStatisticsEmployeeLevel": {
        "value": [
          {
            "description": "Прямые подчиненные отсутствуют, периодически координирует работу других сотрудников в рамках поставленной задачи",
            "id": "specialist",
            "name": "специалист"
          }
        ]
      },
      "DictionariesDictionaries": {
        "value": {
          "applicant_comment_access_type": [
            {
              "id": "coworkers",
              "name": "Виден мне и моим коллегам"
            },
            {
              "id": "owner",
              "name": "Виден только мне"
            }
          ],
          "applicant_comments_order": [
            {
              "id": "creation_time_desc",
              "name": "по убыванию даты публикации"
            },
            {
              "id": "creation_time_asc",
              "name": "по дате публикации"
            }
          ],
          "applicant_negotiation_status": [
            {
              "id": "all",
              "name": "Все"
            },
            {
              "id": "active",
              "name": "Активные"
            },
            {
              "id": "invitations",
              "name": "Активные приглашения"
            },
            {
              "id": "response",
              "name": "Активные отклики"
            },
            {
              "id": "discard",
              "name": "Отказ"
            },
            {
              "id": "archived",
              "name": "Архивированные"
            },
            {
              "id": "non_archived",
              "name": "Все, кроме архивированных"
            },
            {
              "id": "deleted",
              "name": "Скрытые"
            }
          ],
          "business_trip_readiness": [
            {
              "id": "ready",
              "name": "готов к командировкам"
            },
            {
              "id": "sometimes",
              "name": "готов к редким командировкам"
            },
            {
              "id": "never",
              "name": "не готов к командировкам"
            }
          ],
          "currency": [
            {
              "abbr": "AZN",
              "code": "AZN",
              "default": "false",
              "in_use": "false",
              "name": "Манаты",
              "rate": "0.027728"
            },
            {
              "abbr": "бел. руб.",
              "code": "BYR",
              "default": "false",
              "in_use": "false",
              "name": "Белорусские рубли",
              "rate": "0.042685"
            },
            {
              "abbr": "EUR",
              "code": "EUR",
              "default": "false",
              "in_use": "true",
              "name": "Евро",
              "rate": "0.015982"
            },
            {
              "abbr": "GEL",
              "code": "GEL",
              "default": "false",
              "in_use": "false",
              "name": "Грузинский лари",
              "rate": "0.0344"
            },
            {
              "abbr": "KGS",
              "code": "KGS",
              "default": "false",
              "in_use": "false",
              "name": "Киргизский сом",
              "rate": "1.356611"
            },
            {
              "abbr": "KZT",
              "code": "KZT",
              "default": "false",
              "in_use": "false",
              "name": "Тенге",
              "rate": "7.809145"
            },
            {
              "abbr": "руб.",
              "code": "RUR",
              "default": "true",
              "in_use": "true",
              "name": "Рубли",
              "rate": "1"
            },
            {
              "abbr": "грн.",
              "code": "UAH",
              "default": "false",
              "in_use": "false",
              "name": "Гривны",
              "rate": "0.596833"
            },
            {
              "abbr": "USD",
              "code": "USD",
              "default": "false",
              "in_use": "true",
              "name": "Доллары",
              "rate": "0.016311"
            },
            {
              "abbr": "сум",
              "code": "UZS",
              "default": "false",
              "in_use": "false",
              "name": "Узбекский сум",
              "rate": "177.916948"
            }
          ],
          "driver_license_types": [
            {
              "id": "A"
            },
            {
              "id": "B"
            },
            {
              "id": "C"
            },
            {
              "id": "D"
            },
            {
              "id": "E"
            },
            {
              "id": "BE"
            },
            {
              "id": "CE"
            },
            {
              "id": "DE"
            },
            {
              "id": "TM"
            },
            {
              "id": "TB"
            }
          ],
          "education_level": [
            {
              "id": "secondary",
              "name": "Среднее"
            },
            {
              "id": "special_secondary",
              "name": "Среднее специальное"
            },
            {
              "id": "unfinished_higher",
              "name": "Неоконченное высшее"
            },
            {
              "id": "higher",
              "name": "Высшее"
            },
            {
              "id": "bachelor",
              "name": "Бакалавр"
            },
            {
              "id": "master",
              "name": "Магистр"
            },
            {
              "id": "candidate",
              "name": "Кандидат наук"
            },
            {
              "id": "doctor",
              "name": "Доктор наук"
            }
          ],
          "employer_active_vacancies_order": [
            {
              "id": "name_asc",
              "name": "по заголовку"
            },
            {
              "id": "name_desc",
              "name": "по заголовку, в обратном порядке"
            },
            {
              "id": "expiration_date_asc",
              "name": "по дате"
            },
            {
              "id": "expiration_date_desc",
              "name": "по убыванию даты"
            },
            {
              "id": "unseen_responses_asc",
              "name": "по возрастанию количества непросмотренных откликов"
            },
            {
              "id": "unseen_responses_desc",
              "name": "по убыванию количества непросмотренных откликов"
            }
          ],
          "employer_archived_vacancies_order": [
            {
              "id": "name_asc",
              "name": "по заголовку"
            },
            {
              "id": "name_desc",
              "name": "по заголовку, в обратном порядке"
            },
            {
              "id": "archive_time_asc",
              "name": "по дате архивации"
            },
            {
              "id": "archive_time_desc",
              "name": "по убыванию даты архивации"
            }
          ],
          "employer_hidden_vacancies_order": [
            {
              "id": "name_asc",
              "name": "по заголовку"
            },
            {
              "id": "name_desc",
              "name": "по заголовку, в обратном порядке"
            },
            {
              "id": "archive_time_asc",
              "name": "по дате архивации"
            },
            {
              "id": "archive_time_desc",
              "name": "по убыванию даты архивации"
            }
          ],
          "employer_relation": [
            {
              "id": "blacklisted",
              "name": "Скрыт из поиска вакансий"
            }
          ],
          "employer_type": [
            {
              "id": "company",
              "name": "Прямой работодатель"
            },
            {
              "id": "agency",
              "name": "Кадровое агентство"
            },
            {
              "id": "project_director",
              "name": "Руководитель проекта"
            },
            {
              "id": "private_recruiter",
              "name": "Частный рекрутер"
            },
            {
              "id": "self_employed",
              "name": "Самозанятый"
            },
            {
              "id": "private_individual",
              "name": "Частное лицо"
            }
          ],
          "employment": [
            {
              "id": "full",
              "name": "Полная занятость"
            },
            {
              "id": "part",
              "name": "Частичная занятость"
            },
            {
              "id": "project",
              "name": "Проектная работа"
            },
            {
              "id": "volunteer",
              "name": "Волонтерство"
            },
            {
              "id": "probation",
              "name": "Стажировка"
            }
          ],
          "experience": [
            {
              "id": "noExperience",
              "name": "Нет опыта"
            },
            {
              "id": "between1And3",
              "name": "От 1 года до 3 лет"
            },
            {
              "id": "between3And6",
              "name": "От 3 до 6 лет"
            },
            {
              "id": "moreThan6",
              "name": "Более 6 лет"
            }
          ],
          "gender": [
            {
              "id": "male",
              "name": "Мужской"
            },
            {
              "id": "female",
              "name": "Женский"
            }
          ],
          "job_search_statuses_applicant": [
            {
              "id": "active_search",
              "name": "Активно ищу работу"
            },
            {
              "id": "looking_for_offers",
              "name": "Рассматриваю входящие предложения"
            },
            {
              "id": "not_looking_for_job",
              "name": "Не ищу работу"
            },
            {
              "id": "has_job_offer",
              "name": "Предложили работу, пока думаю"
            },
            {
              "id": "accepted_job_offer",
              "name": "Уже выхожу на новое место"
            }
          ],
          "job_search_statuses_employer": [
            {
              "id": "active_search",
              "name": "Активно ищет работу"
            },
            {
              "id": "looking_for_offers",
              "name": "Рассматривает предложения"
            },
            {
              "id": "not_looking_for_job",
              "name": "Не ищет работу"
            },
            {
              "id": "has_job_offer",
              "name": "Предложили работу, решает"
            },
            {
              "id": "accepted_job_offer",
              "name": "Вышел на новое место"
            }
          ],
          "language_level": [
            {
              "id": "a1",
              "name": "A1 — Начальный"
            },
            {
              "id": "a2",
              "name": "A2 — Элементарный"
            },
            {
              "id": "b1",
              "name": "B1 — Средний"
            },
            {
              "id": "b2",
              "name": "B2 — Средне-продвинутый"
            },
            {
              "id": "c1",
              "name": "C1 — Продвинутый"
            },
            {
              "id": "c2",
              "name": "C2 — В совершенстве"
            },
            {
              "id": "l1",
              "name": "Родной"
            }
          ],
          "messaging_status": [
            {
              "id": "archived",
              "name": "Вакансия отправлена в архив"
            },
            {
              "id": "ok",
              "name": "Переписка доступна"
            },
            {
              "id": "disabled_by_employer",
              "name": "Работодатель отключил переписку"
            },
            {
              "id": "in_a_row_limit",
              "name": "Вы отправили 5 сообщений подряд. Дождитесь ответа, чтобы написать еще"
            },
            {
              "id": "overall_limit",
              "name": "Превышено число сообщений в переписке"
            },
            {
              "id": "no_invitation",
              "name": "Переписка доступна только после приглашения"
            },
            {
              "id": "resume_deleted",
              "name": "Резюме удалено"
            },
            {
              "id": "prohibited",
              "name": "Переписка недоступна"
            }
          ],
          "negotiations_order": [
            {
              "id": "updated_at",
              "name": "по дате обновления"
            },
            {
              "id": "created_at",
              "name": "по дате добавления"
            }
          ],
          "negotiations_participant_type": [
            {
              "id": "applicant",
              "name": "Соискатель"
            },
            {
              "id": "employer",
              "name": "Работодатель"
            }
          ],
          "negotiations_state": [
            {
              "id": "response",
              "name": "Отклик"
            },
            {
              "id": "invitation",
              "name": "Приглашение"
            },
            {
              "id": "discard",
              "name": "Отказ"
            },
            {
              "id": "hidden",
              "name": "Скрытый"
            }
          ],
          "phone_call_status": [
            {
              "id": "pick_successful",
              "name": "Установка соединения"
            },
            {
              "id": "calling",
              "name": "Звонок"
            },
            {
              "id": "did_not_connect",
              "name": "Абонент временно недоступен"
            },
            {
              "id": "call_in_progress",
              "name": "Телефонный разговор"
            },
            {
              "id": "call_error",
              "name": "Техническая ошибка"
            },
            {
              "id": "call_ended",
              "name": "Телефонный разговор завершен"
            }
          ],
          "preferred_contact_type": [
            {
              "id": "home",
              "name": "Домашний телефон"
            },
            {
              "id": "work",
              "name": "Рабочий телефон"
            },
            {
              "id": "cell",
              "name": "Мобильный телефон"
            },
            {
              "id": "email",
              "name": "Эл. почта"
            }
          ],
          "relocation_type": [
            {
              "id": "no_relocation",
              "name": "не готов к переезду"
            },
            {
              "id": "relocation_possible",
              "name": "готов к переезду"
            },
            {
              "id": "relocation_desirable",
              "name": "хочу переехать"
            }
          ],
          "resume_access_type": [
            {
              "id": "no_one",
              "name": "не видно никому"
            },
            {
              "id": "whitelist",
              "name": "видно выбранным компаниям"
            },
            {
              "id": "blacklist",
              "name": "скрыто от выбранных компаний"
            },
            {
              "id": "clients",
              "name": "видно всем компаниям, зарегистрированным на HeadHunter"
            },
            {
              "id": "everyone",
              "name": "видно всему интернету"
            },
            {
              "id": "direct",
              "name": "доступно только по прямой ссылке"
            }
          ],
          "resume_contacts_site_type": [
            {
              "id": "personal",
              "name": "Другой сайт"
            },
            {
              "id": "moi_krug",
              "name": "Мой круг"
            },
            {
              "id": "livejournal",
              "name": "LiveJournal"
            },
            {
              "id": "linkedin",
              "name": "LinkedIn"
            },
            {
              "id": "freelance",
              "name": "Free-lance"
            },
            {
              "id": "skype",
              "name": "Skype"
            },
            {
              "id": "icq",
              "name": "ICQ"
            }
          ],
          "resume_hidden_fields": [
            {
              "id": "names_and_photo",
              "name": "ФИО и фотографию"
            },
            {
              "id": "phones",
              "name": "Все указанные в резюме телефоны"
            },
            {
              "id": "email",
              "name": "Электронную почту"
            },
            {
              "id": "other_contacts",
              "name": "Прочие контакты (Skype, ICQ, соцсети)"
            },
            {
              "id": "experience",
              "name": "Все места работы"
            }
          ],
          "resume_moderation_note": [
            {
              "id": "bad",
              "name": "Резюме составлено небрежно."
            },
            {
              "id": "block_full_name",
              "name": "В резюме отсутствует полное имя кандидата."
            },
            {
              "id": "bad_description",
              "name": "Укажите желаемую позицию, чтобы повысить свои шансы найти работу."
            },
            {
              "id": "block_no_education_place_or_date",
              "name": "Отсутствуют данные об учебном заведении и дате его окончания."
            },
            {
              "id": "bad_education",
              "name": "Плохо описано образование."
            },
            {
              "id": "bad_education_student",
              "name": "Укажите полное название учебного заведения, факультет и планируемый год окончания."
            },
            {
              "id": "block_no_function",
              "name": "Опишите подробнее свои обязанности и функции."
            },
            {
              "id": "block_work_place",
              "name": "Не указан опыт работы за последнее время"
            },
            {
              "id": "no_company_name",
              "name": "Укажите названия мест работы."
            },
            {
              "id": "no_company_description",
              "name": "Укажите сферу деятельности компаний, в которых Вы работали."
            },
            {
              "id": "no_position",
              "name": "Плохо описаны занимаемые должности."
            },
            {
              "id": "no_date",
              "name": "Отсутствуют даты начала и окончания работы."
            },
            {
              "id": "bad_function",
              "name": "Плохо описаны функции и обязанности."
            },
            {
              "id": "not_enough_information",
              "name": "Укажите больше дополнительной информации: владение иностранными языками, знание компьютерных программ и др."
            },
            {
              "id": "lot_information",
              "name": "Слишком много дополнительной информации."
            },
            {
              "id": "no_recommendation",
              "name": "Вы не предоставили ни одну рекомендацию."
            },
            {
              "id": "careless_additional_information",
              "name": "Обратите внимание на раздел «Ключевые навыки». Укажите в нём сведения, которые выгодно отличат Вас в качестве претендента на желаемую позицию. Проверьте орфографию и опечатки."
            },
            {
              "id": "careless_photo",
              "name": "Рекомендуем Вам изменить фотографию для резюме. Лучше размещать фотографии, где Вы изображены в деловом или повседневном костюме."
            },
            {
              "id": "careless_key_skill_information",
              "name": "Отредактируйте раздел «Ключевые навыки» Вашего резюме, поскольку указанная информация не вполне соответствует формату и/или содержит опечатки."
            },
            {
              "id": "incorrect_phone_number",
              "name": "В резюме указан несуществующий номер телефона. Если номер корректен, свяжитесь со службой поддержки"
            },
            {
              "id": "block_obscenity",
              "name": "Мат в резюме"
            },
            {
              "id": "block_obscenity_name",
              "name": "Мат в ФИО"
            },
            {
              "id": "block_obscenity_title",
              "name": "Мат в названии должности"
            },
            {
              "id": "block_obscenity_experience",
              "name": "Мат в разделе \"Опыт работы\""
            },
            {
              "id": "block_obscenity_skills",
              "name": "Мат в поле \"О себе\""
            },
            {
              "id": "block_obscenity_key_skills",
              "name": "Мат в ключевых навыках"
            },
            {
              "id": "block_obscenity_education",
              "name": "Мат в разделе \"Образование\""
            },
            {
              "id": "block_obscenity_recommendation",
              "name": "Мат в разделе \"Рекомендации\""
            },
            {
              "id": "block_experience_in_one_place",
              "name": "Укажите опыт отдельно для каждой компании"
            },
            {
              "id": "experience_caps",
              "name": "При описании опыта работы проследите, что заглавные буквы использованы только в начале предложений или для имен собственных"
            },
            {
              "id": "experience_multilang",
              "name": "Опыт работы должен быть описан на одном языке"
            },
            {
              "id": "experience_spelling",
              "name": "Исправьте орфографические ошибки в описании опыта работы"
            },
            {
              "id": "block_experience_in_additional_information",
              "name": "Опишите опыт работы в соответствующих полях"
            },
            {
              "id": "additional_information_caps",
              "name": "При заполнении поля \"О себе\" проследите, что ЗАГЛАВНЫЕ БУКВЫ использованы только в начале предложений или для имен собственных"
            },
            {
              "id": "additional_information_multilang",
              "name": "Поле \"О себе\" должно быть написано на одном языке"
            },
            {
              "id": "additional_information_spelling",
              "name": "Исправьте орфографические ошибки в поле \"О себе\""
            }
          ],
          "resume_search_experience_period": [
            {
              "id": "all_time",
              "name": "за всё время опыта"
            },
            {
              "id": "last_year",
              "name": "за последний год"
            },
            {
              "id": "last_three_years",
              "name": "за последние 3 года"
            },
            {
              "id": "last_six_years",
              "name": "за последние 6 лет"
            }
          ],
          "resume_search_fields": [
            {
              "id": "everywhere",
              "name": "везде"
            },
            {
              "id": "title",
              "name": "в названии резюме"
            },
            {
              "id": "education",
              "name": "в образовании"
            },
            {
              "id": "skills",
              "name": "в ключевых навыках"
            },
            {
              "id": "experience",
              "name": "в опыте работы"
            },
            {
              "id": "experience_company",
              "name": "в компаниях и отраслях"
            },
            {
              "id": "experience_position",
              "name": "в должностях"
            },
            {
              "id": "experience_description",
              "name": "в обязанностях"
            }
          ],
          "resume_search_label": [
            {
              "id": "only_with_photo",
              "name": "Только с фотографией"
            },
            {
              "id": "only_with_salary",
              "name": "Не показывать резюме без зарплаты"
            },
            {
              "id": "only_with_age",
              "name": "Не показывать резюме без указания возраста"
            },
            {
              "id": "only_with_gender",
              "name": "Не показывать резюме без указания пола"
            },
            {
              "id": "only_with_vehicle",
              "name": "Есть личный автомобиль"
            },
            {
              "id": "exclude_viewed_by_user_id",
              "name": "Скрыть резюме, просмотренные мной"
            },
            {
              "id": "exclude_viewed_by_employer_id",
              "name": "Скрыть резюме, просмотренные всей компанией"
            },
            {
              "id": "only_in_responses",
              "name": "Показать только из откликов и приглашений"
            }
          ],
          "resume_search_logic": [
            {
              "id": "all",
              "name": "Все слова встречаются"
            },
            {
              "id": "any",
              "name": "Любое из слов встречается"
            },
            {
              "id": "phrase",
              "name": "Точная фраза встречается"
            },
            {
              "id": "except",
              "name": "Не встречаются"
            }
          ],
          "resume_search_order": [
            {
              "id": "publication_time",
              "name": "по дате изменения"
            },
            {
              "id": "salary_desc",
              "name": "по убыванию зарплат"
            },
            {
              "id": "salary_asc",
              "name": "по возрастанию зарплаты"
            },
            {
              "id": "relevance",
              "name": "по соответствию"
            }
          ],
          "resume_search_relocation": [
            {
              "id": "living_or_relocation",
              "name": "Живут в указанном регионе или готовы переехать в него"
            },
            {
              "id": "living",
              "name": "Живут в указанном регионе"
            },
            {
              "id": "living_but_relocation",
              "name": "Живут в указанном регионе и готовы к переезду куда-либо"
            },
            {
              "id": "relocation",
              "name": "Не живут в указанном регионе, но готовы переехать в него"
            }
          ],
          "resume_status": [
            {
              "id": "not_published",
              "name": "не опубликовано"
            },
            {
              "id": "published",
              "name": "опубликовано"
            },
            {
              "id": "blocked",
              "name": "заблокировано"
            },
            {
              "id": "on_moderation",
              "name": "на модерации"
            }
          ],
          "schedule": [
            {
              "id": "fullDay",
              "name": "Полный день",
              "uid": "full_day"
            },
            {
              "id": "shift",
              "name": "Сменный график",
              "uid": "shift"
            },
            {
              "id": "flexible",
              "name": "Гибкий график",
              "uid": "flexible"
            },
            {
              "id": "remote",
              "name": "Удаленная работа",
              "uid": "remote"
            },
            {
              "id": "flyInFlyOut",
              "name": "Вахтовый метод",
              "uid": "fly_in_fly_out"
            }
          ],
          "travel_time": [
            {
              "id": "any",
              "name": "Не имеет значения"
            },
            {
              "id": "less_than_hour",
              "name": "Не более часа"
            },
            {
              "id": "from_hour_to_one_and_half",
              "name": "Не более полутора часов"
            }
          ],
          "vacancy_billing_type": [
            {
              "id": "free",
              "name": "Бесплатная"
            },
            {
              "id": "standard",
              "name": "Стандарт"
            },
            {
              "id": "standard_plus",
              "name": "Стандарт плюс"
            },
            {
              "id": "premium",
              "name": "Премиум"
            }
          ],
          "vacancy_cluster": [
            {
              "id": "area",
              "name": "Регион"
            },
            {
              "id": "metro",
              "name": "Метро"
            },
            {
              "id": "salary",
              "name": "Уровень дохода"
            },
            {
              "id": "professional_area",
              "name": "Профобласть"
            },
            {
              "id": "specialization",
              "name": "Специализация"
            },
            {
              "id": "industry",
              "name": "Отрасль компании"
            },
            {
              "id": "sub_industry",
              "name": "Сфера компании"
            },
            {
              "id": "experience",
              "name": "Опыт работы"
            },
            {
              "id": "employment",
              "name": "Тип занятости"
            },
            {
              "id": "schedule",
              "name": "График работы"
            },
            {
              "id": "label",
              "name": "Исключение"
            },
            {
              "id": "professional_role",
              "name": "Профессиональная роль"
            },
            {
              "id": "district",
              "name": "Район"
            }
          ],
          "vacancy_label": [
            {
              "id": "with_address",
              "name": "Только с адресом"
            },
            {
              "id": "accept_handicapped",
              "name": "Только доступные для людей с инвалидностью"
            },
            {
              "id": "not_from_agency",
              "name": "Без вакансий агентств"
            },
            {
              "id": "accept_kids",
              "name": "Только доступные для соискателей от 14 лет"
            },
            {
              "id": "accredited_it",
              "name": "Только аккредитованные ИТ-компании"
            },
            {
              "id": "low_performance",
              "name": "Только вакансии, у которых меньше 10 откликов"
            }
          ],
          "vacancy_not_prolonged_reason": [
            {
              "id": "vacancy_archived",
              "name": "Вы не можете продлевать архивную/заблокированную вакансию."
            },
            {
              "id": "standard_plus_cannot_be_closed",
              "name": "Вакансия \"Стандарт Плюс\" не может быть закрытой."
            },
            {
              "id": "standard_plus_publication_is_updated_automatically",
              "name": "Вакансия \"Стандарт Плюс\" не может быть обновлена, это происходит автоматически раз в три дня."
            },
            {
              "id": "too_early_to_prolongate_free_publication",
              "name": "Бесплатная вакансия не может быть обновлена, т.к. предыдущее обновление было менее трех дней назад."
            },
            {
              "id": "too_early_to_prolongate_standard_publication",
              "name": "Вакансия \"Стандарт\" не может быть обновлена, т.к. предыдущее обновление было менее трех дней назад."
            },
            {
              "id": "free_prolongation_not_available",
              "name": "Бесплатная вакансия не может быть обновлена."
            },
            {
              "id": "not_enough_quotas",
              "name": "Вакансия не может быть обновлена. Квота на публикацию исчерпана."
            },
            {
              "id": "not_enough_purchased_services",
              "name": "Вакансия не может быть обновлена. Недостаточно купленных услуг."
            },
            {
              "id": "vacancy_publication_disabled_in_area",
              "name": "Размещение в данном регионе невозможно. Для размещения вакансий в странах Прибалтики обратитесь к персональному менеджеру"
            }
          ],
          "vacancy_relation": [
            {
              "id": "favorited",
              "name": "В избранном"
            },
            {
              "id": "got_response",
              "name": "Вы отправили резюме"
            },
            {
              "id": "got_invitation",
              "name": "Вас пригласили"
            },
            {
              "id": "got_rejection",
              "name": "Вам отказали"
            },
            {
              "id": "blacklisted",
              "name": "Скрыта из поиска"
            }
          ],
          "vacancy_search_fields": [
            {
              "id": "name",
              "name": "в названии вакансии"
            },
            {
              "id": "company_name",
              "name": "в названии компании"
            },
            {
              "id": "description",
              "name": "в описании вакансии"
            }
          ],
          "vacancy_search_order": [
            {
              "id": "publication_time",
              "name": "по дате"
            },
            {
              "id": "salary_desc",
              "name": "по убыванию дохода"
            },
            {
              "id": "salary_asc",
              "name": "по возрастанию дохода"
            },
            {
              "id": "relevance",
              "name": "по соответствию"
            },
            {
              "id": "distance",
              "name": "по удалённости"
            }
          ],
          "vacancy_type": [
            {
              "id": "open",
              "name": "Открытая"
            },
            {
              "id": "closed",
              "name": "Закрытая"
            },
            {
              "id": "anonymous",
              "name": "Анонимная"
            },
            {
              "id": "direct",
              "name": "Рекламная"
            }
          ],
          "working_days": [
            {
              "id": "only_saturday_and_sunday",
              "name": "Работа только по сб и вс"
            }
          ],
          "working_time_intervals": [
            {
              "id": "from_four_to_six_hours_in_a_day",
              "name": "Можно работать сменами по 4–6 часов в день"
            }
          ],
          "working_time_modes": [
            {
              "id": "start_after_sixteen",
              "name": "Можно начинать работать после 16:00"
            }
          ]
        }
      },
      "ResumesCreationAvailability": {
        "value": {
          "created": "2",
          "is_creation_available": "true",
          "max": "20",
          "remaining": "18"
        }
      },
      "AreasAreas": {
        "value": [
          {
            "areas": [
              {
                "areas": [],
                "id": "6251",
                "name": "Абай",
                "parent_id": "40"
              }
            ],
            "id": "40",
            "name": "Казахстан",
            "parent_id": null
          }
        ]
      },
      "SavedSearchesSavedSearchResumeItem": {
        "value": {
          "created_at": "2015-01-01T12:12:17+03:00",
          "id": "609535",
          "items": {
            "count": "55",
            "url": "https://api.hh.ru/resumes?order_by=publication_time&saved_search_id=123456&text=manager&area=1"
          },
          "name": "Managers in Moscow",
          "new_items": {
            "count": "15",
            "url": "https://api.hh.ru/resumes?order_by=publication_time&saved_search_id=123456&text=manager&area=1&last_used=2015-11-12T18%3A06%3A04%2B0300"
          },
          "subscription": "true"
        }
      },
      "NegotiationsListResponse": {
        "value": {
          "found": "1",
          "items": [
            {
              "created_at": "2013-10-05T19:51:38+04:00",
              "decline_allowed": "true",
              "has_updates": "true",
              "hidden": "false",
              "id": "123",
              "messaging_status": "ok",
              "phone_calls": {
                "items": [
                  {
                    "creation_time": "2022-03-04T16:39:58.857853Z",
                    "duration_seconds": null,
                    "id": "123",
                    "last_change_time": null,
                    "status": "call_in_progress"
                  },
                  {
                    "creation_time": "2022-03-01T16:39:58.857853Z",
                    "duration_seconds": "120",
                    "id": "111",
                    "last_change_time": "2022-03-01T16:41:58.857853Z",
                    "status": "call_ended"
                  }
                ],
                "picked_up_phone_by_opponent": "true"
              },
              "source": "NEGOTIATION",
              "state": {
                "id": "invitation",
                "name": "Приглашение"
              },
              "updated_at": "2013-10-07T18:30:57+04:00",
              "url": "https://api.hh.ru/negotiations/123",
              "viewed_by_opponent": "true"
            }
          ],
          "page": "0",
          "pages": "1",
          "per_page": "20"
        }
      },
      "ResumesMineResumes": {
        "value": {
          "found": "1",
          "items": [
            {
              "access": {
                "type": {
                  "id": "clients",
                  "name": "видно всем компаниям, зарегистрированным на HeadHunter"
                }
              },
              "actions": {
                "download": {
                  "pdf": {
                    "url": "https://api.hh.ru/resumes/01234567890abcdef/download/ИвановИванИванович.pdf?type=pdf"
                  },
                  "rtf": {
                    "url": "https://api.hh.ru/resumes/01234567890abcdef/download/ИвановИванИванович.rtf?type=rtf"
                  }
                }
              },
              "age": "43",
              "alternate_url": "https://hh.ru/resume/01234567890abcdef",
              "area": {
                "id": "1",
                "name": "Москва",
                "url": "https://api.hh.ru/areas/1"
              },
              "auto_hide_time": {
                "id": "month_10",
                "name": "10 месяцев"
              },
              "blocked": "false",
              "can_publish_or_update": "false",
              "certificate": [],
              "contact": [
                {
                  "comment": "Mobile",
                  "need_verification": "true",
                  "preferred": "false",
                  "type": {
                    "id": "cell",
                    "name": "Мобильный телефон"
                  },
                  "value": {
                    "city": "926",
                    "country": "7",
                    "formatted": "+7 (926) 222-22-22",
                    "number": "2222222"
                  },
                  "verified": "false"
                },
                {
                  "preferred": "true",
                  "type": {
                    "id": "email",
                    "name": "Эл. почта"
                  },
                  "value": "my-email@example.com"
                }
              ],
              "created": "2015-05-10T00:00:00+03:00",
              "created_at": "2015-05-10T00:00:00+03:00",
              "download": {
                "pdf": {
                  "url": "https://api.hh.ru/resumes/01234567890abcdef/download/ИвановИванИванович.pdf?type=pdf"
                },
                "rtf": {
                  "url": "https://api.hh.ru/resumes/01234567890abcdef/download/ИвановИванИванович.rtf?type=rtf"
                }
              },
              "education": {
                "level": {
                  "id": "secondary",
                  "name": "Среднее"
                },
                "primary": []
              },
              "experience": [
                {
                  "area": {
                    "id": "1",
                    "name": "Москва",
                    "url": "https://api.hh.ru/areas/1"
                  },
                  "company": "Компания",
                  "company_id": null,
                  "company_url": "http://url.ru",
                  "employer": null,
                  "end": "2012-02-06",
                  "industries": [],
                  "industry": {
                    "id": "1",
                    "name": "Банки/кредиты/инвестиции/лизинг"
                  },
                  "position": "Директор",
                  "start": "2011-01-02"
                }
              ],
              "finished": "true",
              "first_name": "Иван",
              "gender": {
                "id": "male",
                "name": "Мужской"
              },
              "hidden_fields": [
                {
                  "id": "names_and_photo",
                  "name": "ФИО и фотографию"
                },
                {
                  "id": "phones",
                  "name": "Все указанные в резюме телефоны"
                },
                {
                  "id": "email",
                  "name": "Электронную почту"
                },
                {
                  "id": "other_contacts",
                  "name": "Прочие контакты (Skype, ICQ, соцсети)"
                },
                {
                  "id": "experience",
                  "name": "Все места работы"
                }
              ],
              "id": "01234567890abcdef",
              "last_name": "Иванов",
              "marked": "false",
              "middle_name": null,
              "new_views": "0",
              "next_publish_at": "2015-05-10T04:00:00+03:00",
              "paid_services": [
                {
                  "active": "false",
                  "id": "resume_marked",
                  "name": "Яркое резюме"
                }
              ],
              "photo": {
                "40": "https://hhcdn.ru...",
                "100": "https://hhcdn.ru...",
                "500": "https://hhcdn.ru...",
                "id": "1",
                "medium": "https://hhcdn.ru...",
                "small": "https://hhcdn.ru..."
              },
              "platform": {
                "id": "headhunter"
              },
              "salary": {
                "amount": "100000",
                "currency": "RUR"
              },
              "similar_vacancies": {
                "counters": {
                  "total": "0"
                },
                "url": "https://api.hh.ru/resumes/01234567890abcdef/similar_vacancies"
              },
              "status": {
                "id": "published",
                "name": "опубликовано"
              },
              "tags": [
                {
                  "id": "EXPERT_IS_WORKING"
                }
              ],
              "title": "Начинающий специалист",
              "total_experience": {
                "months": "14"
              },
              "total_views": "0",
              "updated": "2015-05-10T00:00:00+03:00",
              "updated_at": "2015-05-10T00:00:00+03:00",
              "url": "https://api.hh.ru/resumes/01234567890abcdef",
              "views_url": "https://api.hh.ru/resumes/01234567890abcdef/views",
              "visible": "true"
            }
          ],
          "page": "0",
          "pages": "1",
          "per_page": "1"
        }
      },
      "MailTemplatesMailTemplates": {
        "value": [
          {
            "employer_state": "PHONE_INTERVIEW",
            "id": "invite_mail",
            "name": "Приглашение на Телефонное интервью",
            "template_modified": "false",
            "text": "Здравствуйте, [Name]!\n\nКомпания [Company] ищет кандидата на вакансию \"[Vacancy]\".\nВаше резюме показалось нам очень интересным.\nПодробное описание вакансии Вы можете найти на сайте [SiteName]\nЗайдите под своим логином и паролем, и на странице \"Отклики на вакансии\" Вы найдете ссылку на описание вакансии.\nЕсли наше предложение Вам интересно, перезвоните, пожалуйста, в рабочее время по телефону [HRPhone] ([HRName]).\n\nС уважением,\n[HRName]",
            "type": "EMAIL",
            "variables": [
              {
                "id": "Name",
                "name": "Имя соискателя"
              },
              {
                "id": "Vacancy",
                "name": "Вакансия"
              },
              {
                "id": "HRName",
                "name": "Моё имя"
              },
              {
                "id": "HRPhone",
                "name": "Мой телефон"
              },
              {
                "id": "HREmail",
                "name": "Моя почта"
              },
              {
                "id": "SiteName",
                "name": "Сайт hh"
              },
              {
                "id": "Company",
                "name": "Компания"
              }
            ]
          },
          {
            "employer_state": "PHONE_INTERVIEW",
            "id": "response_invite_mail",
            "name": "Приглашение откликнувшегося соискателя на Телефонное интервью",
            "template_modified": "false",
            "text": "Здравствуйте, [Name]!\n\nБлагодарим Вас за отклик на вакансию \"[Vacancy]\". Ваше резюме показалось нам очень интересным. Мы хотели бы пригласить Вас на интервью. Перезвоните, пожалуйста, в рабочее время по телефону [HRPhone] ([HRName]).\n\nС уважением,\n[HRName]",
            "type": "EMAIL",
            "variables": [
              {
                "id": "Name",
                "name": "Имя соискателя"
              },
              {
                "id": "Vacancy",
                "name": "Вакансия"
              },
              {
                "id": "HRName",
                "name": "Моё имя"
              },
              {
                "id": "HRPhone",
                "name": "Мой телефон"
              },
              {
                "id": "HREmail",
                "name": "Моя почта"
              },
              {
                "id": "SiteName",
                "name": "Сайт hh"
              },
              {
                "id": "Company",
                "name": "Компания"
              }
            ]
          },
          {
            "employer_state": "PHONE_INTERVIEW",
            "id": "another_vacancy_response_invite_mail",
            "name": "Приглашение на Телефонное интервью на другую вакансию",
            "template_modified": "false",
            "text": "Здравствуйте, [Name]!\n\nВаше резюме показалось нам очень интересным. Мы хотели бы пригласить Вас на интервью. Перезвоните, пожалуйста, в рабочее время по телефону [HRPhone] ([HRName]).\n\nС уважением,\n[HRName]",
            "type": "EMAIL",
            "variables": [
              {
                "id": "Name",
                "name": "Имя соискателя"
              },
              {
                "id": "Vacancy",
                "name": "Вакансия"
              },
              {
                "id": "HRName",
                "name": "Моё имя"
              },
              {
                "id": "HRPhone",
                "name": "Мой телефон"
              },
              {
                "id": "HREmail",
                "name": "Моя почта"
              },
              {
                "id": "SiteName",
                "name": "Сайт hh"
              },
              {
                "id": "Company",
                "name": "Компания"
              }
            ]
          },
          {
            "employer_state": "PHONE_INTERVIEW",
            "id": "invite_sms",
            "name": "Приглашение на Телефонное интервью по СМС",
            "template_modified": "false",
            "text": "Вас приглашает на вакансию [Company] [HRPhone] [HRName]",
            "type": "SMS",
            "variables": [
              {
                "id": "HRName",
                "name": "Моё имя"
              },
              {
                "id": "HRPhone",
                "name": "Мой телефон"
              },
              {
                "id": "HREmail",
                "name": "Моя почта"
              },
              {
                "id": "Company",
                "name": "Компания"
              }
            ]
          }
        ]
      },
      "SuggestsFieldsOfStudy": {
        "value": {
          "items": [
            {
              "id": "382",
              "text": "Холодильная, криогенная техника и кондиционирование (Инженер)"
            }
          ]
        }
      },
      "EmployersEmployerVacancyAreas": {
        "value": {
          "found": "1",
          "items": [
            {
              "id": "1",
              "name": "Москва",
              "url": "https://api.hh.ru..."
            }
          ],
          "page": "0",
          "pages": "1",
          "per_page": "1"
        }
      },
      "VacanciesDeletedVacancyList": {
        "value": {
          "found": "1",
          "items": [
            {
              "address": null,
              "alternate_url": "https://hh.ru/vacancy/8331228",
              "apply_alternate_url": "https://hh.ru/applicant/vacancy_response?vacancyId=8331228",
              "archived": "true",
              "archived_at": "2023-04-25T18:13:13+03:00",
              "area": {
                "id": "1",
                "name": "Москва",
                "url": "https://api.hh.ru/areas/1"
              },
              "counters": {
                "invitations_and_responses": "0",
                "responses": "0"
              },
              "created_at": "2023-04-25T18:13:11+03:00",
              "department": {
                "id": "HH-1455-TECH",
                "name": "HeadHunter::Технический департамент"
              },
              "employer": {
                "alternate_url": "https://hh.ru/employer/1455",
                "id": "1455",
                "logo_urls": {
                  "90": "https://hh.ru/employer-logo/289027.png",
                  "240": "https://hh.ru/employer-logo/289169.png",
                  "original": "https://hh.ru/file/2352807.png"
                },
                "name": "HeadHunter",
                "trusted": "true",
                "url": "https://api.hh.ru/employers/1455"
              },
              "has_test": "false",
              "id": "8331228",
              "name": "Секретарь",
              "premium": "false",
              "published_at": "2013-07-08T16:17:21+04:00",
              "relations": [],
              "response_letter_required": "true",
              "salary": {
                "currency": "RUR",
                "from": "30000",
                "gross": "true",
                "to": null
              },
              "type": {
                "id": "open",
                "name": "Открытая"
              },
              "url": "https://api.hh.ru/vacancies/8331228"
            }
          ],
          "page": "0",
          "pages": "1",
          "per_page": "20"
        }
      },
      "SuggestsSkillSet": {
        "value": {
          "items": [
            {
              "id": "2716",
              "text": "Системы тепло- и холодоснабжения"
            },
            {
              "id": "3019",
              "text": "Холодный цех"
            },
            {
              "id": "3018",
              "text": "Холодные продажи"
            }
          ]
        }
      },
      "SuggestsResumeSearchKeyword": {
        "value": {
          "items": [
            {
              "text": "Москва"
            },
            {
              "text": "Мосты"
            },
            {
              "text": "Московская государственная юридическая академия"
            }
          ]
        }
      },
      "ResumesSuitableResumes": {
        "value": {
          "found": "1",
          "items": [
            {
              "access": {
                "type": {
                  "id": "direct",
                  "name": "доступно только по прямой ссылке"
                }
              },
              "actions": {
                "download": {
                  "pdf": {
                    "url": "https://...?type=pdf"
                  },
                  "rtf": {
                    "url": "https://...?type=rtf"
                  }
                }
              },
              "age": null,
              "alternate_url": "https://...",
              "area": {
                "id": "1",
                "name": "Москва",
                "url": "https://..."
              },
              "certificate": [],
              "created_at": "2023-07-18T14:12:38+03:00",
              "download": {
                "pdf": {
                  "url": "https://.../download/...?type=pdf"
                },
                "rtf": {
                  "url": "https://.../download/...?type=rtf"
                }
              },
              "education": {
                "level": {
                  "id": "master",
                  "name": "Магистр"
                },
                "primary": [
                  {
                    "name": "testUniversity",
                    "name_id": null,
                    "organization": "testFaculty",
                    "organization_id": null,
                    "result": "testSpeciality",
                    "result_id": null,
                    "year": "1988"
                  }
                ]
              },
              "experience": [
                {
                  "area": {
                    "id": "1",
                    "name": "Москва",
                    "url": "https://..."
                  },
                  "company": "Компания",
                  "company_id": null,
                  "company_url": "http://url.ru",
                  "employer": null,
                  "end": "2012-02-06",
                  "industries": [],
                  "industry": {
                    "id": "1",
                    "name": "Банки/кредиты/инвестиции/лизинг"
                  },
                  "position": "Директор",
                  "start": "2011-01-02"
                }
              ],
              "finished": "true",
              "first_name": "Иван",
              "gender": {
                "id": "male",
                "name": "Мужской"
              },
              "has_errors": "false",
              "hidden_fields": [],
              "id": "someid",
              "last_name": "Иванов",
              "marked": "false",
              "middle_name": null,
              "photo": null,
              "platform": {
                "id": "headhunter"
              },
              "requires_completion": "false",
              "salary": null,
              "status": {
                "id": "published",
                "name": "опубликовано"
              },
              "title": "API Test",
              "total_experience": {
                "months": "14"
              },
              "updated_at": "2023-07-18T14:12:38+03:00",
              "url": "https://..."
            }
          ],
          "overall": {
            "already_applied": "0",
            "not_published": "0",
            "unavailable": "0"
          },
          "page": "0",
          "pages": "1",
          "per_page": "1"
        }
      },
      "MetroMetro": {
        "value": [
          {
            "id": "1",
            "lines": [
              {
                "hex_color": "339999",
                "id": "11",
                "name": "Каховская",
                "stations": [
                  {
                    "id": "11.46",
                    "lat": "55.654327",
                    "line": {
                      "hex_color": "88CDCF",
                      "id": "11",
                      "name": "Каховская"
                    },
                    "lng": "37.647705",
                    "name": "Каширская",
                    "order": "1"
                  }
                ]
              }
            ],
            "name": "Москва",
            "url": "https://api.hh.ru/metro/1"
          }
        ]
      },
      "NegotiationsNegotiationsStatisticsEmployer": {
        "value": {
          "employer_statistics": {
            "average_reply_time": "1",
            "politeness": {
              "article_url": "https://hh.ru/article/23734",
              "description": "Индекс вежливости видят соискатели после отклика на вакансию. Компании с низким Индексом теряют доверие соискателей и рискуют пропустить подходящих кандидатов",
              "hint": "Ваш Индекс вежливости выше среднего — это хороший показатель, и все же он может быть лучше!",
              "index": "62",
              "index_change": "0"
            },
            "received": "20",
            "replied_percent": "0",
            "viewed_percent": "23"
          }
        }
      },
      "ServicesEmployerServices": {
        "value": {
          "items": [
            {
              "activated_at": "2018-02-01T12:00:00+03:00",
              "balance": null,
              "expires_at": "2019-01-31T12:00:00+03:00",
              "id": "12345678",
              "service_type": {
                "id": "API_UNLIMITED",
                "name": "Доступ к API HH"
              }
            },
            {
              "activated_at": "2019-02-01T12:00:00+03:00",
              "balance": {
                "actual": "10000",
                "initial": "10000"
              },
              "expires_at": "2020-01-31T12:00:00+03:00",
              "id": "12345680",
              "service_type": {
                "id": "API_LIMITED",
                "name": "Пакет запросов к API HH"
              }
            }
          ]
        }
      },
      "ResumesPostResumeVisibilityListBody": {
        "value": {
          "items": [
            {
              "id": "407"
            },
            {
              "id": "412"
            }
          ]
        }
      },
      "SuggestsVacancySearchKeyword": {
        "value": {
          "items": [
            {
              "text": "Java"
            },
            {
              "text": "JavaScript"
            },
            {
              "text": "Java программист"
            }
          ]
        }
      },
      "Id": {
        "value": {
          "id": "754"
        }
      },
      "SuggestsEducationalInstitutions": {
        "value": {
          "items": [
            {
              "acronym": "МГТУ им. Н.Э. Баумана",
              "area": {
                "id": "1",
                "name": "Москва"
              },
              "id": "38921",
              "synonyms": "бывш. МВТУ им. Н.Э. Баумана",
              "text": "Московский государственный технический университет им. Н.Э. Баумана, Москва"
            }
          ]
        }
      },
      "SuggestsSuggestsAreas": {
        "value": {
          "items": [
            {
              "id": "1",
              "text": "Москва",
              "url": "https://api.hh.ru/areas/1"
            },
            {
              "id": "2019",
              "text": "Московская область",
              "url": "https://api.hh.ru/areas/2019"
            }
          ]
        }
      },
      "DictionariesIndustries": {
        "value": [
          {
            "id": "49",
            "industries": [
              {
                "id": "49.408",
                "name": "Ритуальные услуги"
              }
            ],
            "name": "Услуги для населения"
          }
        ]
      },
      "EmployerManagerId": {
        "value": {
          "id": "78789890"
        }
      },
      "DictionariesFaculties": {
        "value": [
          {
            "id": "23",
            "name": "Физико-химический факультет"
          }
        ]
      },
      "SuggestsCompanies": {
        "value": {
          "items": [
            {
              "area": {
                "id": "113",
                "name": "Россия"
              },
              "id": "1455",
              "industries": [
                {
                  "id": "7.541",
                  "name": "Интернет-компания"
                }
              ],
              "logo_urls": {
                "90": "https://hh.ru/employer-logo/289055.png"
              },
              "text": "HeadHunter",
              "url": "http:/hh.ru"
            }
          ]
        }
      },
      "VacanciesVacancyProlongateUnavailable": {
        "value": {
          "actions": [
            {
              "disable_reason": {
                "id": "standard_plus_publication_is_updated_automatically",
                "name": "Вакансия \"Стандарт Плюс\" не может быть обновлена, это происходит автоматически раз в три дня."
              },
              "enabled": "false",
              "id": "prolongate"
            }
          ],
          "expires_at": "2015-11-19T17:10:48+03:00",
          "id": "123456789"
        }
      }
    },
    "securitySchemes": {
      "OauthToken": {
        "type": "http",
        "description": "Токен доступа для авторизации в формате `Bearer {ACCESS_TOKEN}` (см. [Авторизация](#section/Avtorizaciya))\n",
        "scheme": "bearer"
      }
    }
  },
  "security": [
    {
      "OauthToken": []
    }
  ],
  "tags": [
    {
      "name": "Авторизация приложения",
      "description": "Токен приложения необходимо сгенерировать 1 раз.\nВ случае, если токен был скомпрометирован, его нужно запросить еще раз. При этом ранее выданный токен отзывается.\nВладелец приложения может посмотреть актуальный `access_token` для приложения на сайте [https://dev.hh.ru/admin](https://dev.hh.ru/admin). В случае, если вы еще ни разу [не получали токен приложения](#section/Avtorizaciya/Avtorizaciya-prilozheniya), токен отображаться не будет.\n\n<a name=\"get-client-token\"></a>\n### Получение токена приложения\nДля получения `access_token` необходимо сделать запрос:\n\n```\nPOST https://api.hh.ru/token\n```\n\n(старый запрос `POST https://hh.ru/oauth/token` считается устаревшим)\n\nВ теле запроса необходимо передать [дополнительные параметры](#required_parameters).\nТело запроса необходимо передавать в стандартном\n`application/x-www-form-urlencoded` с указанием соответствующего заголовка `Content-Type`.\n\nДанный `access_token` имеет **неограниченный** срок жизни. При повторном запросе ранее выданный токен отзывается и выдается новый. Запрашивать `access_token` можно не чаще, чем один раз в 5 минут\n"
    },
    {
      "name": "Авторизация соискателя",
      "description": "Методы для получение токена [пользователя](#section/Avtorizaciya/Avtorizaciya-polzovatelya)"
    },
    {
      "name": "Авторизация работодателя",
      "description": "Методы для получение токена [пользователя](#section/Avtorizaciya/Avtorizaciya-polzovatelya)"
    },
    {
      "name": "Черновики вакансий",
      "description": "Методы для работы с черновиками вакансий"
    },
    {
      "name": "Резюме. Работа с телефоном",
      "description": "Действия с резюме соискателя связанные с отправкой/получением информации на его телефон"
    },
    {
      "name": "Резюме. Просмотр информации",
      "description": "Просмотр информации о резюме\n\n## Статус резюме\n\nКлюч `status` определяет текущее состояние резюме и содержит элемент из массива `resume_status` [справочника полей](#tag/Obshie-spravochniki/operation/get-dictionaries).\n\nТолько что созданное резюме находится в статусе `not_published`. В этом статусе оно видно только для пользователя, который может перейти к его заполнению, а также сохранить. Незаполненные обязательные поля перечислены в списке `progress.mandatory`.\n\nПосле того, как все обязательные поля будут заполнены, флаг `can_publish_or_update` перейдет в значение `true`, и резюме можно будет [опубликовать](#tag/Rezyume.-Publikaciya/operation/publish-resume). Публикация резюме переводит его в статус `published`. В этом статусе резюме доступно для поиска, если это позволяет [видимость резюме](#tag/Prosmotr-rezyume/operation/get-resume) (атрибут 'access').\n\nПосле перехода в статус `published`, резюме станет доступно модераторам и может быть заблокировано (статус `blocked`), если поля резюме некорректно или малоинформативно заполнены. Причины блокировки резюме указаны в поле `moderation_note`. Заблокированное резюме пропадает из поиска и не может быть использовано для отклика на вакансию.\n\nПосле исправления, резюме можно отправить на повторное рассмотрение модератору. В этом случае резюме переходит в статус `on_moderation`, откуда может снова перейти в `blocked` или `published`, в зависимости от решения модератора.\n\nПосле публикации резюме (`published`) его нельзя перевести обратно в `not_published`, но можно скрыть, настроив [видимость резюме](#tag/Prosmotr-rezyume/operation/get-resume) (атрибут 'access').\n\nВ статусе `published` резюме можно использовать для [отклика на вакансию](#tag/Vakansii/operation/apply-to-vacancy). Также оно появится в [списке подходящих для отклика](#tag/Rezyume.-Prosmotr-informacii/operation/get-suitable-resumes) для тех вакансий, на которые пользователь еще не откликался данным резюме\n"
    },
    {
      "name": "Менеджеры работодателя",
      "description": "Методы для работы с менеджерами работодателя"
    },
    {
      "name": "Общие справочники",
      "description": "Методы для получения справочной информации, независимые от авторизации"
    },
    {
      "name": "Адреса работодателя",
      "description": "Методы для работы с адресами работодателя"
    },
    {
      "name": "Подсказки",
      "description": "Методы для получения справочной информации в виде списка, элементы которого частично или полностью могут совпадать со значением, отправленным в одном из параметров"
    },
    {
      "name": "Информация о менеджере",
      "description": "Методы для просмотра информации об авторизованном менеджере"
    },
    {
      "name": "Информация о соискателе",
      "description": "Методы для просмотра информации об авторизованном соискателе"
    },
    {
      "name": "Информация о приложении",
      "description": "Методы для просмотра информации о приложении"
    },
    {
      "name": "Информация о работодателе",
      "description": "Методы для получения информации о компании текущего менеджера"
    },
    {
      "name": "Сохраненные поиски вакансий",
      "description": "Сохраненный поиск (автопоиск) — это сохраненный набор параметров поиска, по которому можно отслеживать новые резюме по заданному запросу. Помимо сохранения параметров поисковых запросов, автопоиск позволяет получать оповещения о новых результатах поиска. Для удобства автопоиску можно задавать имя"
    },
    {
      "name": "Сохраненные поиски резюме",
      "description": "Сохраненный поиск (автопоиск) — это сохраненный набор параметров поиска, по которому можно отслеживать новые резюме по заданному запросу. Помимо сохранения параметров поисковых запросов, автопоиск позволяет получать оповещения о новых результатах поиска. Для удобства автопоиску можно задавать имя"
    },
    {
      "name": "Поиск вакансий для соискателя",
      "description": "Методы поиска вакансий доступные соискателю"
    },
    {
      "name": "Поиск вакансий",
      "description": "Методы поиска вакансий, доступные для всех типов авторизации\n\n## Кластеры в поиске вакансий\n\nПри [поиске вакансий](#tag/Poisk-vakansij/operation/get-vacancies) иногда требуется получить информацию о том, как вакансии распределены по тому или иному критерию поиска. Например, в каком количестве вакансий указана зарплата, или в каком она больше определенной суммы. Чтобы получить эти данные обычным методом, нужно формировать отдельный запрос на каждый интересующий критерий.\n\nЗначительно проще воспользоваться специальной возможностью поиска — разбиением данных на кластеры. Кластер содержит ссылку на поисковую выдачу вакансий, которые отвечают заданным критериям. Пример использования кластеров на сайте hh.ru можно увидеть в левой колонке на [странице результатов поиска вакансий](https://hh.ru/search/vacancy).\n\nКластеры объединены в группы (элементы массива `clusters`). В группу попадают кластеры со значениями одного типа. Например, группа `Зарплата` может содержать кластеры `от 45000 руб.` и `от 75000 руб.`. Набор групп кластеров зависит от параметров поискового запроса. Список всех возможных групп кластеров содержится в [справочнике полей](#tag/Obshie-spravochniki/operation/get-dictionaries) в поле `vacancy_cluster`.\n\nЧтобы получить данные по кластерам, передайте в поисковом запросе параметр `?clusters=true`. В ответе, помимо стандартной поисковой выдачи, вернется разбивка вакансий по кластерам.\n\nЧтобы получить в ответе только кластеры, без стандартной поисковой выдачи, укажите в запросе `?per_page=0`\n"
    },
    {
      "name": "Переписка (отклики/приглашения) для соискателя",
      "description": "Документация по *переписке для работодателя доступна в [отдельной статье](#negotiation_workflow).*\n\nВ процессе использования сайта соискатели выбирают вакансии.  Для того чтобы\nсвязаться с работодателем на предмет трудоустройства, соискатель может\nоткликнуться на выбранную вакансию. Так же и работодатель, найдя интересное\nрезюме, может предложить соискателю рассмотреть вакансию (приглашение).\n\nДля указанных целей служат специальные сущности — отклики/приглашения.  В них\nможет быть указана вакансия, резюме и переписка соискателя с работодателем, в\nкаждый момент времени такие сущности находятся в одном из состояний. Переход\nмежду состояниями сопровождается появлением сообщений с опциональным текстовым\nописанием и прочими полями. Сообщения со статусом `null` не переводят весь\nотклик в новое состояние.\n\nЧтобы связаться с работодателем, соискатель может откликнуться на выбранную вакансию. Работодатель также может пригласить соискателя рассмотреть вакансию.\n\nВ сервисе для этого используются специальные сущности — _отклики/приглашения_. В них может быть указана вакансия, резюме и переписка соискателя с работодателем.\n\nВ каждый момент времени отклик/приглашение находится в одном из состояний (`state`, `consider`, `response`, `invitation` и др.) и не может находиться в двух состояниях одновременно. Сообщения со статусом `null` не переводят весь отклик в новое состояние.\n\nПодробнее о концепции откликов/приглашений см. в разделе [Переписка (отклики/приглашения) для работодателя](https://github.com/hhru/api/blob/master/docs/employer_negotiations.md)\n"
    },
    {
      "name": "Управление вакансиями",
      "description": "Методы для работы с вакансиями от имени менеджера работодателя.\n## Восстановление вакансии из архива\n\nДля восстановления вакансии необходимо использовать метод публикации и руководствоваться правилом использования параметра previous_id, описанным в [методе](#previous_id)\n"
    },
    {
      "name": "Webhook API",
      "description": "Методы для управления подписками на уведомления.\nОписание полей колбэков находится в разделе [Callbacks](#callbacks)\n"
    },
    {
      "name": "Отклики/приглашения работодателя",
      "description": "Общие сведения для работы с отликами/приглашениями\n\n  <a name=\"negotiation_workflow\"></a>\n  ### Модель работы, термины и процедуры\n\n  Отклики и приглашения соответствуют модели, которая выражается в запросах и\n  ответах API. Если приложение использует модель правильно, то изменение\n  бизнес-логики откликов и приглашений не будет требовать переработки или\n  исправления.\n  \n  В откликах и приглашениях используются понятия:\n  \n  * *отклик* – объект, порождённый по инициативе соискателя (отклик на вакансию).\n  Отклик всегда происходит одним резюме на одну вакансию.\n  \n  * *приглашение* – объект, порождённый по инициативе работодателя (приглашение на вакансию).\n  Приглашение всегда происходит к одному резюме на одну вакансию.\n  \n  Кроме процесса появления объекта, работа с откликом или приглашением происходит\n  одинаково.\n  \n  * <a name=\"term-collection\"></a> *коллекция* – набор откликов/приглашений,\n  объединённых по определённым критериям. Коллекции используются, когда в вашем\n  приложении требуется **отобразить** список откликов/приглашений. Не стоит\n  полагаться на то, что в определённые этапы обработки отклика/приглашения\n  оно будет входить в известные коллекции, так как эта логика может изменяться.\n  \n  * <a name=\"term-state\"></a> *соискательское состояние отклика/приглашения* –\n  статус отклика/приглашения ([поле `state`](#tag/Otklikipriglasheniya-rabotodatelya/operation/get-collection-negotiations-list)), который **видит соискатель**. Возможные значения\n  выдаются [в справочнике `negotiations_state`](#tag/Obshie-spravochniki/operation/get-dictionaries) и\n  не зависят от вакансии в отклике/приглашении.\n  \n  * <a name=\"term-employer-state\"></a> *работодательское состояние отклика/приглашения* –\n  статус отклика/приглашения у работодателя. Может отличаться от\n  соискательского. Список возможных статусов\n  **зависит от вакансии и работодателя**, поэтому список\n  [необходимо запрашивать](#tag/Otklikipriglasheniya-rabotodatelya/operation/get-negotiations), передавая нужную вакансию.\n  \n  * <a name=\"term-action\"></a> *действие по отклику/приглашению* – действие, которое\n  можно выполнить над откликом/приглашением. В результате действия\n  работодательское и соискательское состояния отклика/приглашения могут как\n  поменяться, так и остаться прежними.\n  \n  Не следует путать *действие*, *коллекцию* и *состояние* – они могут быть похожи,\n  но предназначены для разных целей.\n  \n  ### Общее описание процесса работы с откликами/приглашениями\n  \n  Вся работа с откликами/приглашениями происходит в рамках\n  **одной выбранной вакансии**. Даже у одного работодателя могут быть вакансии\n  с различными правилами работы по откликам/приглашениям.\n  \n  Сначала необходимо получить список\n  [коллекций и работодательских состояний](#tag/Otklikipriglasheniya-rabotodatelya/operation/get-negotiations). Используйте коллекции\n  для **получения списков откликов/приглашений**. Предлагайте пользователю\n  выбирать, какую из коллекций он хочет получить. Для получения всех\n  откликов/приглашений нужно последовательно получить все коллекции. Список\n  состояний используется только как справочник.\n  \n  Для **создания приглашения** необходимо запросить вакансии работодателя,\n  применимые к выбранному резюме. Получить эту информацию можно в\n  [списке вакансий работодателя](#tag/Upravlenie-vakansiyami/operation/get-active-vacancy-list), там же\n  будут указаны необходимые параметры (ключ `arguments`) и состояние созданного\n  отклика (ключ `resulting_employer_state`). У разных работодателей и разных\n  вакансий могут быть различные правила и состояния добавляемого отклика. Для\n  каждой пары *вакансия + резюме* может быть только один отклик/приглашение.\n  \n  Для создания приглашения, работодатель должен иметь активированный доступ к базе\n  резюме. Для работы с существующим откликом/приглашением доступ не требуется. Это\n  позволяет обрабатывать отклики на вакансии, даже не имея доступ к базе резюме.\n  \n  Если вам необходимо **совершить действие** по отклику/приглашению,\n  ориентируйтесь на [список действий](https://github.com/hhru/api/blob/master/docs/employer_negotiations.md#actions-info), который будет доступен в\n  [списке (коллекции) откликов/приглашений](#tag/Otklikipriglasheniya-rabotodatelya/operation/get-collection-negotiations-list) и в\n  [отдельном отклике/приглашении](#tag/Otklikipriglasheniya-rabotodatelya/operation/get-negotiation-item). Если действие приводит\n  к смене состояния по отклику/приглашению, это будет явно указано в ключе\n  `resulting_employer_state`. Не все действия приводят к смене состояния.\n  \n  После приглашения соискателя вы можете начать с ним\n  [свободную переписку](https://github.com/hhru/api/blob/master/docs/employer_negotiations.md#get-messages). Вы сможете\n  [отправлять сообщения](#tag/Otklikipriglasheniya-rabotodatelya/operation/send-negotiation-message), а соискатель — вам отвечать.\n  При необходимости переписку для конкретной вакансии\n  [можно отключить](#tag/Vakansii/operation/get-vacancy) (поле `allow_messages`).\n  \n  Чтобы соискательский отклик считался просмотренным работодателем, необходимо сделать одно из следующих действий:\n  * запросить список сообщений по URL,\n  пришедшему при запросе [списка (коллекции) откликов/приглашений](#tag/Otklikipriglasheniya-rabotodatelya/operation/get-collection-negotiations-list) или\n  [отдельного отклика/приглашения](#tag/Otklikipriglasheniya-rabotodatelya/operation/get-negotiation-item),\n  * [запросить сообщения](https://github.com/hhru/api/blob/master/docs/employer_negotiations.md#get-messages) по отклику,\n  * запросить резюме по URL, пришедшему при запросе [списка (коллекции) откликов/приглашений](#tag/Otklikipriglasheniya-rabotodatelya/operation/get-collection-negotiations-list)\n  или [отдельного отклика/приглашения](#tag/Otklikipriglasheniya-rabotodatelya/operation/get-negotiation-item)\n  * с помощью отдельного метода [отметить определенные отклики как прочитанные](#tag/Otklikipriglasheniya-rabotodatelya/operation/post-negotiations-topics-read)\n"
    },
    {
      "name": "Поиск резюме",
      "description": "Поиск резюме\n## Примеры поисковых запросов\n\n* `GET /resumes?text=программист` – найдет все резюме, в любом месте которого\nвстречается заданное слово 'программист'.\n\n* `GET /resumes?text=программист&text=java` – найдет резюме, в любом месте\nкоторого встречаются слова 'программист' и 'java'.\n\n* `GET /resumes?text=программист%20java&text.logic=any&text.field=everywhere&text.period=all_time` –\nнайдет резюме, в любом месте которого встречается любое из слов заданной\nфразы в параметре `text` ('программист' или 'java'). При использовании\nдополнительных полей, они должны быть указаны все.\n\n* `GET /resumes?text=Headhunter&text.logic=all&text.field=experience&text.period=last_three_years` –\nнайдет все резюме, в опыте работы которых за последние 3 года встречается\n'Headhunter'.\n\n* `GET /resumes?text=менеджер%20проекта&text.logic=all&text.field=experience%2Cskills&text.period=last_year&text=ответственный&text.logic=all&text.field=everywhere&text.period=all_time` –\nнайдет все резюме, в опыте работы за последний год и ключевых навыках которых\nвстречаются слова 'менеджер' и 'проекта', а также слово 'ответственный'\nв любом месте резюме. Отметим, что дополнительные параметры\n`text.logic=all&text.field=experience%2Cskills&text.period=last_year`\nуказаны для `text=менеджер%20проекта`, а\n`text.logic=all&text.field=everywhere&text.period=all_time` для параметра\n`text=ответственный`\n"
    }
  ],
  "x-tagGroups": [
    {
      "name": "Работодатель",
      "tags": [
        "Авторизация работодателя",
        "Информация о менеджере",
        "Информация о работодателе",
        "Черновики вакансий",
        "Услуги работодателя",
        "Менеджеры работодателя",
        "Адреса работодателя",
        "Webhook API",
        "Комментарии к соискателю",
        "Отклики/приглашения работодателя",
        "Управление вакансиями",
        "Сохраненные поиски резюме",
        "Поиск резюме",
        "Просмотр резюме",
        "Банк данных о зарплатах"
      ]
    },
    {
      "name": "Соискатель",
      "tags": [
        "Авторизация соискателя",
        "Резюме. Работа с телефоном",
        "Резюме. Создание и обновление",
        "Резюме. Публикация",
        "Резюме. Просмотр информации",
        "Резюме. Условия заполнения полей",
        "Поиск вакансий для соискателя",
        "Резюме. Списки видимости",
        "Вакансии",
        "Скрытые вакансии",
        "Скрытые работодатели",
        "Отобранные вакансии",
        "Сохраненные поиски вакансий",
        "Информация о соискателе",
        "Работа с артефактами",
        "Переписка (отклики/приглашения) для соискателя"
      ]
    },
    {
      "name": "Общедоступные методы",
      "tags": [
        "Поиск вакансий",
        "Общие справочники",
        "Подсказки",
        "Работодатель",
        "Справочники Банка данных заработных плат"
      ]
    },
    {
      "name": "Приложение",
      "tags": [
        "Авторизация приложения",
        "Информация о приложении"
      ]
    },
    {
      "name": "Интеграция работодателя",
      "tags": []
    }
  ]
}